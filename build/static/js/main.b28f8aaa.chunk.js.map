{"version":3,"sources":["components/Card/Card.js","components/Card/CardBody.js","components/Charts/BarChart.js","components/Charts/LineChart.js","components/Card/CardHeader.js","components/Tables/TableRow/TableRow2.js","controller/urls_config.js","controller/UserloginCtrl.js","assets/img/signInImage.png","views/Pages/SignIn.js","views/Home/GeneralInformation/GeneralInformation0.js","components/Tables/TableRow/TableRow8.js","views/Pages/InternationalData/InternationalData0.js","components/Tables/TableRow/TableRow6.js","components/Tables/TableRow/TableRow5.js","views/Pages/ExtraCurricularData/ExtraCurricularData0.js","views/Pages/AcademicData/Academicdata0.js","components/Tables/TableRow/TableRow7.js","views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData0.js","controller/changepassword.js","assets/img/ProfileBackground.png","views/Home/Profile/Profile0.js","components/Icons/Icons.js","routes0.js","views/Pages/GeneralInformationData/GeneralInformationdata1.js","views/Pages/GeneralInformationData/GeneralInformationdata2.js","views/Pages/GeneralInformationData/GeneralInformationdata3.js","views/Pages/GeneralInformationData/GeneralInformationdata4.js","components/Tables/InternationalTableRow/InternationalTableRow1.js","views/Pages/InternationalData/InternationalData1.js","components/Tables/InternationalTableRow/InternationalTableRow2.js","views/Pages/InternationalData/InternationalData2.js","views/Pages/InternationalData/InternationalData3.js","views/Pages/InternationalData/InternationalData4.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularClubTableRow1.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularOutreachTableRow1.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularSportsTableRow1.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularCulturalsTableRow1.js","views/Pages/ExtraCurricularData/ExtraCurricularData1.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularClubTableRow2.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularOutreachTableRow2.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularSportsTableRow2.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularCulturalsTableRow2.js","views/Pages/ExtraCurricularData/ExtraCurricularData2.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularClubTableRow3.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularOutreachTableRow3.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularSportsTableRow3.js","components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularCulturalsTableRow3.js","views/Pages/ExtraCurricularData/ExtraCurricularData3.js","views/Pages/ExtraCurricularData/ExtraCurricularData4.js","views/Pages/AcademicData/Academicdata1.js","views/Pages/AcademicData/Academicdata2.js","views/Pages/AcademicData/Academicdata3.js","views/Pages/AcademicData/Academicdata4.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDIndustrialVisitTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDInplantTrainingTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDGuestlectureTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDMotivationalTalkTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDInternshipTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDCoursesTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDWorkshopTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDWebinarTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDCompetitionsTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDPlacementTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDMiniProjectTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDFinalprojectTR1.js","components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDPublicationsTR1.js","views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData1.js","views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData2.js","views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData3.js","views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData4.js","views/Pages/Edit/GeneralInformationDataEdit.js","views/Pages/Edit/GeneralInformationDataEdit4.js","views/Pages/Edit/GeneralInformationdata.js","views/Home/Admin Controls/AdminControlCreate.js","views/Home/Admin Controls/AdminControlEdit.js","views/Pages/Error404.js","views/Pages/ServerError.js","routes.js","theme/styles.js","theme/foundations/breakpoints.js","theme/components/button.js","theme/additions/card/Card.js","theme/additions/card/CardBody.js","theme/additions/card/CardHeader.js","theme/additions/layout/MainPanel.js","theme/additions/layout/PanelContent.js","theme/additions/layout/PanelContainer.js","theme/theme.js","theme/foundations/fonts.js","theme/components/badge.js","theme/components/link.js","theme/components/drawer.js","components/Separator/Separator.js","components/Configurator/Configurator.js","assets/img/avatars/avatar1.png","assets/img/avatars/avatar2.png","assets/img/avatars/avatar3.png","components/Icons/IconBox.js","components/Sidebar/Sidebar.js","components/Navbars/AdminNavbarLinks.js","components/Navbars/AdminNavbar.js","components/Layout/MainPanel.js","components/Layout/PanelContainer.js","components/Layout/PanelContent.js","components/Charts/BarChartInternship2.js","components/Charts/BarChartPlacement2.js","components/Charts/LineChartAcademics1.js","components/Charts/BarChartAcademicSummary1.js","components/Tables/StudentList/StudentListGI1.js","views/Home/GeneralInformation/GeneralInformation1.js","components/Tables/StudentList/StudentListInternational1.js","views/Home/InternationalExposure/InternationalExposure1.js","components/Tables/StudentList/StudentListExtraCurricular1.js","views/Home/ExtraCurricular/Extracurricular1.js","components/Tables/StudentList/StudentListAcademic1.js","views/Home/Academic/Academic1.js","components/Tables/StudentList/StudentListProfessionalDevelopment1.js","views/Home/ProfessionalDevelopment/ProfessionalDevelopment1.js","views/Home/Profile/Profile1.js","routes1.js","views/Home/DashBoard/Dashboard1.js","components/Charts/LineChartAcademics2.js","components/Charts/BarChartAcademicSummary2.js","components/Tables/StudentList/StudentListGI2.js","views/Home/GeneralInformation/GeneralInformation2.js","components/Tables/StudentList/StudentListInternational2.js","views/Home/InternationalExposure/InternationalExposure2.js","components/Tables/StudentList/StudentListExtraCurricular2.js","views/Home/ExtraCurricular/Extracurricular2.js","components/Tables/StudentList/StudentListAcademic2.js","views/Home/Academic/Academic2.js","components/Tables/StudentList/StudentListProfessionalDevelopment2.js","views/Home/ProfessionalDevelopment/ProfessionalDevelopment2.js","views/Home/Profile/Profile2.js","routes2.js","views/Home/DashBoard/Dashboard2.js","components/Charts/BarChartInternship3.js","components/Charts/BarChartPlacement3.js","components/Tables/StudentList/StudentListGI3.js","views/Home/GeneralInformation/GeneralInformation3.js","components/Tables/StudentList/StudentListInternational3.js","views/Home/InternationalExposure/InternationalExposure3.js","components/Tables/StudentList/StudentListExtraCurricular3.js","views/Home/ExtraCurricular/Extracurricular3.js","components/Tables/StudentList/StudentListProfessionalDevelopment3.js","views/Home/ProfessionalDevelopment/ProfessionalDevelopment3.js","components/Tables/StudentList/StudentListAcademic3.js","views/Home/Academic/Academic3.js","views/Home/Profile/Profile3.js","routes3.js","views/Home/DashBoard/Dashboard3.js","components/Tables/StudentList/StudentListGI4.js","views/Home/GeneralInformation/GeneralInformation4.js","components/Tables/StudentList/StudentListInternational4.js","views/Home/InternationalExposure/InternationalExposure4.js","components/Tables/StudentList/StudentListExtraCurricular4.js","views/Home/ExtraCurricular/Extracurricular4.js","components/Tables/StudentList/StudentListProfessionalDevelopment4.js","views/Home/ProfessionalDevelopment/ProfessionalDevelopment4.js","components/Tables/StudentList/StudentListAcademic4.js","views/Home/Academic/Academic4.js","components/Tables/CredentialList.js","views/Home/Admin Controls/AdminControl.js","views/Home/Profile/Profile4.js","routes4.js","views/Home/DashBoard/Dashboard4.js","index.js","layouts/Auth.js","layouts/Admin0.js","layouts/Admin1.js","layouts/Admin2.js","layouts/Admin3.js","layouts/Admin4.js"],"names":["Card","props","variant","children","rest","styles","useStyleConfig","__css","CardBody","BarChartComponent","state","chartData","name","data","chartOptions","chart","toolbar","show","tooltip","style","backgroundColor","fontSize","fontFamily","undefined","onDatasetHover","theme","xaxis","categories","labels","colors","axisBorder","axisTicks","yaxis","color","grid","fill","dataLabels","enabled","plotOptions","bar","borderRadius","columnWidth","responsive","breakpoint","options","py","height","sm","width","bg","position","this","series","type","Component","LineChartComponent","lineChartOptions","CardHeader","TableRow2","field","textColor","useColorModeValue","minWidth","md","lg","xl","align","flexWrap","direction","marginLeft","fontWeight","URL","server_URL","handleLogin","loginButton","document","getElementById","disabled","innerHTML","display","params","URLSearchParams","append","value","email","axios","post","then","result","console","log","includes","email_id","filter","word","length","other_users_check","window","location","href","localStorage","setItem","check","user_type","dept","batch","roll_no","auth_token","user_name","login","e","preventDefault","SignIn","titleColor","mb","h","w","maxW","mx","justifyContent","pt","mt","ms","base","boxSize","objectFit","src","signInImage","alt","alignItems","userSelect","background","p","onSubmit","id","placeholder","size","flexDirection","_hover","_active","onClick","Loader","require","GData","GeneralInformationdata","useState","setData","Loaded","setLoading","useToast","getItem","items","loaded","columns","gap","overflowX","map","item","sname","reg_no","gender","dob","nationality","religion","if_catholic_parish","dalit_catholic_yn","community","blood_group","mother_tongue","contact_no","aadhar_no","licet_email","present_address","permanent_address","hse_school_name","hse_board","hse_medium","hse_sec_lang","hse_group","hse_marks","hse_percentage","hse_cutoff","hse_attempts","sslc_school_name","sslc_board","sslc_medium","sslc_sec_lang","sslc_marks","sslc_percentage","sslc_attempts","father_name","father_qualification","father_occupation","father_office_address","father_annual_income","father_mob_no","father_email","guardian_name","guardian_qualification","guardian_occupation","guardian_office_address","guardian_annual_income","guardian_mob_no","guardian_email","mother_name","mother_qualification","mother_occupation","mother_office_address","mother_annual_income","mother_mob_no","mother_email","no_of_siblings","name_siblings","qualification_siblings","occupation_siblings","alumni_licet_loyola_yn","application_no","date_of_ad","quota","regular_lateral_rl","dayschl_hosteller_dh","scholarship_name","scholarship_amount","first_graduate_yn","eco_backward_yn","programming_languages","software_proficiency","dept_rel_proficiency","certifications","other_skills","aptitude_analytical_skills","communication_skills","social_media_exposure","leadership_skills","other_interpersonal_skills","short_term_goal","long_term_goal","membership_name","membership_no","membership_duration","TableRow8","resul","row1","row2","row3","row4","row5","row6","row7","row8","InternationalData","useDisclosure","isOpen","onOpen","onClose","Null_message","useEffect","a","setShow","my","pl","s_no","foreign_campus","duration","project","outcome","personal_development","foreign_language_courses","credits","verify","in","animateOpacity","reload","colorScheme","mr","me","Add","TableRow6","TableRow5","ExtraCurricularData","drop1","setDrop1","drop2","setDrop2","drop3","setDrop3","drop4","setDrop4","show2","setShow2","show3","setShow3","show4","setShow4","Cdata","setCdata","Odata","setOdata","Sdata","setSdata","Fdata","setFdata","all","spread","data1","data2","data3","data4","item1","club_name","date","activity_name","verified","outreach_activity_name","outreach_date","outreach_outcome","outreach_credits","outreach_verified","sport_name","representation","position_secures","isRequired","row","event_name","Academicdata","setdata","Adata","setAdata","filtered_data","header","COLUMN_NAME","student_data","i","student","Object","values","splice","push","TableRow7","ProfessionalDevelopmentData0","drop5","setDrop5","drop6","setDrop6","drop7","setDrop7","drop8","setDrop8","drop9","setDrop9","drop10","setDrop10","drop11","setDrop11","drop12","setDrop12","drop13","setDrop13","show5","setShow5","show6","setShow6","show7","setShow7","show8","setShow8","show9","setShow9","show10","setShow10","show11","setShow11","show12","setShow12","show13","setShow13","p1data","setp1data","p2data","setp2data","p3data","setp3data","p4data","setp4data","p5data","setp5data","p6data","setp6data","p7data","setp7data","p8data","setp8data","p9data","setp9data","p10data","setp10data","p11data","setp11data","p12data","setp12data","p13data","setp13data","data5","data6","data7","data8","data9","data10","data11","data12","data13","industry_name","item2","industry","item3","topic","resource_person","item4","item5","company_name","reference","item6","course_name","item7","Resource","item8","resorce_person","item9","comp_name","comp_type","position_secured","item10","aptitude","soft_skills","reasoning","technical_training","item11","project_title","objective","item12","title","item13","conf_or_journal","impact_factor","indexed_in","change_pass","pcbtn","oldPass","newPass","rePass","useremail","Profile","cell","year","bgProfile","borderProfileColor","emailColor","now","Date","updated_year","parseInt","getFullYear","substr","px","bgImage","ProfileBgImage","bgSize","bgPosition","bgRepeat","maxH","backdropFilter","boxShadow","border","borderColor","transform","textAlign","maxWidth","placement","leftIcon","Settings","Edit","m","oldpass","newpass","repass","checknum","match","checklower","checkupper","checksymbol","passlen","CreditIcon","createIcon","displayName","viewBox","path","d","DocumentIcon","rx","x1","y1","x2","y2","gradientUnits","offset","HomeIcon","stroke","PersonIcon","xmlns","cx","cy","r","ProfileIcon","RocketIcon","SettingsIcon","StatsIcon","dashRoutes","icon","component","GeneralInformation","layout","whiteSpace","wordWrap","lineHeight","Academicsdata","secondaryNavbar","toast","lang_know","fundelete","status","isClosable","InternationalTableRow","alignSelf","defaultValue","cid","cn","cd","cp","co","cpd","cf","funedit","funverify","ExtraCurricularTableRow","results","CUdata","setCudata","ProfessionalDevelopmentTableRow","ProfessionalDevelopmentData1","ProfessionalDevelopmentData2","ProfessionalDevelopmentData3","GeneralInformationDataEdit","pan","marginBottom","marginTop","marginRight","label","AdminControlCreate","AdminControlEdit","Error404","ServerError","GeneralInformationdata1","GeneralInformationdata2","GeneralInformationdata3","GeneralInformationdata4","GeneralInformationDataEdit4","InternationalData1","InternationalData2","InternationalData3","InternationalData4","ExtraCurricularData1","ExtraCurricularData2","ExtraCurricularData3","ExtraCurricularData4","Academicdata1","Academicdata2","Academicdata3","Academicdata4","ProfessionalDevelopmentData4","globalStyles","gray","global","body","mode","html","breakpoints","createBreakpoints","buttonStyles","components","Button","variants","cursor","_focus","baseStyle","CardComponent","backgroundClip","panel","colorMode","defaultProps","CardBodyComponent","CardHeaderComponent","MainPanelComponent","MainPanel","float","overflow","maxHeight","transition","transitionDuration","transitionProperty","transitionTimingFunction","main","rtl","PanelContentComponent","PanelContent","paddingLeft","paddingRight","PanelContainerComponent","PanelContainer","padding","minHeight","extendTheme","Badge","sizes","textTransform","Link","decoration","textDecoration","Drawer","bgColor","Separator","Configurator","rtlActive","secondary","fixed","isChecked","switched","setSwitched","useColorMode","toggleColorMode","fixedDisplay","settingsRef","React","useRef","finalFocusRef","blockScrollOnMount","ps","pe","paddingBottom","onChange","event","onSwitch","IconBox","SidebarResponsive","useLocation","mainPanel","logoText","routes","links","createLinks","activeBg","inactiveBg","activeColor","inactiveColor","prop","key","redirect","category","rtlName","views","to","routeName","pathname","Icon","documentElement","dir","hamburgerColor","brand","process","target","btnRef","ref","Hamburger","Sidebar","variantChange","sidebarVariant","sidebarActiveShadow","sidebarBg","sidebarRadius","sidebarMargins","HeaderLinks","navbarIcon","AdminNavbar","scrolled","setScrolled","brandText","mainText","secondaryText","navbarPosition","navbarFilter","navbarBackdrop","navbarShadow","navbarBg","navbarBorder","secondaryMargin","paddingX","addEventListener","scrollY","borderWidth","borderStyle","transitionDelay","minH","pb","right","paddingTop","top","BarChartInternship","setChartData","setchartOptions","intern_lst","batches","BarChartPlacement","placement_lst","LineChart","setbatches","batched_result","set_batched_result","curve","legend","strokeDashArray","set_linechartOptions","keys","exams","res","justify","BarChartAcademicSummary","BarChart","StudentListGeneral","reg","roll","Radius","searchTerm","setSearchTerm","toLowerCase","toLocaleLowerCase","inputBg","mainorange","searchIconColor","Search","StudentListInternational","InternationalExposure","StudentListExtraCurricular","Extracurricular","StudentListAcademic","Academic","file","setfile","onToggle","rounded","shadow","files","formData","FormData","headers","onFileUpload","saveAs","StudentListProfessionalDevelopment","ProfessionalDevelopment","ca_email","ca_dept","toUpperCase","ca_batch","GeneralParticularstablerow","GeneralInformationHOD","searchTerm1","setSearchTerm1","searchTerm2","hod_email","hod_dept","GeneralInformation3","setData3","setData4","setSearchTerm2","off_email","off_name","split","InternationalExposure3","CredentialList","setresult","password","fun_reload","lower","setTimeout","cred_edit","cred_delete","onCloseComplete","AdminControl","temp","ReactDOM","render","wrapper","createRef","navRef","resetCss","getRoutes1","routes1","collapse","getRoutes","from","setSidebarVariant","setFixed","getActiveNavbar","categoryActiveNavbar","indexOf","getActiveRoute","activeRoute","collapseActiveRoute","categoryActiveRoute","onOpaque","onTransparent"],"mappings":"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","file":"static/js/main.b28f8aaa.chunk.js","sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction Card(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"Card\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default Card;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction CardBody(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"CardBody\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default CardBody;\n","import React, { Component } from \"react\";\nimport Card from \"components/Card/Card\";\nimport Chart from \"react-apexcharts\";\n\nclass BarChartComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [\n        {\n          name: \"Academic Summary\",\n          data: props.chartData,\n        },\n      ],\n      chartOptions: {\n        chart: {\n          toolbar: {\n            show: false,\n          },\n        },\n        tooltip: {\n          style: {\n            backgroundColor: \"red\",\n            fontSize: \"12px\",\n            fontFamily: undefined,\n          },\n          onDatasetHover: {\n            style: {\n              backgroundColor: \"red\",\n              fontSize: \"12px\",\n              fontFamily: undefined,\n            },\n          },\n          theme: \"dark\",\n        },\n        xaxis: {\n          categories: props.categories,\n          show: true,\n          labels: {\n            show: true,\n            style: {\n              colors: \"#fff\",\n              fontSize: \"12px\",\n            },\n          },\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n        yaxis: {\n          show: true,\n          color: \"#fff\",\n          labels: {\n            show: true,\n            style: {\n              colors: \"#fff\",\n              fontSize: \"14px\",\n            },\n          },\n        },\n        grid: {\n          show: false,\n        },\n        fill: {\n          colors: \"#fff\",\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 8,\n            columnWidth: \"12px\",\n          },\n        },\n        responsive: [\n          {\n            breakpoint: 768,\n            options: {\n              plotOptions: {\n                bar: {\n                  borderRadius: 0,\n                },\n              },\n            },\n          },\n        ],\n      },\n    };\n  }\n\n  render() {\n    return (\n      <Card\n        py=\"1rem\"\n        height={{ sm: \"200px\" }}\n        width=\"100%\"\n        bg=\"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\"\n        position=\"relative\"\n      >\n        <Chart\n          options={this.state.chartOptions}\n          series={this.state.chartData}\n          type=\"bar\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </Card>\n    );\n  }\n}\n\nexport default BarChartComponent;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nfunction LineChartComponent(props) {\n  return (\n    <ReactApexChart\n      options={props.lineChartOptions}\n      series={props.series}\n      width=\"100%\"\n      height=\"100%\"\n    />\n  );\n}\n\nexport default LineChartComponent;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction CardHeader(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"CardHeader\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default CardHeader;\n","/** @format */\n\n//Table with 2 columns\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TableRow2(props) {\n  const { field, data } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"44vw\", md: \"30vw\", lg: \"10em\", xl: \"13vw\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              marginLeft=\"1em\"\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"bold\"\n              minWidth=\"100%\"\n            >\n              {field}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"1vw\", md: \"1vw\", lg: \"1vw\", xl: \"1vw\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"light-bold\"\n              minWidth=\"100%\"\n            >\n              :\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"70vw\", md: \"52vw\", lg: \"12em\", xl: \"18vw\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"light-bold\"\n              minWidth=\"100%\"\n            >\n              {data}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default TableRow2;\n","// Change urls according to deployed server.\n\n// Deployment URLS\nexport let URL = \"http://192.168.1.145:80/\",\n  server_URL = \"http://192.168.1.145:8080/\";\n\n// Dev URLS\n// export let URL = \"http://192.168.1.145:3000/\",\n//   server_URL = \"http://192.168.1.145:5000/\";\n","/** @format */\n\nimport axios from \"axios\";\nimport { URL, server_URL } from \"./urls_config\";\n\nfunction other_users_check(email_id) {\n  // Add official keywords\n  let keywords = [\"hod\", \"advisor\", \"iqac\", \"dean\", \"principal\",\"admin\"];\n  const result = keywords.filter((word) => email_id.includes(word));\n  console.log(result)\n  return result.length != 0 ? true : false;\n}\n\nexport default function handleLogin() {\n  const loginButton = document.getElementById(\"login_btn\");\n  loginButton.disabled = true;\n  loginButton.innerHTML = `<div class=\"spinner1\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>`;\n  document.getElementById(\"pass-fail\").style.display = \"none\";\n  document.getElementById(\"email-fail\").style.display = \"none\";\n  document.getElementById(\"server-fail\").style.display = \"none\";\n\n  let params = new URLSearchParams();\n  params.append(\"email\", document.getElementById(\"emailId\").value);\n  params.append(\"password\", document.getElementById(\"password\").value);\n\n  let email = document.getElementById(\"emailId\").value;\n\n  axios.post(server_URL + \"userlogin\", params).then((result) => {\n    // Check 1: email belongs to licet domain and user not present\n    console.log(result.data)\n    if (\n      result.data == \"user-fail\" &&\n      email.includes(\"@licet.ac.in\") &&\n      !other_users_check(email)\n    ) {\n      window.location.href = URL + \"Student#/auth/GeneralInformationdata\";\n    }\n\n    // Check 2: invalid user\n    else if (result.data === \"user-fail\") {\n      document.getElementById(\"email-fail\").style.display = \"block\";\n      localStorage.setItem(\"auth_token\", -1);\n      loginButton.disabled = false;\n      loginButton.innerHTML = `Login`;\n\n      // Check 3: invalid password\n    } else if (result.data === \"pass-fail\") {\n      console.log(\"Incorrect password\");\n      document.getElementById(\"pass-fail\").style.display = \"block\";\n      localStorage.setItem(\"auth_token\", -1);\n      loginButton.disabled = false;\n      loginButton.innerHTML = `Login`;\n\n      // Server Issue\n    } else if (result.data === \"server-down\") {\n      localStorage.setItem(\"auth_token\", -1);\n      document.getElementById(\"server-fail\").style.display = \"block\";\n      loginButton.disabled = false;\n      loginButton.innerHTML = `Login`;\n    }\n    // Logged In\n    else {\n      console.log(\"Logged In\");\n      var check = result.data[0];\n      console.log(check);\n\n      if (check.user_type == 2) {\n        localStorage.setItem(\"user_type\", \"hod\");\n        localStorage.setItem(\"dept\", check.dept);\n        localStorage.setItem(\"hodemail\", check.email);\n        window.location.href = URL + \"HoD#/admin2/dashboard\";\n      } else if (check.user_type == 1) {\n        localStorage.setItem(\"user_type\", \"class_advisor\");\n        localStorage.setItem(\"batch\", check.batch);\n        localStorage.setItem(\"dept\", check.dept);\n        localStorage.setItem(\"caemail\", check.email);\n        window.location.href = URL + \"Class-Advisor#/admin1/dashboard\";\n      } else if (check.user_type == 3) {\n        localStorage.setItem(\"user_type\", \"official\");\n        localStorage.setItem(\"offemail\", check.email);\n        window.location.href = URL + \"LICET#/admin3/dashboard\";\n      } else if (check.user_type == 4) {\n        console.log(\"KK\")\n        localStorage.setItem(\"user_type\", \"admin\");\n        localStorage.setItem(\"hodemail\", check.email);\n        window.location.href = URL + \"Admin#/admin4/dashboard\";\n      } else if (check.user_type == 0) {\n        if (check.roll_no == null) {\n          console.log(check.roll_no);\n          window.location.href = URL + \"Student#/auth/GeneralInformationdata\";\n        } else {\n          localStorage.setItem(\"user_type\", \"student\");\n          localStorage.setItem(\"StudentRoll\", check.roll_no);\n          window.location.href = URL + \"Student#/admin0/GeneralInformation\";\n        }\n      }\n      localStorage.setItem(\"useremail\", result.data[0].email);\n      localStorage.setItem(\"auth_token\", result.data[0].auth_token);\n      localStorage.setItem(\"user_name\", result.data[0].user_name);\n      loginButton.disabled = false;\n      loginButton.innerHTML = `Login`;\n    }\n  });\n  /*    .catch((err) => {\n      document.getElementById(\"pass-fail\").classList.add(\"d-none\");\n      document.getElementById(\"email-fail\").classList.add(\"d-none\");\n      document.getElementById(\"server-fail\").classList.remove(\"d-none\");\n    }); */\n}\n","export default __webpack_public_path__ + \"static/media/signInImage.1d609baa.png\";","/** @format */\n\nimport React from \"react\";\n// import axios from \"axios\";\n// Chakra imports\nimport {\n  Box,\n  Flex,\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Router,\n  Input,\n  Link,\n  Switch,\n  Text,\n  useColorModeValue,\n  Image,\n} from \"@chakra-ui/react\";\nimport handleLogin from \"../../controller/UserloginCtrl\";\n// Assets\nimport signInImage from \"assets/img/signInImage.png\";\n\nfunction login(e) {\n  e.preventDefault();\n  console.log(document.getElementById(\"emailId\").value);\n}\n\nfunction SignIn() {\n  const titleColor = useColorModeValue(\"orange.300\", \"orange.200\");\n  const textColor = useColorModeValue(\"gray.400\", \"white\");\n  localStorage.setItem(\"auth_token\", -1); // Removing session\n  return (\n    <Flex position=\"relative\" mb=\"40px\">\n      <Flex\n        h={{ sm: \"initial\", md: \"75vh\", lg: \"85vh\" }}\n        w=\"100%\"\n        maxW=\"1044px\"\n        mx=\"auto\"\n        justifyContent=\"space-between\"\n        mb=\"30px\"\n        pt={{ sm: \"5vh\", md: \"0px\" }}\n      >\n        <Box\n          mt={{ sm: \"8vw\", md: \"32vh\", xl: \"35vh\" }}\n          ms={{ base: \"28vw\", md: \"50vw\", xl: \"40vw\" }}\n          position=\"absolute\"\n          boxSize={{ sm: \"200px\", md: \"300px\" }}\n        >\n          <Image objectFit=\"cover\" src={signInImage} alt=\"LICET Logo\" />\n        </Box>\n        <Flex\n          mt={{ sm: \"30vh\", md: \"10vh\" }}\n          alignItems=\"center\"\n          justifyContent=\"start\"\n          style={{ userSelect: \"none\" }}\n          w={{ base: \"100%\", md: \"50%\", lg: \"42%\" }}\n        >\n          <Flex\n            direction=\"column\"\n            w=\"100%\"\n            background=\"transparent\"\n            p=\"48px\"\n            mt={{ md: \"150px\", lg: \"80px\" }}\n          >\n            <Heading color={titleColor} fontSize=\"32px\" mb=\"10px\">\n              Welcome Back\n            </Heading>\n            <form onSubmit={login}>\n              <Text\n                mb=\"36px\"\n                ms=\"4px\"\n                color={textColor}\n                fontWeight=\"bold\"\n                fontSize=\"14px\"\n              >\n                Enter your email and password to sign in\n              </Text>\n              <FormControl>\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                  Email\n                </FormLabel>\n                <Input\n                  borderRadius=\"15px\"\n                  mb=\"24px\"\n                  fontSize=\"sm\"\n                  type=\"text\"\n                  id=\"emailId\"\n                  placeholder=\"Your email adress\"\n                  size=\"lg\"\n                />\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                  Password\n                </FormLabel>\n                <Input\n                  borderRadius=\"15px\"\n                  mb=\"20px\"\n                  fontSize=\"sm\"\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Your password\"\n                  size=\"lg\"\n                />\n                <Flex\n                  flexDirection=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  maxW=\"100%\"\n                  mt=\"0px\"\n                >\n                  <Text color=\"red\" id=\"email-fail\" display=\"none\">\n                    Incorrect Username\n                  </Text>\n                  <Text color=\"red\" id=\"pass-fail\" display=\"none\">\n                    Incorrect Password\n                  </Text>\n                  <Text color=\"red\" id=\"server-fail\" display=\"none\">\n                    Server Error. Try again after some time\n                  </Text>\n                </Flex>\n                <Button\n                  fontSize=\"1rem\"\n                  type=\"submit\"\n                  bg=\"orange.300\"\n                  w=\"100%\"\n                  h=\"45\"\n                  mb=\"20px\"\n                  color=\"white\"\n                  mt=\"15px\"\n                  _hover={{\n                    bg: \"orange.200\",\n                  }}\n                  _active={{\n                    bg: \"orange.400\",\n                  }}\n                  id=\"login_btn\"\n                  onClick={handleLogin}\n                >\n                  SIGN IN\n                </Button>\n              </FormControl>\n            </form>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default SignIn;\n","/** @format */\n\n// Student Dashboard/General\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  useToast,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow2 from \"components/Tables/TableRow/TableRow2\";\nimport { server_URL } from \"controller/urls_config\";\nimport SignIn from \"../../Pages/SignIn\";\n\nvar Loader = require(\"react-loader\");\nvar GData = TableRow2;\n\nfunction GeneralInformationdata({ location }) {\n  const [data, setData] = useState([]);\n  const [Loaded, setLoading] = useState(false);\n\n  // Toast var\n  const toast = useToast();\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"StudentRoll\"));\n  let auth_token = localStorage.getItem(\"auth_token\");\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n    setLoading(true);\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  if (auth_token != -1) {\n    return (\n      <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n          <Card>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                General Particulars\n              </Text>\n            </CardHeader>\n\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.sname} field=\"Student Name\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.roll_no} field=\"Roll No.\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.reg_no} field=\"Register No.\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.gender} field=\"Sex\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.dob} field=\"Date Of Birth\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.nationality} field=\"Nationality\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.religion} field=\"Religion\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.if_catholic_parish}\n                          field=\"If Catholic, Parish?\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dalit_catholic_yn}\n                          field=\"Dalit Catholic\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.community} field=\"Community\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.blood_group} field=\"Blood Group\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_tongue}\n                          field=\"Mother Tongue\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.contact_no} field=\"Contact Number\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.aadhar_no} field=\"Aadhar No.\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.licet_email}\n                          field=\"Official Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.email} field=\"personal Email ID\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.present_address}\n                          field=\"Present Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.permanent_address}\n                          field=\"Permanent Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Higher Secondary Details\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.hse_school_name}\n                            field=\"Name of the school\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return <GData data={item.hse_board} field=\"Board\" />;\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.hse_medium}\n                            field=\"Medium of Instruction\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.hse_sec_lang}\n                            field=\"Second Language\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return <GData data={item.hse_group} field=\"Group\" />;\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData data={item.hse_marks} field=\"Total Marks\" />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.hse_percentage}\n                            field=\"Overall Percentage\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData data={item.hse_cutoff} field=\"Cut-Off Marks\" />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.hse_attempts}\n                            field=\"No. of Attempts\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  10th Details\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.sslc_school_name}\n                            field=\"Name of the school\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return <GData data={item.sslc_board} field=\"Board\" />;\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.sslc_medium}\n                            field=\"Medium of Instruction\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.sslc_sec_lang}\n                            field=\"Second Language\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData data={item.sslc_marks} field=\"Total Marks\" />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.sslc_percentage}\n                            field=\"Overall Percentage\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.sslc_attempts}\n                            field=\"No. of Attempts\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Father's Details\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_name}\n                            field=\"Father's Name\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_qualification}\n                            field=\"Father's Qualification\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_occupation}\n                            field=\"Father's Occupation\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_office_address}\n                            field=\"Father's Office Address\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_annual_income}\n                            field=\"Father's Annual Income\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_mob_no}\n                            field=\"Father's Mobile No.\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.father_email}\n                            field=\"Father's Email ID\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_name}\n                            field=\"Guardian Name\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_qualification}\n                            field=\"Guardian Qualification\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_occupation}\n                            field=\"Guardian Occupation\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_office_address}\n                            field=\"Guardian Office Address\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_annual_income}\n                            field=\"Guardian Annual Income\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_mob_no}\n                            field=\"Guardian Mobile No.\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.guardian_email}\n                            field=\"Guardian Email ID\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Mother's Details\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_name}\n                            field=\"Mother's Name\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_qualification}\n                            field=\"Mother's Qualification\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_occupation}\n                            field=\"Mother's Occupation\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_office_address}\n                            field=\"Mother's Office Address\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_annual_income}\n                            field=\"Mother's Annual Income\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_mob_no}\n                            field=\"Mother's Mobile No.\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.mother_email}\n                            field=\"Mother's Email ID\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.no_of_siblings}\n                            field=\"No. of Siblings\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.name_siblings}\n                            field=\"Name of Siblings\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.qualification_siblings}\n                            field=\"Qualification Of Siblings\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.occupation_siblings}\n                            field=\"Occupation\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.alumni_licet_loyola_yn}\n                            field=\"Alumni of LICET or LOYOLA\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Admission Details\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.application_no}\n                            field=\"Application No.\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.date_of_ad}\n                            field=\"Date Of Admission\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return <GData data={item.quota} field=\"Quota\" />;\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.regular_lateral_rl}\n                            field=\"Regular / Lateral Entry\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.dayschl_hosteller_dh}\n                            field=\"Day Scholar / Hosteller\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Scholarship Details\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.scholarship_name}\n                            field=\"Scholarship Name\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.scholarship_amount}\n                            field=\"Scholarship Amount\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.first_graduate_yn}\n                            field=\"First Graduate\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.eco_backward_yn}\n                            field=\"Economically Backward ( Annual Income of Parents Less than 1LPA )\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Technical and Non-Technical Skills\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.programming_languages}\n                            field=\"Programming Languages\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.software_proficiency}\n                            field=\"Software Proficieny\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.dept_rel_proficiency}\n                            field=\"Department Related Skills\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.certifications}\n                            field=\"Certifications\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.other_skills}\n                            field=\"Other Technical Skills\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.aptitude_analytical_skills}\n                            field=\"Aptitude / Analytical Skills\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.communication_skills}\n                            field=\"Communication Skills\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.social_media_exposure}\n                            field=\"Social Media Exposure\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.leadership_skills}\n                            field=\"Leadership Skills\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.other_interpersonal_skills}\n                            field=\"Other Interpersonal Skills\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n\n            <Card>\n              <CardHeader p=\"6px 0px 22px 0px\">\n                <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                  Goals and Professional Membership\n                </Text>\n              </CardHeader>\n              <CardBody overflowX={{ sm: \"scroll\" }}>\n                <Table variant=\"simple\" color={textColor}>\n                  <Tbody>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.short_term_goal}\n                            field=\"Short Term Goals\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.long_term_goal}\n                            field=\"Long Term Goals\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.membership_name}\n                            field=\"Membership Name\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.membership_no}\n                            field=\"Membership No.\"\n                          />\n                        );\n                      })}\n                    </Tr>\n\n                    <Tr>\n                      {data.map((item) => {\n                        return (\n                          <GData\n                            data={item.membership_duration}\n                            field=\"Membership Duration\"\n                          />\n                        );\n                      })}\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </SimpleGrid>\n        </SimpleGrid>\n      </Flex>\n    );\n  } else {\n    return <SignIn></SignIn>;\n  }\n}\n\nexport default GeneralInformationdata;\n","/** @format */\n\n//Table with 7 columns\n\nimport {\n  FormControl,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TableRow8(props) {\n  const { row1, row2, row3, row4, row5, row6, row7, row8 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"bold\"\n              minWidth=\"100%\"\n            >\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row3}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row4}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row5}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row6}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row7}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row8}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default TableRow8;\n","/** @format */\n\n//Student International Exposure Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  SimpleGrid,\n  Collapse,\n  SlideFade,\n  Box,\n} from \"@chakra-ui/react\";\n\nimport { AddIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport TableRow8 from \"components/Tables/TableRow/TableRow8\";\nimport { server_URL } from \"controller/urls_config\";\n\nvar resul;\n\nfunction InternationalData() {\n  function substudinter() {\n    let params = new URLSearchParams();\n    params.append(\"Campus\", document.getElementById(\"CampusID\").value);\n    params.append(\"DateYear\", document.getElementById(\"DYID\").value);\n    params.append(\"Project\", document.getElementById(\"ProjectID\").value);\n    params.append(\"Outcome\", document.getElementById(\"OutcomeID\").value);\n    params.append(\"PersD\", document.getElementById(\"PDID\").value);\n    params.append(\"ForLCC\", document.getElementById(\"FLCCID\").value);\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"insertstudinter\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const [data, setData] = useState([]);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useEffect(async () => {\n    axios\n      .post(server_URL + \"InternationalExposureStudent\", params)\n      .then((items) => {\n        setData(items.data);\n      });\n  });\n  const [show, setShow] = useState(false);\n  const handleToggle = () => setShow(!show);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Summer Program Details\n            </Text>\n          </CardHeader>\n\n          <CardBody overflowX={{ sm: \"scroll\" }}>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Campus</Th>\n                  <Th color=\"gray.400\">Date and Year</Th>\n                  <Th color=\"gray.400\">Project</Th>\n                  <Th color=\"gray.400\">Outcome</Th>\n                  <Th color=\"gray.400\">Personal Development</Th>\n                  <Th color=\"gray.400\">\n                    Foreign Language Courses Completed or Pursuing\n                  </Th>\n                  <Th color=\"gray.400\">Credits</Th>\n                  <Th color=\"gray.400\">Verify Status</Th>\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {data.map((item) => {\n                  return (\n                    <TableRow8\n                      id={item.s_no || Null_message}\n                      row1={item.foreign_campus || Null_message}\n                      row2={item.duration || Null_message}\n                      row3={item.project || Null_message}\n                      row4={item.outcome || Null_message}\n                      row5={item.personal_development || Null_message}\n                      row6={item.foreign_language_courses || Null_message}\n                      row7={item.credits || Null_message}\n                      row8={item.verify || Null_message}\n                    />\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <Collapse in={show} animateOpacity>\n          <Card overflowX={{ sm: \"scroll\" }}>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Campus</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Project</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Personal Development</Th>\n                    <Th color=\"gray.400\">\n                      Foreign Language Courses Completed or Pursuing\n                    </Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth=\"16em\">\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Campus\"\n                          id=\"CampusID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth=\"16em\">\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          id=\"DYID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth=\"16em\">\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Project\"\n                          id=\"ProjectID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth=\"16em\">\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"OutcomeID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth=\"16em\">\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Personal Development\"\n                          id=\"PDID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth=\"16em\">\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Foreign Language Courses Completed or Pursuing\"\n                          id=\"FLCCID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth=\"10em\">\n                      <SlideFade in={show}>\n                        <Button\n                          onClick={substudinter}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                  </Tr>\n                  <Modal\n                    isOpen={isOpen}\n                    onClose={() => {\n                      onClose();\n                      window.location.reload(false);\n                    }}\n                  >\n                    <ModalOverlay />\n                    <ModalContent>\n                      <ModalHeader>Result</ModalHeader>\n                      <ModalCloseButton />\n                      <ModalBody>{resul}</ModalBody>\n\n                      <ModalFooter>\n                        <Button\n                          colorScheme=\"blue\"\n                          mr={3}\n                          onClick={() => {\n                            onClose();\n                            window.location.reload(false);\n                          }}\n                        >\n                          Close\n                        </Button>\n                      </ModalFooter>\n                    </ModalContent>\n                  </Modal>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <SimpleGrid\n          marginLeft=\"auto\"\n          width=\"13em\"\n          me=\"2.5rem\"\n          columns={{ sm: 2, md: 2, xl: 2 }}\n          gap={5}\n        >\n          <div></div>\n          <Button\n            ms=\"5\"\n            bg=\"orange.300\"\n            width=\"fit-content\"\n            onClick={handleToggle}\n          >\n            <AddIcon w={4} h={4} me=\"3\" />\n            Add\n          </Button>\n        </SimpleGrid>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default InternationalData;\n","//Table with 5 columns\n\nimport {\n  FormControl,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TableRow6(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth=\"12em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"bold\"\n              minWidth=\"100%\"\n            >\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row3}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row4}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row5}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row6}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default TableRow6;\n","/** @format */\n\n//Table with 5 columns\n\nimport {\n  FormControl,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TableRow5(props) {\n  const { row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth=\"16em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"bold\"\n              minWidth=\"100%\"\n            >\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"16em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"16em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row3}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row4}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row5}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default TableRow5;\n","/** @format */\n\n//Student ExtraCurricularData\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  Box,\n  useColorModeValue,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  SimpleGrid,\n  Collapse,\n  SlideFade,\n  FormControl,\n  Select,\n} from \"@chakra-ui/react\";\n\nimport { AddIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow6 from \"components/Tables/TableRow/TableRow6\";\nimport TableRow5 from \"components/Tables/TableRow/TableRow5\";\nimport { server_URL } from \"controller/urls_config\";\n\nvar resul;\n\nfunction ExtraCurricularData() {\n  const Null_message = \"NULL\";\n  function substudextraclub() {\n    let params = new URLSearchParams();\n    params.append(\"Clubname\", document.getElementById(\"CLUBNID\").value);\n    params.append(\"ClubactivityID\", document.getElementById(\"CLUBAID\").value);\n    params.append(\"Clubdateyear\", document.getElementById(\"EDYEARID\").value);\n    params.append(\"Clubnoutcome\", document.getElementById(\"OUTCOMID\").value);\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"insertstudextraclub\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n  function substudextraoutreach() {\n    let params = new URLSearchParams();\n    params.append(\"outreachname\", document.getElementById(\"OUTREACTID\").value);\n    params.append(\n      \"outreachdateyear\",\n      document.getElementById(\"OUTREADAYID\").value\n    );\n    params.append(\n      \"outreachoutcome\",\n      document.getElementById(\"OUTREAOUTCOMID\").value\n    );\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"insertstudextraoutreach\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n  function substudextrasport() {\n    let params = new URLSearchParams();\n    params.append(\"sportname\", document.getElementById(\"SSID\").value);\n    params.append(\"representation\", document.getElementById(\"SRID\").value);\n    params.append(\"dateyear\", document.getElementById(\"SDID\").value);\n    params.append(\"position\", document.getElementById(\"SPID\").value);\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"insertstudextrasports\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function substudextracultural() {\n    let params = new URLSearchParams();\n    params.append(\"eventname\", document.getElementById(\"ENID\").value);\n    params.append(\"eventdate\", document.getElementById(\"EDAYID\").value);\n    params.append(\"eventposition\", document.getElementById(\"EPSID\").value);\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"insertstudextracultural\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  var [drop1, setDrop1] = useState(false);\n  var [drop2, setDrop2] = useState(false);\n  var [drop3, setDrop3] = useState(false);\n  var [drop4, setDrop4] = useState(false);\n\n  const [show, setShow] = useState(false);\n  const [show2, setShow2] = useState(false);\n  const [show3, setShow3] = useState(false);\n  const [show4, setShow4] = useState(false);\n\n  const handleToggle1 = () => setShow(!show);\n  const handleToggle2 = () => setShow2(!show2);\n  const handleToggle3 = () => setShow3(!show3);\n  const handleToggle4 = () => setShow4(!show4);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const [Cdata, setCdata] = useState([]);\n  const [Odata, setOdata] = useState([]);\n  const [Sdata, setSdata] = useState([]);\n  const [Fdata, setFdata] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useEffect(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"ExtraClubStudentDisplay\", params),\n        axios.post(server_URL + \"ExtraOutreachStudentDisplay\", params),\n        axios.post(server_URL + \"ExtraSportsStudentDisplay\", params),\n        axios.post(server_URL + \"ExtraCulturalStudentDisplay\", params),\n      ])\n      .then(\n        axios.spread((data1, data2, data3, data4) => {\n          setCdata(data1.data);\n          setOdata(data2.data);\n          setSdata(data3.data);\n          setFdata(data4.data);\n        })\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true), setDrop2(true), setDrop3(true), setDrop4(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Clubs\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Club</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Cdata.map((item1) => {\n                    return (\n                      <TableRow6\n                        row1={item1.club_name || Null_message}\n                        row2={item1.date || Null_message}\n                        row3={item1.activity_name || Null_message}\n                        row4={item1.outcome || Null_message}\n                        row5={item1.credits || Null_message}\n                        row6={item1.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show && drop1}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Name Of The Club</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Club Name\"\n                          id=\"CLUBNID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          id=\"EDYEARID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Club Activity\"\n                          id=\"CLUBAID\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Outcome\"\n                          id=\"OUTCOMID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <SlideFade in={show}>\n                          <Button\n                            onClick={substudextraclub}\n                            bg=\"orange.300\"\n                            width=\"fit-content\"\n                          >\n                            Submit\n                          </Button>\n                        </SlideFade>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Modal\n                    isOpen={isOpen}\n                    onClose={() => {\n                      onClose();\n                      window.location.reload(false);\n                    }}\n                  >\n                    <ModalOverlay />\n                    <ModalContent>\n                      <ModalHeader>Result</ModalHeader>\n                      <ModalCloseButton />\n                      <ModalBody>{resul}</ModalBody>\n\n                      <ModalFooter>\n                        <Button\n                          colorScheme=\"blue\"\n                          mr={3}\n                          onClick={() => {\n                            onClose();\n                            window.location.reload(false);\n                          }}\n                        >\n                          Close\n                        </Button>\n                      </ModalFooter>\n                    </ModalContent>\n                  </Modal>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop1}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle1}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Outreach Activity\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Odata.map((item) => {\n                    return (\n                      <TableRow5\n                        row1={item.outreach_activity_name || Null_message}\n                        row2={item.outreach_date || Null_message}\n                        row3={item.outreach_outcome || Null_message}\n                        row4={item.outreach_credits || Null_message}\n                        row5={item.outreach_verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show2 && drop2}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Outreach Activity\"\n                          id=\"OUTREACTID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          id=\"OUTREADAYID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Outcome\"\n                          id=\"OUTREAOUTCOMID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <SlideFade in={show2}>\n                        <Button\n                          onClick={substudextraoutreach}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop2}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle2}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show2 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Sports Achievements\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n\n          <Collapse in={drop3}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Sport</Th>\n\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Representation</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Sdata.map((item) => {\n                    return (\n                      <TableRow6\n                        row1={item.sport_name || Null_message}\n                        row2={item.date || Null_message}\n                        row3={item.representation || Null_message}\n                        row4={item.position_secures || Null_message}\n                        row5={item.credits || Null_message}\n                        row6={item.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show3 && drop3}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Sport</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Representation</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Sport Name\"\n                          id=\"SSID\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          id=\"SDID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <FormControl isRequired>\n                          <Select\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            id=\"SRID\"\n                            placeholder=\"Select Representation\"\n                            isRequired\n                          >\n                            <option value=\"ZONE\">ZONE</option>\n                            <option value=\"DISTRICT\">DISTRICT</option>\n                            <option value=\"STATE\">STATE</option>\n                            <option value=\"NATIONAL\">NATIONAL</option>\n                            <option value=\"INTERNATIONAL\">INTERNATIONAL</option>\n                          </Select>\n                        </FormControl>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Position Secured\"\n                          id=\"SPID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <SlideFade in={show3}>\n                        <Button\n                          onClick={substudextrasport}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop3}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle3}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show3 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Culturals\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n\n          <Collapse in={drop4}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Event</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Fdata.map((row) => {\n                    return (\n                      <TableRow5\n                        row1={row.event_name || Null_message}\n                        row2={row.date || Null_message}\n                        row3={row.position_secures || Null_message}\n                        row4={row.credits || Null_message}\n                        row5={row.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show4 && drop4}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Event Participated</Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Event Name\"\n                          id=\"ENID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          id=\"EDAYID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Position Secured\"\n                          id=\"EPSID\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      {\" \"}\n                      <SlideFade in={show4}>\n                        <Button\n                          onClick={substudextracultural}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop4}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle4}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show4 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ExtraCurricularData;\n","/** @format */\n\n//Student AcademicData\n\nimport React, { useState, useEffect } from \"react\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Stat,\n  StatLabel,\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Select,\n  SimpleGrid,\n  Td,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport axios from \"axios\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Academicdata() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  const [data, setdata] = useState([]);\n  const [Adata, setAdata] = useState([]);\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"getColumnName\", params),\n        axios.post(server_URL + \"AcademicsData\", params),\n      ])\n      .then(\n        axios.spread((data1, data2) => {\n          let filtered_data = data1.data.filter(\n            (header) =>\n              header.COLUMN_NAME != \"id\" && header.COLUMN_NAME != \"roll_no\"\n          );\n\n          console.log(data2);\n          let student_data = [];\n          for (var i = 0; i < data2.data.length; i++) {\n            let student = Object.values(data2.data[i]);\n            student.splice(0, 2);\n            student_data.push(student);\n          }\n          setdata(filtered_data);\n          setAdata(student_data);\n        })\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internal Exam Results\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  {data.map((items) => {\n                    return <Th color=\"gray.400\">{items.COLUMN_NAME}</Th>;\n                  })}\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {Adata.map((items) => {\n                  return (\n                    <Tr>\n                      {items.map((item) => {\n                        return <Td>{item}</Td>;\n                      })}\n                    </Tr>\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default Academicdata;\n","/** @format */\n\n//Table with 7 columns\n\nimport {\n  FormControl,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TableRow7(props) {\n  const { row1, row2, row3, row4, row5, row6, row7 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"bold\"\n              minWidth=\"100%\"\n            >\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row3}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row4}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"15em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row5}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row6}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"9em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row7}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default TableRow7;\n","/** @format */\n\n//Professional Development Data Student\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  SimpleGrid,\n  Collapse,\n  SlideFade,\n} from \"@chakra-ui/react\";\n\nimport { AddIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\n// import { IndustrialVist } from \"variables/general\";\nimport TableRow5 from \"components/Tables/TableRow/TableRow5\";\nimport TableRow6 from \"components/Tables/TableRow/TableRow6\";\nimport TableRow7 from \"components/Tables/TableRow/TableRow7\";\nimport { URL, server_URL } from \"controller/urls_config\";\n\nvar resul;\n\nfunction ProfessionalDevelopmentData0() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const Null_message = \"NULL\";\n\n  const [drop1, setDrop1] = useState(false);\n  const [drop2, setDrop2] = useState(false);\n  const [drop3, setDrop3] = useState(false);\n  const [drop4, setDrop4] = useState(false);\n  const [drop5, setDrop5] = useState(false);\n  const [drop6, setDrop6] = useState(false);\n  const [drop7, setDrop7] = useState(false);\n  const [drop8, setDrop8] = useState(false);\n  const [drop9, setDrop9] = useState(false);\n  const [drop10, setDrop10] = useState(false);\n  const [drop11, setDrop11] = useState(false);\n  const [drop12, setDrop12] = useState(false);\n  const [drop13, setDrop13] = useState(false);\n\n  const [show, setShow] = useState(false);\n  const [show2, setShow2] = useState(false);\n  const [show3, setShow3] = useState(false);\n  const [show4, setShow4] = useState(false);\n  const [show5, setShow5] = useState(false);\n  const [show6, setShow6] = useState(false);\n  const [show7, setShow7] = useState(false);\n  const [show8, setShow8] = useState(false);\n  const [show9, setShow9] = useState(false);\n  const [show10, setShow10] = useState(false);\n  const [show11, setShow11] = useState(false);\n  const [show12, setShow12] = useState(false);\n  const [show13, setShow13] = useState(false);\n\n  const handleToggle = () => setShow(!show);\n  const handleToggle2 = () => setShow2(!show2);\n  const handleToggle3 = () => setShow3(!show3);\n  const handleToggle4 = () => setShow4(!show4);\n  const handleToggle5 = () => setShow5(!show5);\n  const handleToggle6 = () => setShow6(!show6);\n  const handleToggle7 = () => setShow7(!show7);\n  const handleToggle8 = () => setShow8(!show8);\n  const handleToggle9 = () => setShow9(!show9);\n  const handleToggle10 = () => setShow10(!show10);\n  const handleToggle11 = () => setShow11(!show11);\n  const handleToggle12 = () => setShow12(!show12);\n  const handleToggle13 = () => setShow13(!show13);\n\n  const [p1data, setp1data] = useState([]);\n  const [p2data, setp2data] = useState([]);\n  const [p3data, setp3data] = useState([]);\n  const [p4data, setp4data] = useState([]);\n  const [p5data, setp5data] = useState([]);\n  const [p6data, setp6data] = useState([]);\n  const [p7data, setp7data] = useState([]);\n  const [p8data, setp8data] = useState([]);\n  const [p9data, setp9data] = useState([]);\n  const [p10data, setp10data] = useState([]);\n  const [p11data, setp11data] = useState([]);\n  const [p12data, setp12data] = useState([]);\n  const [p13data, setp13data] = useState([]);\n\n  function insertindustry() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Industry\", document.getElementById(\"Industry1\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY1\").value);\n    params.append(\"Outcome\", document.getElementById(\"O1\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"Industrialv_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n  function insertinplant() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Industry\", document.getElementById(\"Industry2\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY2\").value);\n    params.append(\"Outcome\", document.getElementById(\"O2\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"Inplant_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n  function insertlecture() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Topic\", document.getElementById(\"Topic\").value);\n\n    params.append(\"Resource\", document.getElementById(\"Resource\").value);\n    params.append(\"Outcome\", document.getElementById(\"O3\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"guest_stud_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertmotivation() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Topic\", document.getElementById(\"Topic4\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY4\").value);\n    params.append(\"Resource\", document.getElementById(\"Resource4\").value);\n    params.append(\"Outcome\", document.getElementById(\"O4\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"Motivational_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertintern() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Company\", document.getElementById(\"Company5\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY5\").value);\n    params.append(\"Duration\", document.getElementById(\"Duration5\").value);\n    params.append(\"Reference\", document.getElementById(\"Reference5\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"intern_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertvalue() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Course\", document.getElementById(\"Course6\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY6\").value);\n    params.append(\"Outcome\", document.getElementById(\"O6\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"Cour_Stud_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertworkshop() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Topic\", document.getElementById(\"Topic7\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY7\").value);\n    params.append(\"Resource\", document.getElementById(\"Resource7\").value);\n    params.append(\"Outcome\", document.getElementById(\"O7\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"workshop_stuinsert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertwebinar() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Topic\", document.getElementById(\"Topic8\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY8\").value);\n    params.append(\"Resource\", document.getElementById(\"Resource8\").value);\n    params.append(\"Outcome\", document.getElementById(\"O8\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"webinar_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertcompetition() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Name\", document.getElementById(\"Name9\").value);\n    params.append(\"Competition\", document.getElementById(\"Competition9\").value);\n    params.append(\"DateYear\", document.getElementById(\"DY9\").value);\n    params.append(\"Position\", document.getElementById(\"Position9\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"comp_Stud_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertplacement() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Aptitude\", document.getElementById(\"Aptitude10\").value);\n    params.append(\"Soft\", document.getElementById(\"Soft10\").value);\n    params.append(\"Reasoning\", document.getElementById(\"Reasoning10\").value);\n    params.append(\"Technical\", document.getElementById(\"Technical10\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"placement_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function insertmini() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Title\", document.getElementById(\"Title11\").value);\n    params.append(\"Objective\", document.getElementById(\"Objective11\").value);\n    params.append(\"Outcome\", document.getElementById(\"O11\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"PdMini_Stud_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function finalproject() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Title\", document.getElementById(\"TID12\").value);\n    params.append(\"Objective\", document.getElementById(\"OBID12\").value);\n    params.append(\"Outcome\", document.getElementById(\"OID12\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"final_stud_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n\n  function publications() {\n    let params = new URLSearchParams();\n    params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n    params.append(\"Conference\", document.getElementById(\"CONID13\").value);\n    params.append(\"Name\", document.getElementById(\"NAMEID13\").value);\n    params.append(\"Title\", document.getElementById(\"TID13\").value);\n    params.append(\"Impact\", document.getElementById(\"IMPID13\").value);\n    params.append(\"Index\", document.getElementById(\"INID13\").value);\n    params.append(\"status\", \"Pending\");\n    axios.post(server_URL + \"publication_insert\", params).then((items) => {\n      if (items.data == \"Inserted\") {\n        resul = \"Sucessfully Added!!\";\n        onOpen(resul);\n      } else if (items.data == \"NotInserted\") {\n        resul = \"Error Occured!!\";\n        onOpen(resul);\n      }\n    });\n  }\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useEffect(async () => {\n    axios \n      .all([\n        axios.post(server_URL + \"Industrialv_display\", params),\n        axios.post(server_URL + \"Inplant_display\", params),\n        axios.post(server_URL + \"guest_stud_display\", params),\n        axios.post(server_URL + \"Motivational_display\", params),\n        axios.post(server_URL + \"intern_stud_display\", params),\n        axios.post(server_URL + \"cour_Stud_display\", params),\n        axios.post(server_URL + \"workshop_studisplay\", params),\n        axios.post(server_URL + \"webinar_display\", params),\n        axios.post(server_URL + \"comp_stud_display\", params),\n        axios.post(server_URL + \"placement_display\", params),\n        axios.post(server_URL + \"Miniproj_display\", params),\n        axios.post(server_URL + \"finpro_Stud_display\", params),\n        axios.post(server_URL + \"publication_display\", params),\n      ])\n      .then(\n        axios.spread(\n          (\n            data1,\n            data2,\n            data3,\n            data4,\n            data5,\n            data6,\n            data7,\n            data8,\n            data9,\n            data10,\n            data11,\n            data12,\n            data13\n          ) => {\n            setp1data(data1.data);\n            setp2data(data2.data);\n            setp3data(data3.data);\n            setp4data(data4.data);\n            setp5data(data5.data);\n            setp6data(data6.data);\n            setp7data(data7.data);\n            setp8data(data8.data);\n            setp9data(data9.data);\n            setp10data(data10.data);\n            setp11data(data11.data);\n            setp12data(data12.data);\n            setp13data(data13.data);\n          }\n        )\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true),\n                  setDrop2(true),\n                  setDrop3(true),\n                  setDrop4(true),\n                  setDrop5(true),\n                  setDrop6(true),\n                  setDrop7(true),\n                  setDrop8(true),\n                  setDrop9(true),\n                  setDrop10(true),\n                  setDrop11(true),\n                  setDrop12(true),\n                  setDrop13(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false),\n                  setDrop5(false),\n                  setDrop6(false),\n                  setDrop7(false),\n                  setDrop8(false),\n                  setDrop9(false),\n                  setDrop10(false),\n                  setDrop11(false),\n                  setDrop12(false),\n                  setDrop13(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Industrial Visit\n            </Text>\n\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p1data.map((item1) => {\n                    return (\n                      <TableRow5\n                        row1={item1.industry_name || Null_message}\n                        row2={item1.date || Null_message}\n                        row3={item1.outcome || Null_message}\n                        row4={item1.credits || Null_message}\n                        row5={item1.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show && drop1}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Industry\"\n                          id=\"Industry1\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Enter Date and Year\"\n                          id=\"DY1\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O1\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <SlideFade in={show}>\n                          <Button\n                            onClick={insertindustry}\n                            bg=\"orange.300\"\n                            width=\"fit-content\"\n                          >\n                            Submit\n                          </Button>\n                        </SlideFade>\n                      </Flex>\n                    </Td>\n                  </Tr>\n\n                  <Modal\n                    isOpen={isOpen}\n                    onClose={() => {\n                      onClose();\n                      window.location.reload(false);\n                    }}\n                  >\n                    <ModalOverlay />\n                    <ModalContent>\n                      <ModalHeader>Result</ModalHeader>\n                      <ModalCloseButton />\n                      <ModalBody>{resul}</ModalBody>\n\n                      <ModalFooter>\n                        <Button\n                          colorScheme=\"blue\"\n                          mr={3}\n                          onClick={() => {\n                            onClose();\n                            window.location.reload(false);\n                          }}\n                        >\n                          Close\n                        </Button>\n                      </ModalFooter>\n                    </ModalContent>\n                  </Modal>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop1}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Inplant Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p2data.map((item2) => {\n                    return (\n                      <TableRow5\n                        row1={item2.industry || Null_message}\n                        row2={item2.date || Null_message}\n                        row3={item2.outcome || Null_message}\n                        row4={item2.credits || Null_message}\n                        row5={item2.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show2 && drop2}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Industry\"\n                          id=\"Industry2\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Enter Date and Year\"\n                          id=\"DY2\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"19em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O2\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <SlideFade in={show2}>\n                        <SlideFade in={show2}>\n                          <Button\n                            onClick={insertinplant}\n                            bg=\"orange.300\"\n                            width=\"fit-content\"\n                          >\n                            Submit\n                          </Button>\n                        </SlideFade>\n                      </SlideFade>\n                    </Td>\n\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop2}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle2}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show2 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Guest Lecture\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse mt=\"1em\" in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p3data.map((item3) => {\n                    return (\n                      <TableRow5\n                        row1={item3.topic || Null_message}\n                        row2={item3.resource_person || Null_message}\n                        row3={item3.outcome || Null_message}\n                        row4={item3.credits || Null_message}\n                        row5={item3.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show3 && drop3}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Topic</Th>\n\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Topic\"\n                          id=\"Topic\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Resource Person\"\n                          id=\"Resource\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O3\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <SlideFade in={show3}>\n                        <Button\n                          onClick={insertlecture}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop3}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle3}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show3 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Motivational Talks\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p4data.map((item4) => {\n                    return (\n                      <TableRow6\n                        row1={item4.topic || Null_message}\n                        row2={item4.date || Null_message}\n                        row3={item4.resource_person || Null_message}\n                        row4={item4.outcome || Null_message}\n                        row5={item4.credits || Null_message}\n                        row6={item4.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show4 && drop4}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Topic\"\n                          id=\"Topic4\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Enter Date and Year\"\n                          id=\"DY4\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Resource Person\"\n                          id=\"Resource4\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O4\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <SlideFade in={show4}>\n                        <Button\n                          onClick={insertmotivation}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop4}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle4}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show4 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internships\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop5(!drop5)}\n            >\n              {drop5 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop5}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Company</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Duration in months</Th>\n                    <Th color=\"gray.400\">Reference</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p5data.map((item5) => {\n                    return (\n                      <TableRow6\n                        row1={item5.company_name || Null_message}\n                        row2={item5.date || Null_message}\n                        row3={item5.duration || Null_message}\n                        row4={item5.reference || Null_message}\n                        row5={item5.credits || Null_message}\n                        row6={item5.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show5 && drop5}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Company</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">duration in months</Th>\n                    <Th color=\"gray.400\">Reference</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter company\"\n                          id=\"Company5\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Date and Year\"\n                          id=\"DY5\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Duration in months\"\n                          id=\"Duration5\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Reference\"\n                          id=\"Reference5\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show5}>\n                        <Button\n                          onClick={insertintern}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop5}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle5}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show5 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Value Added Course\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop6(!drop6)}\n            >\n              {drop6 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop6}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Course Name</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p6data.map((item6) => {\n                    return (\n                      <TableRow5\n                        row1={item6.course_name || Null_message}\n                        row2={item6.date || Null_message}\n                        row3={item6.outcome || Null_message}\n                        row4={item6.credits || Null_message}\n                        row5={item6.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show6 && drop6}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Course Name</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Course Name\"\n                          id=\"Course6\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Date and Year\"\n                          id=\"DY6\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Outcome\"\n                          id=\"O6\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show6}>\n                        <Button\n                          onClick={insertvalue}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n\n        <Collapse in={drop6}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle6}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show6 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Workshop\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop7(!drop7)}\n            >\n              {drop7 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop7}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p7data.map((item7) => {\n                    return (\n                      <TableRow6\n                        row1={item7.topic || Null_message}\n                        row2={item7.date || Null_message}\n                        row3={item7.Resource || Null_message}\n                        row4={item7.outcome || Null_message}\n                        row5={item7.credits || Null_message}\n                        row6={item7.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show7 && drop7}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Topic\"\n                          id=\"Topic7\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Enter Date and Year\"\n                          id=\"DY7\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Resource Person\"\n                          id=\"Resource7\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O7\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show7}>\n                        <Button\n                          onClick={insertworkshop}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop7}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle7}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show7 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Webinar\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop8(!drop8)}\n            >\n              {drop8 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop8}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p8data.map((item8) => {\n                    return (\n                      <TableRow6\n                        row1={item8.topic || Null_message}\n                        row2={item8.date || Null_message}\n                        row3={item8.resorce_person || Null_message}\n                        row4={item8.outcome || Null_message}\n                        row5={item8.credits || Null_message}\n                        row6={item8.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show8 && drop8}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Topic\"\n                          id=\"Topic8\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Enter Date and Year\"\n                          id=\"DY8\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Resource Person\"\n                          id=\"Resource8\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O8\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td>\n                      <SlideFade in={show8}>\n                        <Button\n                          onClick={insertwebinar}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop8}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle8}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show8 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Competition\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop9(!drop9)}\n            >\n              {drop9 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop9}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name</Th>\n                    <Th color=\"gray.400\">\n                      Type of Competion (Coding / Project)\n                    </Th>\n                    <Th color=\"gray.400\">Date and year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p9data.map((item9) => {\n                    return (\n                      <TableRow6\n                        row1={item9.comp_name || Null_message}\n                        row2={item9.comp_type || Null_message}\n                        row3={item9.date || Null_message}\n                        row4={item9.position_secured || Null_message}\n                        row5={item9.credits || Null_message}\n                        row6={item9.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show9 && drop9}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Name</Th>\n                    <Th color=\"gray.400\">\n                      Type of Competion (Coding / Project)\n                    </Th>\n                    <Th color=\"gray.400\">Date and year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Name\"\n                          id=\"Name9\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Type Of Competition\"\n                          id=\"Competition9\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"date\"\n                          placeholder=\"Enter Date\"\n                          id=\"DY9\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Enter Position\"\n                          id=\"Position9\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show9}>\n                        <Button\n                          onClick={insertcompetition}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop9}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle9}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show9 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Placement Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop10(!drop10)}\n            >\n              {drop10 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop10}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Aptitude</Th>\n                    <Th color=\"gray.400\">Soft Skill</Th>\n                    <Th color=\"gray.400\">Reasoning</Th>\n                    <Th color=\"gray.400\">Technical Skill</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p10data.map((item10) => {\n                    return (\n                      <TableRow6\n                        row1={item10.aptitude || Null_message}\n                        row2={item10.soft_skills || Null_message}\n                        row3={item10.reasoning || Null_message}\n                        row4={item10.technical_training || Null_message}\n                        row5={item10.credits || Null_message}\n                        row6={item10.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show10 && drop10}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Aptitude</Th>\n                    <Th color=\"gray.400\">Soft Skill</Th>\n                    <Th color=\"gray.400\">Reasoning</Th>\n                    <Th color=\"gray.400\">Technical Skill</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Aptitude\"\n                          id=\"Aptitude10\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Soft Skills\"\n                          id=\"Soft10\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Reasoning\"\n                          id=\"Reasoning10\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Technical Skill\"\n                          id=\"Technical10\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show10}>\n                        <Button\n                          onClick={insertplacement}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop10}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle10}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show10 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Mini Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop11(!drop11)}\n            >\n              {drop11 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop11}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p11data.map((item11) => {\n                    return (\n                      <TableRow5\n                        row1={item11.project_title || Null_message}\n                        row2={item11.objective || Null_message}\n                        row3={item11.outcome || Null_message}\n                        row4={item11.credits || Null_message}\n                        row5={item11.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show11 && drop11}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Title\"\n                          id=\"Title11\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Objective\"\n                          id=\"Objective11\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"O11\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show11}>\n                        <Button\n                          onClick={insertmini}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop11}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle11}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show11 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Final Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop12(!drop12)}\n            >\n              {drop12 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop12}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p12data.map((item12) => {\n                    return (\n                      <TableRow5\n                        row1={item12.title || Null_message}\n                        row2={item12.objective || Null_message}\n                        row3={item12.outcome || Null_message}\n                        row4={item12.credits || Null_message}\n                        row5={item12.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show12 && drop12}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Title\"\n                          id=\"TID12\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Objective\"\n                          id=\"OBID12\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Outcome\"\n                          id=\"OID12\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show12}>\n                        <Button\n                          onClick={finalproject}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop12}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle12}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show12 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Publications\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop13(!drop13)}\n            >\n              {drop13 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop13}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Conference / Journal</Th>\n                    <Th color=\"gray.400\">Name of Conference / Journal</Th>\n                    <Th color=\"gray.400\">Title Of the Article</Th>\n                    <Th color=\"gray.400\">Impact Factor</Th>\n                    <Th color=\"gray.400\">Indexed In</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p13data.map((item13) => {\n                    return (\n                      <TableRow7\n                        row1={item13.conf_or_journal || Null_message}\n                        row2={item13.name || Null_message}\n                        row3={item13.title || Null_message}\n                        row4={item13.impact_factor || Null_message}\n                        row5={item13.indexed_in || Null_message}\n                        row6={item13.credits || Null_message}\n                        row7={item13.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Collapse in={show13 && drop13}>\n          <Card>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr>\n                    <Th color=\"gray.400\">Conference / Journal</Th>\n                    <Th color=\"gray.400\">Name of Conference / Journal</Th>\n                    <Th color=\"gray.400\">Title Of the Article</Th>\n                    <Th color=\"gray.400\">Impact Factor</Th>\n                    <Th color=\"gray.400\">Indexed In</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Conference / Journal\"\n                          id=\"CONID13\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Name of Conference / Journal\"\n                          id=\"NAMEID13\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Title Of The Article\"\n                          id=\"TID13\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Impact Factor\"\n                          id=\"IMPID13\"\n                        />\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"14em\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Input\n                          borderRadius=\"5px\"\n                          fontSize=\"sm\"\n                          type=\"text\"\n                          placeholder=\"Indexed In\"\n                          id=\"INID13\"\n                        />\n                      </Flex>\n                    </Td>\n\n                    <Td>\n                      <SlideFade in={show13}>\n                        <Button\n                          onClick={publications}\n                          bg=\"orange.300\"\n                          width=\"fit-content\"\n                        >\n                          Submit\n                        </Button>\n                      </SlideFade>\n                    </Td>\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={() => {\n                        onClose();\n                        window.location.reload(false);\n                      }}\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <ModalHeader>Result</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody>{resul}</ModalBody>\n\n                        <ModalFooter>\n                          <Button\n                            colorScheme=\"blue\"\n                            mr={3}\n                            onClick={() => {\n                              onClose();\n                              window.location.reload(false);\n                            }}\n                          >\n                            Close\n                          </Button>\n                        </ModalFooter>\n                      </ModalContent>\n                    </Modal>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Collapse>\n        <Collapse in={drop13}>\n          <SimpleGrid\n            marginLeft=\"auto\"\n            width=\"13em\"\n            me=\"2.5rem\"\n            columns={{ sm: 2, md: 2, xl: 2 }}\n            gap={5}\n          >\n            <div></div>\n            <Button\n              ms=\"5\"\n              bg=\"orange.300\"\n              width=\"fit-content\"\n              onClick={handleToggle13}\n            >\n              <AddIcon w={4} h={4} me=\"3\" />\n              {show13 ? \"Cancel\" : \"Add\"}\n            </Button>\n          </SimpleGrid>\n        </Collapse>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopmentData0;\n","import axios from \"axios\";\n\n// var server_URL = \"http://192.168.1.145:8080/\";\nimport { server_URL } from \"./urls_config\";\nexport default function change_pass() {\n  document.getElementById(\"pass-fail\").style.display = \"none\";\n  document.getElementById(\"pass-mis\").style.display = \"none\";\n  document.getElementById(\"server-fail\").style.display = \"none\";\n  document.getElementById(\"pass-success\").style.display = \"none\";\n  const pcbtn = document.getElementById(\"pass-button\");\n  pcbtn.disabled = true;\n  pcbtn.innerHTML = `<div class=\"spinner-border text-primary p-2 spinner-border-sm\" role=\"status\" aria-hidden=\"true\"><span class=\"visually-hidden\">Loading...</span></div>`;\n  var oldPass = document.getElementById(\"old-pass\").value;\n  var newPass = document.getElementById(\"new-pass\").value;\n  var rePass = document.getElementById(\"re-pass\").value;\n  console.log(oldPass);\n  if (newPass == rePass) {\n    let params = new URLSearchParams();\n    params.append(\"newpass\", newPass);\n    params.append(\"oldpass\", oldPass);\n    params.append(\"email\", localStorage.useremail);\n    params.append(\"auth_token\", localStorage.auth_token);\n    console.log(localStorage.useremail);\n    axios.post(server_URL + \"passchange\", params).then((result) => {\n      console.log(result.data);\n      if (result.data == \"pass-fail\") {\n        document.getElementById(\"pass-fail\").style.display = \"block\";\n        pcbtn.disabled = false;\n        pcbtn.innerHTML = `Change Password`;\n      } else if (result.data === \"server-fail\") {\n        document.getElementById(\"server-fail\").style.display = \"block\";\n        pcbtn.disabled = false;\n        pcbtn.innerHTML = `Change Password`;\n      } else {\n        document.getElementById(\"pass-success\").style.display = \"block\";\n        pcbtn.innerHTML = `Change Password`;\n        pcbtn.disabled = false;\n      }\n    });\n  } else {\n    document.getElementById(\"pass-mis\").style.display = \"block\";\n    pcbtn.disabled = false;\n    pcbtn.innerHTML = `Change Password`;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/ProfileBackground.f16e663c.png\";","/** @format */\n\n//Student Profile\n\nimport React, { useState, useEffect } from \"react\";\nimport change_pass from \"../../../controller/changepassword\";\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  SimpleGrid,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  Portal,\n  PopoverFooter,\n  ButtonGroup,\n  Table,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Collapse,\n} from \"@chakra-ui/react\";\nimport { SettingsIcon, EditIcon, WarningIcon } from \"@chakra-ui/icons\";\n\nimport axios from \"axios\";\n// Custom components\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody\";\nimport CardHeader from \"components/Card/CardHeader\";\n// Assets\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Profile() {\n  function validation() {\n    document.getElementById(\"pass-success\").style.display = \"none\";\n    var oldpass = document.getElementById(\"old-pass\").value;\n    var newpass = document.getElementById(\"new-pass\").value;\n    var repass = document.getElementById(\"re-pass\").value;\n    var numbers = /[0-9]/g;\n    var lowercase = /[a-z]/g;\n    var uppercase = /[A-Z]/g;\n    var symbol = /[!@#$%^&*]/g;\n    var checknum = newpass.match(numbers);\n    var checklower = newpass.match(lowercase);\n    var checkupper = newpass.match(uppercase);\n    var checksymbol = newpass.match(symbol);\n    var passlen = newpass.length;\n    // var repass = document.getElementById(\"repassword\").value;\n    if (\n      oldpass == newpass ||\n      passlen < 8 ||\n      checknum == null ||\n      checklower == null ||\n      checkupper == null ||\n      checksymbol == null ||\n      passlen >= 15 ||\n      newpass !== repass\n    ) {\n      if (oldpass == newpass) {\n        document.getElementById(\"pass-same\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-same\").style.display = \"none\";\n      }\n\n      if (passlen < 8) {\n        document.getElementById(\"pass-len\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-len\").style.display = \"none\";\n      }\n\n      if (checknum == null) {\n        document.getElementById(\"pass-num\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-num\").style.display = \"none\";\n      }\n\n      if (checklower == null) {\n        document.getElementById(\"pass-lower\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-lower\").style.display = \"none\";\n      }\n\n      if (checkupper == null) {\n        document.getElementById(\"pass-upper\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-upper\").style.display = \"none\";\n      }\n\n      if (checksymbol == null) {\n        document.getElementById(\"pass-symbol\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-symbol\").style.display = \"none\";\n      }\n\n      if (passlen <= 15) {\n        document.getElementById(\"pass-valid\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-valid\").style.display = \"block\";\n      }\n\n      if (newpass == repass) {\n        document.getElementById(\"pass-equal\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-equal\").style.display = \"block\";\n      }\n    } else {\n      document.getElementById(\"pass-same\").style.display = \"none\";\n      document.getElementById(\"pass-len\").style.display = \"none\";\n      document.getElementById(\"pass-num\").style.display = \"none\";\n      document.getElementById(\"pass-lower\").style.display = \"none\";\n      document.getElementById(\"pass-upper\").style.display = \"none\";\n      document.getElementById(\"pass-symbol\").style.display = \"none\";\n      document.getElementById(\"pass-valid\").style.display = \"none\";\n      document.getElementById(\"pass-equal\").style.display = \"none\";\n      change_pass();\n    }\n  }\n  var sname, licet_email, roll_no, dept, reg_no, batch, cell, year;\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra color mode\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n\n  axios.post(server_URL + \"GeneralStudent\", params).then((items) => {\n    setData(items.data);\n  });\n  data.map((item) => {\n    var now = new Date();\n    var currentYear = parseInt(now.getFullYear());\n    let updated_year = currentYear - parseInt(item.batch.substr(0, 4));\n    updated_year = updated_year == 0 ? 1 : updated_year;\n    sname = item.sname;\n    licet_email = item.licet_email;\n    roll_no = item.roll_no;\n    dept = item.dept;\n    reg_no = item.reg_no;\n    batch = item.batch;\n    cell = item.contact_no;\n    year = updated_year > 4 ? \"Passed Out\" : updated_year;\n  });\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          bgImage={ProfileBgImage}\n          bgSize=\"cover\"\n          w=\"100%\"\n          h=\"250px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mt={{ sm: \"3em\", md: \"0em\" }}\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(120%)\",\n              lg: \"translateY(120%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  {sname}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                  {licet_email}\n                </Text>\n              </Flex>\n            </Flex>\n            <Popover placement=\"auto\">\n              <PopoverTrigger>\n                <Button\n                  minWidth=\"-moz-fit-content\"\n                  leftIcon={<SettingsIcon />}\n                  colorScheme=\"orange\"\n                >\n                  Settings\n                </Button>\n              </PopoverTrigger>\n              <Portal>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverHeader>Available Settings</PopoverHeader>\n                  <PopoverBody>\n                    <Button onClick={onOpen} leftIcon={<EditIcon />}>\n                      Change Password\n                    </Button>\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            </Popover>\n            <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Change Password</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter old Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter Old Password\"\n                        id=\"old-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter New Password\"\n                        id=\"new-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\">\n                        Re enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Re-Enter New Password\"\n                        id=\"re-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <SimpleGrid marginLeft=\"auto\" width=\"fit-content\" gap={5}>\n                    <Button\n                      m=\"1em\"\n                      colorScheme=\"orange\"\n                      variant=\"solid\"\n                      id=\"pass-button\"\n                      onClick={validation}\n                    >\n                      Change Password\n                    </Button>\n                  </SimpleGrid>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-mis\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Passwords Don't Match\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Incorrect Old Password or Username or Invalid User\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"server-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Server Error. Try again after some time\n                  </Text>\n                  <Text\n                    color=\"green\"\n                    id=\"pass-success\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Password Changed Successfully\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-same\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    New password cannot be same as the old password\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-num\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your new password should contain atleast 1 number\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-len\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be atleast 8 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-lower\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 lowercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-upper\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 uppercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-symbol\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 special\n                    character.Allowed special characters(!,@,#,$,%,^,&,*)\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-valid\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be between 8 and 15 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-equal\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Re entered password and new password dosen't match\n                  </Text>\n                </ModalBody>\n              </ModalContent>\n            </Modal>\n\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            ></Flex>\n          </Flex>\n        </Box>\n      </Box>\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 3 }} gap={5}>\n        <Card p=\"16px\" my={{ sm: \"24px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Roll No.:\n            </Text>\n          </CardHeader>\n\n          <CardBody px=\"5px\">\n            <Flex align=\"center\" mb=\"18px\">\n              <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                {roll_no}\n              </Text>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\" my={{ sm: \"24px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Registration Number:\n            </Text>\n          </CardHeader>\n\n          <CardBody px=\"5px\">\n            <Flex align=\"center\" mb=\"18px\">\n              <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                {reg_no}\n              </Text>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\" my={{ sm: \"24px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Department:\n            </Text>\n          </CardHeader>\n\n          <CardBody px=\"5px\">\n            <Flex align=\"center\" mb=\"18px\">\n              <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                {dept}\n              </Text>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\" my={{ sm: \"24px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Year:\n            </Text>\n          </CardHeader>\n\n          <CardBody px=\"5px\">\n            <Flex align=\"center\" mb=\"18px\">\n              <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                {year}\n              </Text>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\" my={{ sm: \"24px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Batch:\n            </Text>\n          </CardHeader>\n\n          <CardBody px=\"5px\">\n            <Flex align=\"center\" mb=\"18px\">\n              <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                {batch}\n              </Text>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\" my={{ sm: \"24px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Contact Number:\n            </Text>\n          </CardHeader>\n\n          <CardBody px=\"5px\">\n            <Flex align=\"center\" mb=\"18px\">\n              <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                {cell}\n              </Text>\n            </Flex>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","/** @format */\n\nimport { createIcon } from \"@chakra-ui/icons\";\n\nexport const AdobexdLogo = createIcon({\n  displayName: \"AdobexdLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M4.042 0h12.916A3.539 3.539 0 0120.5 3.542v12.416a3.539 3.539 0 01-3.542 3.542H4.042A3.539 3.539 0 01.5 15.958V3.542A3.539 3.539 0 014.042 0z\"\n        fill=\"#470137\"\n      />\n      <path\n        d=\"M11.017 5.124l-2.5 4.125 2.666 4.375a.143.143 0 01.017.1c-.008.034-.042.009-.092.017H9.2c-.133 0-.225-.008-.283-.092-.175-.35-.359-.691-.534-1.041a33.608 33.608 0 00-.566-1.05c-.2-.359-.4-.717-.6-1.084H7.2c-.175.359-.367.717-.558 1.075-.192.359-.384.717-.567 1.067-.192.35-.383.708-.575 1.05-.033.083-.1.092-.192.092H3.475c-.033 0-.058.016-.058-.025a.116.116 0 01.016-.092l2.592-4.25L3.5 5.116c-.025-.033-.033-.067-.017-.083.017-.025.05-.034.084-.034h1.891c.042 0 .084.009.117.017a.236.236 0 01.083.075c.159.358.342.717.534 1.075.2.358.391.708.6 1.058.2.35.383.7.558 1.059h.017c.175-.367.358-.725.541-1.075.184-.35.375-.7.567-1.05.192-.35.375-.709.558-1.05.009-.034.025-.067.05-.084a.159.159 0 01.109-.016h1.758a.077.077 0 01.091.058c.009.008-.008.042-.024.058zM14.866 13.917a4.144 4.144 0 01-1.791-.375 2.906 2.906 0 01-1.259-1.134c-.308-.508-.458-1.141-.458-1.9a3.423 3.423 0 011.783-3.05c.584-.325 1.284-.483 2.109-.483.041 0 .1 0 .175.008.075.009.158.009.258.017V4.367c0-.059.025-.092.083-.092h1.692c.042-.008.075.025.083.058v7.95c0 .15.009.317.017.5.017.175.025.342.033.484 0 .058-.025.108-.083.133a6.365 6.365 0 01-1.358.4 7.35 7.35 0 01-1.284.117zm.817-1.667V8.583c-.075-.016-.15-.033-.225-.041-.092-.009-.183-.017-.275-.017-.325 0-.65.067-.942.217-.283.141-.525.35-.708.616-.183.267-.275.625-.275 1.059-.008.291.042.583.142.858.083.225.208.425.375.592.158.15.35.266.566.333.225.075.459.108.692.108.125 0 .242-.008.35-.016a.73.73 0 00.3-.042z\"\n        fill=\"#FF61F6\"\n      />\n    </g>\n  ),\n});\n\nexport const AtlassianLogo = createIcon({\n  displayName: \"AtlassianLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        d=\"M6.427 9.239a.57.57 0 00-.798-.108.591.591 0 00-.167.209l-4.9 9.803a.586.586 0 00.524.847h6.827a.562.562 0 00.523-.324c1.474-3.043.58-7.67-2.01-10.427z\"\n        fill=\"#2684FF\"\n      />\n      <path\n        d=\"M10.028.318a12.932 12.932 0 00-.755 12.765l3.292 6.583a.586.586 0 00.523.324h6.826a.583.583 0 00.586-.585c0-.091-.02-.18-.06-.262L11.024.315a.552.552 0 00-.997 0v.003z\"\n        fill=\"#2684FF\"\n      />\n    </g>\n  ),\n});\n\nexport const CartIcon = createIcon({\n  displayName: \"CartIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M7.984 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM17.828 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM20.324 5.558a1.051 1.051 0 00-.815-.386H6.134l-.27-1.528a.703.703 0 00-.692-.581H2.359a.703.703 0 000 1.406h2.223L6.59 15.841a.703.703 0 00.692.581h11.25a.703.703 0 100-1.406H7.871l-.248-1.406h10.62a1.057 1.057 0 001.035-.848l1.266-6.328a1.055 1.055 0 00-.22-.876z\"\n    />\n  ),\n});\n\nexport const ClockIcon = createIcon({\n  displayName: \"ClockIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <g>\n        <rect fill=\"none\" height=\"24\" width=\"24\" />\n      </g>\n      <g>\n        <g>\n          <g>\n            <path\n              fill=\"currentColor\"\n              d=\"M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M16.2,16.2L11,13V7h1.5v5.2l4.5,2.7L16.2,16.2z\"\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  ),\n});\n\nexport const CreditIcon = createIcon({\n  displayName: \"CreditIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M1.406 17.023a2.461 2.461 0 002.461 2.46h14.766a2.461 2.461 0 002.46-2.46v-6.768H1.407v6.768zm2.9-3.34a1.318 1.318 0 011.319-1.318h2.11a1.318 1.318 0 011.318 1.318v.879a1.318 1.318 0 01-1.319 1.318H5.625a1.318 1.318 0 01-1.318-1.318v-.879zM18.633 4.014H3.867a2.46 2.46 0 00-2.46 2.461v1.143h19.687V6.475a2.46 2.46 0 00-2.461-2.46z\"\n    />\n  ),\n});\n\nexport const DashboardLogo = createIcon({\n  displayName: \"DashboardLogo\",\n  viewBox: \"0 0 1000 257\",\n  path: (\n    <g width=\"998\" height=\"257\" viewBox=\"0 0 998 257\" fill=\"none\">\n      <g clip-path=\"url(#clip0)\">\n        <path\n          d=\"M388.5 115.302C406.112 115.302 413.966 126.726 416.584 136.96L441.336 127.916C436.576 109.352 419.44 89.836 388.262 89.836C354.942 89.836 329 115.54 329 151.24C329 186.464 354.942 212.882 388.976 212.882C419.44 212.882 436.814 193.128 442.288 175.04L418.012 166.234C415.394 175.04 407.064 187.654 388.976 187.654C371.602 187.654 356.608 174.564 356.608 151.24C356.608 127.916 371.602 115.302 388.5 115.302Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M484.894 141.244C485.37 126.488 493.7 115.064 508.932 115.064C526.306 115.064 532.732 126.488 532.732 140.768V209.312H560.34V136.008C560.34 110.542 546.536 90.074 517.976 90.074C505.838 90.074 492.748 94.358 484.894 104.592V37H457.286V209.312H484.894V141.244Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M577.29 177.896C577.29 196.222 592.284 212.882 616.56 212.882C635.362 212.882 646.786 203.362 652.26 194.556C652.26 203.838 653.212 208.598 653.45 209.312H679.154C678.916 208.122 677.726 201.22 677.726 190.748V133.152C677.726 110.066 664.16 89.836 628.46 89.836C599.9 89.836 581.812 107.686 579.67 127.678L604.898 133.39C606.088 121.728 614.18 112.446 628.698 112.446C643.93 112.446 650.594 120.3 650.594 130.058C650.594 134.104 648.69 137.436 642.026 138.388L612.276 142.91C592.522 145.766 577.29 157.19 577.29 177.896ZM621.796 191.224C610.848 191.224 604.898 184.084 604.898 176.23C604.898 166.71 611.8 161.95 620.368 160.522L650.594 156V161.236C650.594 183.846 637.266 191.224 621.796 191.224Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M810.108 93.406H773.456L728.95 140.292V37H701.58V209.312H728.95V176.944L743.23 161.95L777.264 209.312H811.06L762.508 142.434L810.108 93.406Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M889.349 92.692C888.159 92.454 885.303 91.978 881.971 91.978C866.739 91.978 853.887 99.356 848.413 111.97V93.406H821.519V209.312H849.127V154.096C849.127 132.438 858.885 120.062 880.305 120.062C883.161 120.062 886.255 120.3 889.349 120.776V92.692Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M895.968 177.896C895.968 196.222 910.962 212.882 935.238 212.882C954.04 212.882 965.464 203.362 970.938 194.556C970.938 203.838 971.89 208.598 972.128 209.312H997.832C997.594 208.122 996.404 201.22 996.404 190.748V133.152C996.404 110.066 982.838 89.836 947.138 89.836C918.578 89.836 900.49 107.686 898.348 127.678L923.576 133.39C924.766 121.728 932.858 112.446 947.376 112.446C962.608 112.446 969.272 120.3 969.272 130.058C969.272 134.104 967.368 137.436 960.704 138.388L930.954 142.91C911.2 145.766 895.968 157.19 895.968 177.896ZM940.474 191.224C929.526 191.224 923.576 184.084 923.576 176.23C923.576 166.71 930.478 161.95 939.046 160.522L969.272 156V161.236C969.272 183.846 955.944 191.224 940.474 191.224Z\"\n          fill=\"currentColor\"\n        />\n        <rect width=\"257\" height=\"257\" rx=\"128.5\" fill=\"#4FD1C5\" />\n        <path\n          d=\"M69.5584 133.985L157.15 46.9959C158.787 45.3708 161.42 47.3484 160.315 49.3729L127.714 109.125C126.987 110.457 127.951 112.083 129.47 112.083H185.809C187.624 112.083 188.501 114.306 187.174 115.545L88.4456 207.687C86.6753 209.339 84.0405 207.011 85.4617 205.051L132.197 140.578C133.156 139.256 132.211 137.404 130.578 137.404H70.9677C69.1826 137.404 68.2917 135.243 69.5584 133.985Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <linearGradient\n          id=\"paint0_linear\"\n          x1=\"128.5\"\n          y1=\"0\"\n          x2=\"128.5\"\n          y2=\"257\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stop-color=\"#7BCBD4\" />\n          <stop offset=\"1\" stop-color=\"#29C6B7\" />\n        </linearGradient>\n        <clipPath id=\"clip0\">\n          <rect width=\"997.832\" height=\"257\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </g>\n  ),\n});\n\nexport const DashboardLogoWhite = createIcon({\n  displayName: \"DashboardLogo\",\n  viewBox: \"0 0 163.5 42\",\n  path: (\n    <g fill=\"none\">\n      <path\n        d=\"M63.452 19.292c2.877 0 4.16 1.911 4.587 3.623l4.043-1.513c-.777-3.106-3.576-6.371-8.668-6.371-5.443 0-9.68 4.3-9.68 10.274 0 5.893 4.237 10.313 9.796 10.313 4.976 0 7.813-3.305 8.707-6.331l-3.965-1.473c-.427 1.473-1.788 3.583-4.742 3.583-2.837 0-5.286-2.19-5.286-6.092 0-3.903 2.449-6.013 5.208-6.013zM79.196 23.632c.078-2.469 1.438-4.38 3.926-4.38 2.838 0 3.887 1.911 3.887 4.3v11.47h4.51V22.755c0-4.26-2.255-7.685-6.92-7.685-1.982 0-4.12.716-5.403 2.429V6.19h-4.509v28.831h4.51V23.632zM94.287 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.936-1.592 5.83-3.066 0 1.553.156 2.35.195 2.47h4.198c-.039-.2-.233-1.355-.233-3.107v-9.637c0-3.862-2.216-7.247-8.047-7.247-4.664 0-7.619 2.986-7.968 6.332l4.12.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.226.478-5.714 2.39-5.714 5.854zm7.269 2.23c-1.788 0-2.76-1.195-2.76-2.509 0-1.593 1.127-2.39 2.527-2.628l4.936-.757v.876c0 3.783-2.176 5.018-4.703 5.018zM132.312 15.628h-5.986l-7.269 7.845V6.191h-4.47v28.83h4.47v-5.416l2.332-2.508 5.559 7.924h5.52l-7.93-11.19 7.774-8.203zM145.254 15.509a6.3 6.3 0 00-1.205-.12c-2.487 0-4.587 1.235-5.481 3.345v-3.106h-4.392v19.393h4.509v-9.238c0-3.624 1.594-5.695 5.092-5.695.467 0 .972.04 1.477.12v-4.7zM146.335 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.937-1.592 5.831-3.066 0 1.553.156 2.35.194 2.47h4.199c-.039-.2-.234-1.355-.234-3.107v-9.637c0-3.862-2.215-7.247-8.046-7.247-4.665 0-7.619 2.986-7.969 6.332l4.121.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.227.478-5.715 2.39-5.715 5.854zm7.269 2.23c-1.788 0-2.759-1.195-2.759-2.509 0-1.593 1.127-2.39 2.526-2.628l4.937-.757v.876c0 3.783-2.177 5.018-4.704 5.018zM41.975 21.5C41.975 9.626 32.578 0 20.987 0 9.398 0 0 9.626 0 21.5S9.396 43 20.988 43c11.59 0 20.987-9.626 20.987-21.5z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M11.36 22.418L25.668 7.863c.267-.272.697.06.517.398l-5.325 9.997c-.119.223.039.495.287.495h9.202c.296 0 .44.372.223.58L14.446 34.748c-.29.277-.72-.113-.488-.44l7.633-10.788c.157-.221.003-.531-.264-.531H11.59c-.292 0-.437-.362-.23-.572z\"\n        fill=\"#3BCBBE\"\n      />\n    </g>\n  ),\n});\n\nexport const DocumentIcon = createIcon({\n  displayName: \"DocumentIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M18.809 10.344h-6.153a2.11 2.11 0 01-2.11-2.11V2.083a.176.176 0 00-.175-.176H6.328A2.812 2.812 0 003.516 4.72v14.063a2.812 2.812 0 002.812 2.812h9.844a2.812 2.812 0 002.812-2.813V10.52a.176.176 0 00-.175-.176z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M18.423 8.789l-6.32-6.32a.088.088 0 00-.15.062v5.705a.703.703 0 00.703.703h5.705a.088.088 0 00.062-.15z\"\n      />\n    </g>\n  ),\n});\n\nexport const GlobeIcon = createIcon({\n  displayName: \"GlobeIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M11.25 2.109a9.14 9.14 0 100 18.281 9.14 9.14 0 000-18.281z\"\n        stroke-width=\".75\"\n        stroke-miterlimit=\"10\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M11.25 2.109C8.698 2.109 6.3 6.2 6.3 11.249c0 5.048 2.4 9.14 4.951 9.14 2.552 0 4.951-4.092 4.951-9.14 0-5.048-2.399-9.14-4.95-9.14z\"\n        stroke-width=\".75\"\n        stroke-miterlimit=\"10\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904M17.344 17.344c-1.68-1.193-3.796-1.904-6.094-1.904-2.298 0-4.413.711-6.094 1.904\"\n        stroke-width=\".75\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M11.25 2.109v18.28M20.39 11.249H2.11\"\n        stroke-width=\".75\"\n        stroke-miterlimit=\"10\"\n      />\n    </g>\n  ),\n});\n\nexport const HelpIcon = createIcon({\n  displayName: \"HelpIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M11.25 0C5.04 0 0 5.04 0 11.25S5.04 22.5 11.25 22.5 22.5 17.46 22.5 11.25 17.46 0 11.25 0zm-.352 17.813a1.172 1.172 0 110-2.344 1.172 1.172 0 010 2.344zm1.96-5.977c-.95.637-1.08 1.222-1.08 1.758a.82.82 0 11-1.641 0c0-1.284.59-2.305 1.806-3.121 1.13-.758 1.768-1.239 1.768-2.295 0-.718-.41-1.264-1.26-1.668-.199-.095-.644-.187-1.191-.18-.687.008-1.22.172-1.63.503-.775.623-.84 1.302-.84 1.312a.821.821 0 11-1.642-.08c.007-.142.106-1.425 1.452-2.507.698-.562 1.585-.854 2.636-.866.745-.01 1.444.117 1.918.34 1.418.672 2.198 1.79 2.198 3.146 0 1.982-1.325 2.872-2.494 3.658z\"\n    />\n  ),\n});\n\nexport const HomeIcon = createIcon({\n  displayName: \"HomeIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M11.494 4.951a.351.351 0 00-.486 0l-8.09 7.729a.352.352 0 00-.109.254v7.254a1.406 1.406 0 001.405 1.406h4.223a.703.703 0 00.704-.703v-5.976a.351.351 0 01.351-.352h3.516a.351.351 0 01.351.352v5.976a.703.703 0 00.704.703h4.22a1.407 1.407 0 001.407-1.406v-7.254a.35.35 0 00-.108-.254L11.494 4.95z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M21.574 11.23l-3.287-3.144V3.314a.703.703 0 00-.703-.703h-2.11a.703.703 0 00-.703.703V4.72l-2.545-2.434c-.239-.24-.593-.378-.976-.378-.38 0-.734.138-.972.379L.93 11.23a.717.717 0 00-.058.983.703.703 0 001.018.046l9.119-8.713a.352.352 0 01.486 0l9.12 8.713a.703.703 0 00.992-.019c.27-.28.248-.74-.033-1.01z\"\n      />\n    </g>\n  ),\n});\n\nexport const InvisionLogo = createIcon({\n  displayName: \"InvisionLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M18.687 0H2.313A1.813 1.813 0 00.5 1.811v16.374C.5 19.188 1.312 20 2.313 20h16.374a1.813 1.813 0 001.813-1.813V1.812A1.813 1.813 0 0018.687 0z\"\n        fill=\"#DC395F\"\n      />\n      <path\n        d=\"M7.184 6.293c.665 0 1.222-.522 1.222-1.204 0-.683-.557-1.204-1.222-1.204-.665 0-1.222.521-1.222 1.204 0 .682.557 1.204 1.222 1.204zM4.65 12.739a4.134 4.134 0 00-.108.905c0 1.06.575 1.764 1.797 1.764 1.013 0 1.834-.602 2.426-1.573l-.361 1.449h2.012l1.15-4.612c.287-1.168.844-1.774 1.689-1.774.665 0 1.078.413 1.078 1.096 0 .197-.018.413-.09.646l-.593 2.12c-.09.306-.126.611-.126.899 0 1.006.593 1.742 1.833 1.742 1.06 0 1.904-.682 2.371-2.317l-.79-.305c-.395 1.095-.737 1.293-1.006 1.293-.27 0-.414-.18-.414-.538 0-.162.037-.342.09-.558l.575-2.065c.144-.485.198-.915.198-1.31 0-1.546-.934-2.352-2.066-2.352-1.06 0-2.138.956-2.677 1.962l.395-1.806H8.962L8.53 8.996h1.438l-.885 3.544c-.695 1.545-1.972 1.57-2.132 1.534-.264-.06-.432-.159-.432-.5 0-.198.036-.482.126-.823l1.348-5.346H4.579l-.431 1.591h1.419L4.65 12.74\"\n        fill=\"#fff\"\n      />\n    </g>\n  ),\n});\n\nexport const JiraLogo = createIcon({\n  displayName: \"JiraLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M20.26 10.42l-8.863-8.93-.86-.865-6.67 6.722L.814 10.42a.827.827 0 000 1.162l6.096 6.14 3.627 3.654 6.67-6.722.105-.104 2.947-2.964a.824.824 0 000-1.166zm-9.722 3.649L7.493 11l3.045-3.068L13.582 11l-3.044 3.068z\"\n        fill=\"#2684FF\"\n      />\n      <path\n        d=\"M10.537 7.932a5.184 5.184 0 01-1.502-3.637A5.185 5.185 0 0110.515.65L3.852 7.36l3.626 3.654 3.06-3.082z\"\n        fill=\"url(#paint0_linear)\"\n      />\n      <path\n        d=\"M13.59 10.992l-3.053 3.076a5.186 5.186 0 011.502 3.653c0 1.37-.54 2.683-1.502 3.652l6.682-6.728-3.63-3.653z\"\n        fill=\"url(#paint1_linear)\"\n      />\n    </g>\n  ),\n});\n\nexport const MastercardIcon = createIcon({\n  displayName: \"MastercardIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <svg\n      width=\"24\"\n      height=\"20\"\n      viewBox=\"0 0 21 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"6.63158\" cy=\"7.49999\" r=\"6.63158\" fill=\"#EB001B\" />\n      <circle cx=\"14.3686\" cy=\"7.49999\" r=\"6.63158\" fill=\"#F79E1B\" />\n    </svg>\n  ),\n});\n\nexport const PayPalIcon = createIcon({\n  displayName: \"PayPalIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M16.179 2.532C15.142 1.357 13.265.854 10.863.854H3.895a.997.997 0 00-.986.834L.007 19.945a.595.595 0 00.591.686H4.9l1.08-6.8-.033.215a.993.993 0 01.983-.834h2.044c4.017 0 7.16-1.619 8.08-6.3.027-.14.07-.406.07-.406.262-1.732-.001-2.907-.945-3.974z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M18.213 7.393c-.998 4.61-4.184 7.048-9.24 7.048H7.142L5.773 23.1h2.973a.87.87 0 00.862-.731l.035-.184.684-4.297.044-.237a.87.87 0 01.86-.731h.544c3.514 0 6.264-1.416 7.068-5.51.322-1.644.166-3.021-.63-4.017z\"\n      />\n    </g>\n  ),\n});\n\nexport const PersonIcon = createIcon({\n  displayName: \"PersonIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M14.618 3.338c-.855-.924-2.05-1.432-3.368-1.432-1.325 0-2.524.505-3.375 1.423-.86.928-1.28 2.188-1.181 3.55.195 2.686 2.239 4.87 4.556 4.87s4.358-2.184 4.556-4.87c.1-1.349-.322-2.607-1.188-3.541zM18.984 21.592H3.515a1.363 1.363 0 01-1.063-.489 1.552 1.552 0 01-.316-1.279c.371-2.058 1.529-3.786 3.348-5 1.616-1.076 3.664-1.67 5.766-1.67s4.15.594 5.765 1.67c1.82 1.214 2.977 2.942 3.348 5 .085.471-.03.937-.315 1.279a1.362 1.362 0 01-1.064.49z\"\n    />\n  ),\n});\n\nexport const ProfileIcon = createIcon({\n  displayName: \"ProfileIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path d=\"M0 0h24v24H0V0z\" fill=\"transparent\" />\n      <path\n        fill=\"currentColor\"\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z\"\n      />\n    </g>\n  ),\n});\n\nexport const RocketIcon = createIcon({\n  displayName: \"RocketIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M20.99 2.182a.209.209 0 00-.156-.16c-2.574-.63-8.521 1.613-11.743 4.833a13.93 13.93 0 00-1.566 1.85c-.994-.087-1.987-.014-2.834.355-2.39 1.052-3.085 3.796-3.279 4.976a.424.424 0 00.464.492l3.837-.423c.002.29.02.578.052.866.02.2.108.386.25.527l1.486 1.482a.86.86 0 00.528.25c.286.033.573.05.86.053l-.42 3.832a.424.424 0 00.492.464c1.178-.19 3.927-.885 4.972-3.274.37-.847.445-1.836.36-2.824a13.96 13.96 0 001.855-1.567c3.232-3.216 5.462-9.03 4.842-11.732zm-8.067 7.896a2.11 2.11 0 112.983-2.984 2.11 2.11 0 01-2.983 2.984z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M7.4 18.054c-.24.241-.627.335-1.092.416-1.044.178-1.967-.725-1.779-1.78.072-.401.283-.962.415-1.094a.192.192 0 00-.16-.328 2.636 2.636 0 00-1.544.753c-1.033 1.034-1.13 4.87-1.13 4.87s3.838-.097 4.872-1.13c.417-.417.682-.961.752-1.546.017-.184-.207-.293-.334-.16z\"\n      />\n    </g>\n  ),\n});\n\nexport const SettingsIcon = createIcon({\n  displayName: \"SettingsIcon\",\n  viewBox: \"0 0 24 24\",\n  // path can also be an array of elements, if you have multiple paths, lines, shapes, etc.\n  path: (\n    <g>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n      <path\n        fill=\"currentColor\"\n        d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n      />\n    </g>\n  ),\n});\n\nexport const SlackLogo = createIcon({\n  displayName: \"SlackLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n      <path\n        d=\"M7.832.5c-1.105 0-2 .919-1.999 2.05 0 1.13.895 2.048 2 2.05h2V2.55c.001-1.13-.894-2.048-2-2.05zm0 5.467H2.5c-1.106 0-2.001.918-2 2.05-.002 1.13.894 2.048 2 2.05h5.332c1.106-.001 2.002-.919 2-2.05.002-1.132-.894-2.05-2-2.05z\"\n        fill=\"#36C5F0\"\n      />\n      <path\n        d=\"M20.5 8.016c0-1.13-.895-2.048-2-2.05-1.106.002-2.002.92-2 2.05v2.05h2c1.105 0 2-.918 2-2.05zm-5.334 0V2.55c.001-1.13-.893-2.048-2-2.05-1.105 0-2 .919-2 2.05v5.466c-.001 1.131.894 2.049 2 2.05 1.106 0 2.001-.918 2-2.05z\"\n        fill=\"#2EB67D\"\n      />\n      <path\n        d=\"M13.166 21c1.106 0 2.001-.919 2-2.05.001-1.13-.894-2.048-2-2.05h-2v2.05c-.001 1.13.894 2.048 2 2.05zm0-5.467h5.333c1.106-.001 2.002-.92 2-2.05.002-1.131-.893-2.049-1.999-2.05h-5.333c-1.106 0-2.001.918-2 2.05-.001 1.13.893 2.049 1.999 2.05z\"\n        fill=\"#ECB22E\"\n      />\n      <path\n        d=\"M.5 13.483c-.001 1.13.895 2.049 2 2.05 1.106-.001 2.001-.92 2-2.05v-2.05h-2c-1.105.001-2.001.919-2 2.05zm5.333 0v5.467c-.001 1.13.894 2.048 2 2.05 1.105 0 2-.919 2-2.05v-5.465c.002-1.131-.894-2.05-2-2.05-1.106 0-2 .917-2 2.048z\"\n        fill=\"#E01E5A\"\n      />\n    </g>\n  ),\n});\n\nexport const SpotifyLogo = createIcon({\n  displayName: \"SpotifyLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M10.5 0C4.977 0 .5 4.477.5 10s4.477 10 10 10 10-4.477 10-10c0-5.522-4.477-10-10-10zm4.586 14.422a.623.623 0 01-.857.208c-2.348-1.435-5.304-1.76-8.785-.964a.623.623 0 11-.277-1.216c3.808-.87 7.076-.495 9.712 1.115.294.181.387.564.207.857zm1.223-2.722a.78.78 0 01-1.072.257c-2.687-1.652-6.786-2.13-9.965-1.166a.78.78 0 01-.973-.519.781.781 0 01.52-.972c3.632-1.102 8.147-.569 11.233 1.329a.78.78 0 01.258 1.072zm.106-2.835C13.19 6.95 7.875 6.775 4.797 7.708a.935.935 0 11-.543-1.79c3.533-1.072 9.404-.865 13.115 1.338a.935.935 0 01-.954 1.609z\"\n        fill=\"#2EBD59\"\n      />\n    </g>\n  ),\n});\n\nexport const SupportIcon = createIcon({\n  // Doesn't display the full icon without w and h being specified\n  displayName: \"BuildIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M20.885 5.547a.703.703 0 00-1.122-.176l-2.7 2.702a.708.708 0 01-.995 0l-1.167-1.169a.702.702 0 010-.994l2.689-2.69a.704.704 0 00-.21-1.138c-2.031-.908-4.566-.435-6.164 1.152-1.358 1.348-1.763 3.455-1.11 5.78a.698.698 0 01-.197.703L2.593 16.4a2.82 2.82 0 103.981 3.983l6.754-7.332a.699.699 0 01.693-.2 7.885 7.885 0 002.03.279c1.469 0 2.757-.475 3.686-1.39 1.72-1.695 1.983-4.57 1.148-6.192zM4.623 19.901a1.407 1.407 0 11-.305-2.797 1.407 1.407 0 01.305 2.797z\"\n    />\n  ),\n});\n\nexport const StatsIcon = createIcon({\n  displayName: \"StatsIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M4.57 22.297H3.164a1.055 1.055 0 01-1.055-1.054v-6.328a1.055 1.055 0 011.055-1.055H4.57a1.055 1.055 0 011.055 1.055v6.328a1.055 1.055 0 01-1.055 1.054zM14.414 22.296h-1.406a1.055 1.055 0 01-1.055-1.055V10.695a1.055 1.055 0 011.055-1.055h1.406a1.055 1.055 0 011.055 1.055V21.24a1.055 1.055 0 01-1.055 1.055zM19.336 22.297H17.93a1.055 1.055 0 01-1.055-1.055V5.773A1.055 1.055 0 0117.93 4.72h1.406a1.055 1.055 0 011.055 1.054v15.47a1.055 1.055 0 01-1.055 1.054zM9.492 22.297H8.086a1.055 1.055 0 01-1.055-1.055V2.257a1.055 1.055 0 011.055-1.054h1.406a1.055 1.055 0 011.055 1.054v18.985a1.055 1.055 0 01-1.055 1.055z\"\n    />\n  ),\n});\n\nexport const WalletIcon = createIcon({\n  displayName: \"WalletIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M4.447 4.818h14.062c.164 0 .328.01.491.031a2.9 2.9 0 00-3.406-2.441L4.03 4.382h-.013a2.9 2.9 0 00-1.805 1.149 3.848 3.848 0 012.236-.713zM18.51 5.875H4.446a2.816 2.816 0 00-2.813 2.812v8.438a2.816 2.816 0 002.813 2.812h14.062a2.815 2.815 0 002.813-2.812V8.687a2.815 2.815 0 00-2.813-2.812zm-2.088 8.437a1.406 1.406 0 110-2.811 1.406 1.406 0 010 2.811z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M1.656 11.651V7.28c0-.952.528-2.549 2.358-2.895 1.553-.291 3.091-.291 3.091-.291s1.011.703.176.703-.813 1.077 0 1.077 0 1.032 0 1.032L4.007 10.62l-2.35 1.032z\"\n      />\n    </g>\n  ),\n});\n\nexport const VisaIcon = createIcon({\n  displayName: \"VisaIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <svg\n      width=\"26\"\n      height=\"20\"\n      viewBox=\"0 0 30 9\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M12.6708 2.96349C12.6568 4.15055 13.653 4.81298 14.4034 5.20684C15.1744 5.61099 15.4333 5.87013 15.4304 6.23147C15.4245 6.78459 14.8153 7.02862 14.2452 7.03812C13.2505 7.05475 12.6723 6.74889 12.2125 6.51753L11.8542 8.32341C12.3155 8.55247 13.1696 8.75217 14.0554 8.76087C16.1345 8.76087 17.4947 7.65543 17.5021 5.94145C17.5102 3.76625 14.7087 3.64579 14.7278 2.67348C14.7344 2.37871 14.9956 2.06408 15.568 1.98406C15.8512 1.94368 16.6332 1.91274 17.5198 2.35252L17.8677 0.605286C17.391 0.418253 16.7782 0.239136 16.0153 0.239136C14.0583 0.239136 12.6819 1.35962 12.6708 2.96349ZM21.2115 0.389687C20.8319 0.389687 20.5118 0.628245 20.3691 0.99433L17.3991 8.63249H19.4767L19.8901 7.40183H22.429L22.6689 8.63249H24.5L22.9021 0.389687H21.2115ZM21.5021 2.61641L22.1016 5.7116H20.4596L21.5021 2.61641ZM10.1518 0.389687L8.51418 8.63249H10.4939L12.1308 0.389687H10.1518ZM7.22303 0.389687L5.16233 6.00003L4.32878 1.22966C4.23097 0.697187 3.84472 0.389687 3.41579 0.389687H0.0471011L0 0.629037C0.691574 0.790671 1.47729 1.0514 1.95326 1.33033C2.24457 1.50067 2.32775 1.64964 2.42336 2.05458L4.00214 8.63249H6.0945L9.3021 0.389687H7.22303Z\"\n        fill=\"#4318FF\"\n      />\n    </svg>\n  ),\n});\n","/** @format */\n\n// Student routes\n\nimport Dashboard from \"views/Home/DashBoard/Dashboard0.js\";\nimport GeneralInformation from \"views/Home/GeneralInformation/GeneralInformation0\";\nimport InternationalData from \"views/Pages/InternationalData/InternationalData0\";\nimport ExtraCurricularData from \"views/Pages/ExtraCurricularData/ExtraCurricularData0\";\nimport Academicsdata from \"views/Pages/AcademicData/Academicdata0\";\nimport ProfessionalDevelopmentData0 from \"views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData0\";\n\nimport Profile from \"views/Home/Profile/Profile0.js\";\nimport SignIn from \"views/Pages/SignIn.js\";\n\nimport {\n  HomeIcon,\n  StatsIcon,\n  CreditIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n  // {\n  //   path: \"/dashboard\",\n  //   name: \"Dashboard\",\n  //   icon: <HomeIcon color=\"inherit\" />,\n  //   component: Dashboard,\n  //   layout: \"/admin0\",\n  // },\n  {\n    path: \"/GeneralInformation\",\n    name: \"General Information\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: GeneralInformation,\n    layout: \"/admin0\",\n  },\n\n  {\n    path: \"/InternationalData\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        International Exposure\n      </p>\n    ),\n    icon: <StatsIcon color=\"inherit\" />,\n    component: InternationalData,\n    layout: \"/admin0\",\n  },\n  {\n    path: \"/ExtracurricularData\",\n    name: \"ExtraCurricular\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: ExtraCurricularData,\n    layout: \"/admin0\",\n  },\n  {\n    path: \"/ProfessionalDevelopmentdata\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          lineHeight: \"1.2rem\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        Professional Development\n      </p>\n    ),\n    icon: <StatsIcon color=\"inherit\" />,\n    component: ProfessionalDevelopmentData0,\n    layout: \"/admin0\",\n  },\n  {\n    path: \"/Academicsdata\",\n    name: \"Academics\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: Academicsdata,\n    layout: \"/admin0\",\n  },\n\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    icon: <PersonIcon color=\"inherit\" />,\n    secondaryNavbar: true,\n    component: Profile,\n    layout: \"/admin0\",\n  },\n  {\n    path: \"/signin\",\n    name: \"Log Out\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: SignIn,\n    layout: \"/auth\",\n  },\n];\nexport default dashRoutes;\n","/** @format */\n\n//Class Advisor GeneralInformationData\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  useColorModeValue,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  SimpleGrid,\n  useToast,\n  Button,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow2 from \"components/Tables/TableRow/TableRow2\";\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationdata({ location }) {\n  function fundelete() {\n    let params = new URLSearchParams();\n    params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n    axios.post(server_URL + \"GeneralDataDelete\", params);\n    window.location.href = URL + \"Class-Advisor#/admin1/GeneralInformation\";\n  }\n  function newReload() {\n    window.location.href =\n      URL + \"Class-Advisor#/admin1/GeneralInformationDataEdit\";\n  }\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  // Toast var\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  var GData = TableRow2;\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.sname} field=\"Student Name\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.roll_no} field=\"Roll No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.reg_no} field=\"Register No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.gender} field=\"Sex\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.dob} field=\"Date Of Birth\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.nationality} field=\"Nationality\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.religion} field=\"Religion\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.if_catholic_parish}\n                        field=\"If Catholic, Parish?\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.dalit_catholic_yn}\n                        field=\"Dalit Catholic\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.community} field=\"Community\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.blood_group} field=\"Blood Group\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.mother_tongue} field=\"Mother Tongue\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.contact_no} field=\"Contact Number\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.aadhar_no} field=\"Aadhar No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.licet_email}\n                        field=\"Official Email ID\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.email} field=\"personal Email ID\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.present_address}\n                        field=\"Present Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.permanent_address}\n                        field=\"Permanent Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_group} field=\"Group\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_cutoff} field=\"Cut-Off Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.sslc_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.sslc_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.father_name} field=\"Father's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_qualification}\n                          field=\"Father's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_occupation}\n                          field=\"Father's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_office_address}\n                          field=\"Father's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_annual_income}\n                          field=\"Father's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_mob_no}\n                          field=\"Father's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_email}\n                          field=\"Father's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_name}\n                          field=\"Guardian Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_qualification}\n                          field=\"Guardian Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_occupation}\n                          field=\"Guardian Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_office_address}\n                          field=\"Guardian Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_annual_income}\n                          field=\"Guardian Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_mob_no}\n                          field=\"Guardian Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_email}\n                          field=\"Guardian Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.mother_name} field=\"Mother's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_qualification}\n                          field=\"Mother's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_occupation}\n                          field=\"Mother's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_office_address}\n                          field=\"Mother's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_annual_income}\n                          field=\"Mother's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_mob_no}\n                          field=\"Mother's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_email}\n                          field=\"Mother's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.no_of_siblings}\n                          field=\"No. of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.qualification_siblings}\n                          field=\"Qualification Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.occupation_siblings}\n                          field=\"Occupation Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.alumni_licet_loyola_yn}\n                          field=\"Alumni of LICET or LOYOLA\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.application_no}\n                          field=\"Application No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.date_of_ad}\n                          field=\"Date Of Admission\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.quota} field=\"Quota\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.regular_lateral_rl}\n                          field=\"Regular / Lateral Entry\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dayschl_hosteller_dh}\n                          field=\"Day Scholar / Hosteller\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_name}\n                          field=\"Scholarship Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_amount}\n                          field=\"Scholarship Amount\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.first_graduate_yn}\n                          field=\"First Graduate\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.eco_backward_yn}\n                          field=\"Economically Backward (Annual Income of Parents Less than 1LPA)\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical and Non-Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.programming_languages}\n                          field=\"Programming Languages\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.lang_know} field=\"Languages Known\" />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.software_proficiency}\n                          field=\"Software Proficieny\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dept_rel_proficiency}\n                          field=\"Department Related Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.certifications}\n                          field=\"Certifications\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_skills}\n                          field=\"Other Technical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.aptitude_analytical_skills}\n                          field=\"Aptitude / Analytical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.communication_skills}\n                          field=\"Communication Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.social_media_exposure}\n                          field=\"Social Media Exposure\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.leadership_skills}\n                          field=\"Leadership Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_interpersonal_skills}\n                          field=\"Other Interpersonal Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals and Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.short_term_goal}\n                          field=\"Short Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.long_term_goal}\n                          field=\"Long Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_name}\n                          field=\"Membership Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_no}\n                          field=\"Membership No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_duration}\n                          field=\"Membership Duration\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n      <SimpleGrid pt=\"1.5rem\" columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={newReload}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Edit\n            </Button>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={onOpen}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Delete\n            </Button>\n            <Modal\n              isOpen={isOpen}\n              onClose={() => {\n                onClose();\n              }}\n            >\n              <ModalContent>\n                <ModalHeader>Confirmation</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>Delete this student ?</ModalBody>\n                <ModalFooter>\n                  <Button\n                    colorScheme=\"blue\"\n                    mr={3}\n                    onClick={() => {\n                      onClose();\n                      fundelete();\n                      toast({\n                        title: \"Student Record Deleted Successfully\",\n                        status: \"success\",\n                        duration: 9000,\n                        position: \"top\",\n                        isClosable: true,\n                      });\n                    }}\n                  >\n                    Confirm\n                  </Button>\n                  <Button\n                    colorScheme=\"blue\"\n                    mr={3}\n                    onClick={() => {\n                      onClose();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationdata;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  useColorModeValue,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  SimpleGrid,\n  Button,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow2 from \"components/Tables/TableRow/TableRow2\";\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationdata({ location }) {\n  function fundelete() {\n    let params = new URLSearchParams();\n    params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n    axios.post(server_URL + \"GeneralDataDelete\", params);\n    window.location.href = URL + \"HoD#/admin2/GeneralInformation\";\n  }\n\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  var GData = TableRow2;\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.sname} field=\"Student Name\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.roll_no} field=\"Roll No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.reg_no} field=\"Register No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.gender} field=\"Sex\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.dob} field=\"Date Of Birth\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.nationality} field=\"Nationality\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.religion} field=\"Religion\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.if_catholic_parish}\n                        field=\"If Catholic, Parish?\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.dalit_catholic_yn}\n                        field=\"Dalit Catholic\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.community} field=\"Community\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.blood_group} field=\"Blood Group\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.mother_tongue} field=\"Mother Tongue\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.contact_no} field=\"Contact Number\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.aadhar_no} field=\"Aadhar No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.licet_email}\n                        field=\"Official Email ID\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.email} field=\"personal Email ID\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.present_address}\n                        field=\"Present Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.permanent_address}\n                        field=\"Permanent Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <SimpleGrid columns={{ sm: 1, md: 1, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_group} field=\"Group\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_cutoff} field=\"Cut-Off Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.sslc_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.sslc_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.father_name} field=\"Father's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_qualification}\n                          field=\"Father's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_occupation}\n                          field=\"Father's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_office_address}\n                          field=\"Father's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_annual_income}\n                          field=\"Father's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_mob_no}\n                          field=\"Father's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_email}\n                          field=\"Father's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_name}\n                          field=\"Guardian Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_qualification}\n                          field=\"Guardian Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_occupation}\n                          field=\"Guardian Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_office_address}\n                          field=\"Guardian Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_annual_income}\n                          field=\"Guardian Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_mob_no}\n                          field=\"Guardian Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_email}\n                          field=\"Guardian Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.mother_name} field=\"Mother's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_qualification}\n                          field=\"Mother's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_occupation}\n                          field=\"Mother's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_office_address}\n                          field=\"Mother's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_annual_income}\n                          field=\"Mother's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_mob_no}\n                          field=\"Mother's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_email}\n                          field=\"Mother's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.no_of_siblings}\n                          field=\"No. of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.qualification_siblings}\n                          field=\"Qualification Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.occupation_siblings}\n                          field=\"Occupation Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.alumni_licet_loyola_yn}\n                          field=\"Alumni of LICET or LOYOLA\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.application_no}\n                          field=\"Application No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.date_of_ad}\n                          field=\"Date Of Admission\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.quota} field=\"Quota\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.regular_lateral_rl}\n                          field=\"Regular / Lateral Entry\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dayschl_hosteller_dh}\n                          field=\"Day Scholar / Hosteller\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_name}\n                          field=\"Scholarship Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_amount}\n                          field=\"Scholarship Amount\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.first_graduate_yn}\n                          field=\"First Graduate\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.eco_backward_yn}\n                          field=\"Economically Backward (Annual Income of Parents Less than 1LPA)\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical and Non-Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.programming_languages}\n                          field=\"Programming Languages\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.software_proficiency}\n                          field=\"Software Proficieny\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dept_rel_proficiency}\n                          field=\"Department Related Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.certifications}\n                          field=\"Certifications\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_skills}\n                          field=\"Other Technical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.aptitude_analytical_skills}\n                          field=\"Aptitude / Analytical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.communication_skills}\n                          field=\"Communication Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.social_media_exposure}\n                          field=\"Social Media Exposure\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.leadership_skills}\n                          field=\"Leadership Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_interpersonal_skills}\n                          field=\"Other Interpersonal Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals and Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.short_term_goal}\n                          field=\"Short Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.long_term_goal}\n                          field=\"Long Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_name}\n                          field=\"Membership Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_no}\n                          field=\"Membership No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_duration}\n                          field=\"Membership Duration\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationdata;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  useColorModeValue,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  SimpleGrid,\n  Button,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow2 from \"components/Tables/TableRow/TableRow2\";\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationdata({ location }) {\n  function fundelete() {\n    let params = new URLSearchParams();\n    params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n    axios.post(server_URL + \"GeneralDataDelete\", params);\n    window.location.href = URL + \"LICET#/admin3/GeneralInformation\";\n  }\n\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  var GData = TableRow2;\n  return (\n    <Flex direction=\"column\" pt={{ base: \"500px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.sname} field=\"Student Name\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.roll_no} field=\"Roll No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.reg_no} field=\"Register No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.gender} field=\"Sex\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.dob} field=\"Date Of Birth\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.nationality} field=\"Nationality\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.religion} field=\"Religion\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.if_catholic_parish}\n                        field=\"If Catholic, Parish?\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.dalit_catholic_yn}\n                        field=\"Dalit Catholic\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.community} field=\"Community\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.blood_group} field=\"Blood Group\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.mother_tongue} field=\"Mother Tongue\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.contact_no} field=\"Contact Number\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.aadhar_no} field=\"Aadhar No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.licet_email}\n                        field=\"Official Email ID\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.email} field=\"personal Email ID\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.present_address}\n                        field=\"Present Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.permanent_address}\n                        field=\"Permanent Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_group} field=\"Group\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_cutoff} field=\"Cut-Off Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.sslc_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.sslc_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.father_name} field=\"Father's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_qualification}\n                          field=\"Father's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_occupation}\n                          field=\"Father's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_office_address}\n                          field=\"Father's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_annual_income}\n                          field=\"Father's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_mob_no}\n                          field=\"Father's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_email}\n                          field=\"Father's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_name}\n                          field=\"Guardian Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_qualification}\n                          field=\"Guardian Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_occupation}\n                          field=\"Guardian Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_office_address}\n                          field=\"Guardian Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_annual_income}\n                          field=\"Guardian Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_mob_no}\n                          field=\"Guardian Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_email}\n                          field=\"Guardian Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.mother_name} field=\"Mother's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_qualification}\n                          field=\"Mother's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_occupation}\n                          field=\"Mother's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_office_address}\n                          field=\"Mother's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_annual_income}\n                          field=\"Mother's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_mob_no}\n                          field=\"Mother's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_email}\n                          field=\"Mother's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.no_of_siblings}\n                          field=\"No. of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.qualification_siblings}\n                          field=\"Qualification Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.occupation_siblings}\n                          field=\"Occupation Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.alumni_licet_loyola_yn}\n                          field=\"Alumni of LICET or LOYOLA\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.application_no}\n                          field=\"Application No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.date_of_ad}\n                          field=\"Date Of Admission\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.quota} field=\"Quota\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.regular_lateral_rl}\n                          field=\"Regular / Lateral Entry\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dayschl_hosteller_dh}\n                          field=\"Day Scholar / Hosteller\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_name}\n                          field=\"Scholarship Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_amount}\n                          field=\"Scholarship Amount\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.first_graduate_yn}\n                          field=\"First Graduate\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.eco_backward_yn}\n                          field=\"Economically Backward (Annual Income of Parents Less than 1LPA)\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical and Non-Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.programming_languages}\n                          field=\"Programming Languages\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.software_proficiency}\n                          field=\"Software Proficieny\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dept_rel_proficiency}\n                          field=\"Department Related Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.certifications}\n                          field=\"Certifications\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_skills}\n                          field=\"Other Technical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.aptitude_analytical_skills}\n                          field=\"Aptitude / Analytical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.communication_skills}\n                          field=\"Communication Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.social_media_exposure}\n                          field=\"Social Media Exposure\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.leadership_skills}\n                          field=\"Leadership Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_interpersonal_skills}\n                          field=\"Other Interpersonal Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals and Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.short_term_goal}\n                          field=\"Short Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.long_term_goal}\n                          field=\"Long Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_name}\n                          field=\"Membership Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_no}\n                          field=\"Membership No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_duration}\n                          field=\"Membership Duration\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationdata;\n","/** @format */\n\n//Class Advisor GeneralInformationData\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  useColorModeValue,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  SimpleGrid,\n  useToast,\n  Button,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow2 from \"components/Tables/TableRow/TableRow2\";\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationdata({ location }) {\n  function fundelete() {\n    let params = new URLSearchParams();\n    params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n    axios.post(server_URL + \"GeneralDataDelete\", params);\n    window.location.href = URL + \"Admin#/admin4/GeneralInformation\";\n  }\n  function newReload() {\n    window.location.href = URL + \"Admin#/admin4/GeneralInformationDataEdit\";\n  }\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  // Toast var\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  var GData = TableRow2;\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.sname} field=\"Student Name\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.roll_no} field=\"Roll No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.reg_no} field=\"Register No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.gender} field=\"Sex\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.dob} field=\"Date Of Birth\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.nationality} field=\"Nationality\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.religion} field=\"Religion\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.if_catholic_parish}\n                        field=\"If Catholic, Parish?\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.dalit_catholic_yn}\n                        field=\"Dalit Catholic\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.community} field=\"Community\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.blood_group} field=\"Blood Group\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.mother_tongue} field=\"Mother Tongue\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.contact_no} field=\"Contact Number\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return <GData data={item.aadhar_no} field=\"Aadhar No.\" />;\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.licet_email}\n                        field=\"Official Email ID\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData data={item.email} field=\"personal Email ID\" />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.present_address}\n                        field=\"Present Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n                <Tr>\n                  {data.map((item) => {\n                    return (\n                      <GData\n                        data={item.permanent_address}\n                        field=\"Permanent Address\"\n                      />\n                    );\n                  })}\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.hse_group} field=\"Group\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.hse_cutoff} field=\"Cut-Off Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.hse_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_school_name}\n                          field=\"Name of the school\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.sslc_board} field=\"Board\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_medium}\n                          field=\"Medium of Instruction\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_sec_lang}\n                          field=\"Second Language\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.sslc_marks} field=\"Total Marks\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_percentage}\n                          field=\"Overall Percentage\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.sslc_attempts}\n                          field=\"No. of Attempts\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.father_name} field=\"Father's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_qualification}\n                          field=\"Father's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_occupation}\n                          field=\"Father's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_office_address}\n                          field=\"Father's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_annual_income}\n                          field=\"Father's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_mob_no}\n                          field=\"Father's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.father_email}\n                          field=\"Father's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_name}\n                          field=\"Guardian Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_qualification}\n                          field=\"Guardian Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_occupation}\n                          field=\"Guardian Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_office_address}\n                          field=\"Guardian Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_annual_income}\n                          field=\"Guardian Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_mob_no}\n                          field=\"Guardian Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.guardian_email}\n                          field=\"Guardian Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.mother_name} field=\"Mother's Name\" />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_qualification}\n                          field=\"Mother's Qualification\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_occupation}\n                          field=\"Mother's Occupation\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_office_address}\n                          field=\"Mother's Office Address\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_annual_income}\n                          field=\"Mother's Annual Income\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_mob_no}\n                          field=\"Mother's Mobile No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.mother_email}\n                          field=\"Mother's Email ID\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.no_of_siblings}\n                          field=\"No. of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.qualification_siblings}\n                          field=\"Qualification Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.occupation_siblings}\n                          field=\"Occupation Of Siblings\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.alumni_licet_loyola_yn}\n                          field=\"Alumni of LICET or LOYOLA\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.application_no}\n                          field=\"Application No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.date_of_ad}\n                          field=\"Date Of Admission\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return <GData data={item.quota} field=\"Quota\" />;\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.regular_lateral_rl}\n                          field=\"Regular / Lateral Entry\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dayschl_hosteller_dh}\n                          field=\"Day Scholar / Hosteller\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_name}\n                          field=\"Scholarship Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.scholarship_amount}\n                          field=\"Scholarship Amount\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.first_graduate_yn}\n                          field=\"First Graduate\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.eco_backward_yn}\n                          field=\"Economically Backward (Annual Income of Parents Less than 1LPA)\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical and Non-Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.programming_languages}\n                          field=\"Programming Languages\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData data={item.lang_know} field=\"Languages Known\" />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.software_proficiency}\n                          field=\"Software Proficieny\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.dept_rel_proficiency}\n                          field=\"Department Related Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.certifications}\n                          field=\"Certifications\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_skills}\n                          field=\"Other Technical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.aptitude_analytical_skills}\n                          field=\"Aptitude / Analytical Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.communication_skills}\n                          field=\"Communication Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.social_media_exposure}\n                          field=\"Social Media Exposure\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.leadership_skills}\n                          field=\"Leadership Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.other_interpersonal_skills}\n                          field=\"Other Interpersonal Skills\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals and Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.short_term_goal}\n                          field=\"Short Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.long_term_goal}\n                          field=\"Long Term Goals\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_name}\n                          field=\"Membership Name\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_no}\n                          field=\"Membership No.\"\n                        />\n                      );\n                    })}\n                  </Tr>\n\n                  <Tr>\n                    {data.map((item) => {\n                      return (\n                        <GData\n                          data={item.membership_duration}\n                          field=\"Membership Duration\"\n                        />\n                      );\n                    })}\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n      <SimpleGrid pt=\"1.5rem\" columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={newReload}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Edit\n            </Button>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={onOpen}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Delete\n            </Button>\n            <Modal\n              isOpen={isOpen}\n              onClose={() => {\n                onClose();\n              }}\n            >\n              <ModalContent>\n                <ModalHeader>Confirmation</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>Delete this student ?</ModalBody>\n                <ModalFooter>\n                  <Button\n                    colorScheme=\"blue\"\n                    mr={3}\n                    onClick={() => {\n                      onClose();\n                      fundelete();\n                      toast({\n                        title: \"Student Record Deleted Successfully\",\n                        status: \"success\",\n                        duration: 9000,\n                        position: \"top\",\n                        isClosable: true,\n                      });\n                    }}\n                  >\n                    Confirm\n                  </Button>\n                  <Button\n                    colorScheme=\"blue\"\n                    mr={3}\n                    onClick={() => {\n                      onClose();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationdata;\n","/** @format */\n\n//Class Advisor International Exposure Table Row\n\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useToast,\n  useDisclosure,\n  Popover,\n  PopoverBody,\n  PopoverArrow,\n  PopoverContent,\n  Portal,\n  PopoverTrigger,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction InternationalTableRow(props) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // Toast var\n  const toast = useToast();\n\n  function funedit() {\n    let cid = { id };\n    let cn = { row1 };\n    let cd = { row2 };\n    let cp = { row3 };\n    let co = { row4 };\n    let cpd = { row5 };\n    let cf = { row6 };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    if (document.getElementById(\"ECID\").value.length !== 0) {\n      params.append(\"campusname\", document.getElementById(\"ECID\").value);\n    } else {\n      params.append(\"campusname\", cn.row1);\n    }\n    if (document.getElementById(\"EDID\").value.length !== 0) {\n      params.append(\"dateyear\", document.getElementById(\"EDID\").value);\n    } else {\n      params.append(\"dateyear\", cd.row2);\n    }\n    if (document.getElementById(\"EPID\").value.length !== 0) {\n      params.append(\"project\", document.getElementById(\"EPID\").value);\n    } else {\n      params.append(\"project\", cp.row3);\n    }\n    if (document.getElementById(\"EOID\").value.length !== 0) {\n      params.append(\"outcome\", document.getElementById(\"EOID\").value);\n    } else {\n      params.append(\"outcome\", co.row4);\n    }\n    if (document.getElementById(\"EPDID\").value.length !== 0) {\n      params.append(\"personal\", document.getElementById(\"EPDID\").value);\n    } else {\n      params.append(\"personal\", cpd.row5);\n    }\n    if (document.getElementById(\"EFID\").value.length !== 0) {\n      params.append(\"foreign\", document.getElementById(\"EFID\").value);\n    } else {\n      params.append(\"foreign\", cf.row6);\n    }\n    params.append(\"credits\", document.getElementById(\"CRID\").value);\n    axios.post(server_URL + \"InternationalExposureEdit\", params);\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"InternationalExposureDelete\", params);\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"InternationalExposureVerify\", params);\n  }\n\n  const { id, row1, row2, row3, row4, row5, row6, row7, row8 } = props;\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"15em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row1}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"15em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"15em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"15em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"15em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"15em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row7}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row8}</Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Campus name</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"ECID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date and Year</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"EDID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Project</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"EPID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"EOID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Personal Development</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"EPDID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">\n                    Foreign Language Courses Completed or Pursuing\n                  </Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row6}\n                    id=\"EFID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row7}\n                    id=\"CRID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Popover>\n          <PopoverTrigger>\n            <Button bg=\"orange.300\" alignSelf=\"flex-end\" width=\"fit-content\">\n              Delete\n            </Button>\n          </PopoverTrigger>\n          <Portal>\n            <PopoverContent w=\"100%\">\n              <PopoverArrow />\n              <PopoverBody>\n                Are you sure ?\n                <Button\n                  ms={{ sm: \"3em\" }}\n                  colorScheme=\"red\"\n                  onClick={() => {\n                    toast({\n                      title: \"Deleted Successfully\",\n                      status: \"success\",\n                      duration: 9000,\n                      position: \"top\",\n                      isClosable: true,\n                    });\n                    fundelete();\n                    onClose();\n                  }}\n                >\n                  Delete\n                </Button>\n              </PopoverBody>\n            </PopoverContent>\n          </Portal>\n        </Popover>\n      </Td>\n      <Td>\n        <Popover>\n          <PopoverTrigger>\n            <Button\n              bg=\"orange.300\"\n              alignSelf=\"flex-end\"\n              width=\"fit-content\"\n              disabled={{ row8 }.row8 == \"Verified\" ? true : false}\n            >\n              Verify\n            </Button>\n          </PopoverTrigger>\n          <Portal>\n            <PopoverContent w=\"100%\">\n              <PopoverArrow />\n              <PopoverBody>\n                Are you sure ?\n                <Button\n                  ms={{ sm: \"3em\" }}\n                  colorScheme=\"green\"\n                  onClick={() => {\n                    toast({\n                      title: \"Verified Successfully\",\n                      status: \"success\",\n                      duration: 9000,\n                      position: \"top\",\n                      isClosable: true,\n                    });\n                    onClose();\n                    funverify();\n                  }}\n                >\n                  Verify\n                </Button>\n              </PopoverBody>\n            </PopoverContent>\n          </Portal>\n        </Popover>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default InternationalTableRow;\n","/** @format */\n\n//Class Advisor International Exposure Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport InternationalTableRow from \"components/Tables/InternationalTableRow/InternationalTableRow1\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction InternationalData() {\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"Internexroll\", localStorage.getItem(\"International\"));\n  useEffect(async () => {\n    axios.post(server_URL + \"InternationalExposure\", params).then((items) => {\n      setData(items.data);\n    });\n  });\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const Null_message = \"NULL\";\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Summer Program\n            </Text>\n          </CardHeader>\n          <CardBody overflowX={{ sm: \"scroll\" }}>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Campus</Th>\n                  <Th color=\"gray.400\">Date and Year</Th>\n                  <Th color=\"gray.400\">Project</Th>\n                  <Th color=\"gray.400\">Outcome</Th>\n                  <Th color=\"gray.400\">Personal Development</Th>\n                  <Th color=\"gray.400\">\n                    Foreign Language Courses Completed or Pursuing\n                  </Th>\n                  <Th color=\"gray.400\">Credits</Th>\n                  <Th color=\"gray.400\">Verify Status</Th>\n                  <Th color=\"gray.400\">Edit</Th>\n                  <Th color=\"gray.400\">Delete</Th>\n                  <Th color=\"gray.400\">Verify</Th>\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {data.map((item) => {\n                  return (\n                    <InternationalTableRow\n                      id={item.s_no || Null_message}\n                      row1={item.foreign_campus || Null_message}\n                      row2={item.duration || Null_message}\n                      row3={item.project || Null_message}\n                      row4={item.outcome || Null_message}\n                      row5={item.personal_development || Null_message}\n                      row6={item.foreign_language_courses || Null_message}\n                      row7={item.credits || Null_message}\n                      row8={item.verify || Null_message}\n                    />\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default InternationalData;\n","//HOD International Exposure Table Row\n\nimport {\n  FormControl,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction InternationalTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6, row7, row8 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth=\"14em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text\n              fontSize=\"md\"\n              color={textColor}\n              fontWeight=\"bold\"\n              minWidth=\"100%\"\n            >\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row3}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row4}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row5}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row6}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"6em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row7}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n      <Td minWidth=\"9em\">\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <FormControl>\n            <Flex direction=\"column\">{row8}</Flex>\n          </FormControl>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default InternationalTableRow;\n","/** @format */\n\n//HOD International Exposure Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport InternationalTableRow from \"components/Tables/InternationalTableRow/InternationalTableRow2\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction InternationalData() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const [data, setData] = useState([]);\n\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"Internexroll\", localStorage.getItem(\"International\"));\n  useEffect(async () => {\n    axios.post(server_URL + \"InternationalExposure\", params).then((items) => {\n      setData(items.data);\n    });\n  });\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Summer Program Details\n            </Text>\n          </CardHeader>\n          <CardBody overflowX={{ sm: \"scroll\" }}>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Campus</Th>\n                  <Th color=\"gray.400\">Date and Year</Th>\n                  <Th color=\"gray.400\">Project</Th>\n                  <Th color=\"gray.400\">Outcome</Th>\n                  <Th color=\"gray.400\">Personal Development</Th>\n                  <Th color=\"gray.400\">\n                    Foreign Language Courses Completed or Pursuing\n                  </Th>\n                  <Th color=\"gray.400\">Credits</Th>\n                  <Th color=\"gray.400\">Verify Status</Th>\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {data.map((item) => {\n                  return (\n                    <InternationalTableRow\n                      id={item.s_no || Null_message}\n                      row1={item.foreign_campus || Null_message}\n                      row2={item.duration || Null_message}\n                      row3={item.project || Null_message}\n                      row4={item.outcome || Null_message}\n                      row5={item.personal_development || Null_message}\n                      row6={item.foreign_language_courses || Null_message}\n                      row7={item.credits || Null_message}\n                      row8={item.verify || Null_message}\n                    />\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default InternationalData;\n","/** @format */\n\n//Official International Exposure Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport InternationalTableRow from \"components/Tables/InternationalTableRow/InternationalTableRow2\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction InternationalData() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const [data, setData] = useState([]);\n\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"Internexroll\", localStorage.getItem(\"International\"));\n  useEffect(async () => {\n    axios.post(server_URL + \"InternationalExposure\", params).then((items) => {\n      setData(items.data);\n    });\n  });\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Summer Program Details\n            </Text>\n          </CardHeader>\n          <CardBody overflowX={{ sm: \"scroll\" }}>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Campus</Th>\n                  <Th color=\"gray.400\">Date and Year</Th>\n                  <Th color=\"gray.400\">Project</Th>\n                  <Th color=\"gray.400\">Outcome</Th>\n                  <Th color=\"gray.400\">Personal Development</Th>\n                  <Th color=\"gray.400\">\n                    Foreign Language Courses Completed or Pursuing\n                  </Th>\n                  <Th color=\"gray.400\">Credits</Th>\n                  <Th color=\"gray.400\">Verify Status</Th>\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {data.map((item) => {\n                  return (\n                    <InternationalTableRow\n                      id={item.s_no || Null_message}\n                      row1={item.foreign_campus || Null_message}\n                      row2={item.duration || Null_message}\n                      row3={item.project || Null_message}\n                      row4={item.outcome || Null_message}\n                      row5={item.personal_development || Null_message}\n                      row6={item.foreign_language_courses || Null_message}\n                      row7={item.credits || Null_message}\n                      row8={item.verify || Null_message}\n                    />\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default InternationalData;\n","/** @format */\n\n//Class Advisor International Exposure Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport InternationalTableRow from \"components/Tables/InternationalTableRow/InternationalTableRow1\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction InternationalData() {\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"Internexroll\", localStorage.getItem(\"International\"));\n  useEffect(async () => {\n    axios.post(server_URL + \"InternationalExposure\", params).then((items) => {\n      setData(items.data);\n    });\n  });\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const Null_message = \"NULL\";\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Summer Program\n            </Text>\n          </CardHeader>\n          <CardBody overflowX={{ sm: \"scroll\" }}>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Campus</Th>\n                  <Th color=\"gray.400\">Date and Year</Th>\n                  <Th color=\"gray.400\">Project</Th>\n                  <Th color=\"gray.400\">Outcome</Th>\n                  <Th color=\"gray.400\">Personal Development</Th>\n                  <Th color=\"gray.400\">\n                    Foreign Language Courses Completed or Pursuing\n                  </Th>\n                  <Th color=\"gray.400\">Credits</Th>\n                  <Th color=\"gray.400\">Verify Status</Th>\n                  <Th color=\"gray.400\">Edit</Th>\n                  <Th color=\"gray.400\">Delete</Th>\n                  <Th color=\"gray.400\">Verify</Th>\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {data.map((item) => {\n                  return (\n                    <InternationalTableRow\n                      id={item.s_no || Null_message}\n                      row1={item.foreign_campus || Null_message}\n                      row2={item.duration || Null_message}\n                      row3={item.project || Null_message}\n                      row4={item.outcome || Null_message}\n                      row5={item.personal_development || Null_message}\n                      row6={item.foreign_language_courses || Null_message}\n                      row7={item.credits || Null_message}\n                      row8={item.verify || Null_message}\n                    />\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default InternationalData;\n","/** @format */\n\n//Class Advisor ExtraCurricular Club TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"clubname\", document.getElementById(\"ECID\").value);\n    params.append(\"activity\", document.getElementById(\"EDID\").value);\n    params.append(\"date\", document.getElementById(\"EPID\").value);\n    params.append(\"outcome\", document.getElementById(\"EOID\").value);\n    params.append(\"credits\", document.getElementById(\"EPDID\").value);\n    axios.post(server_URL + \"ExtraClubEdit\", params).then((results) => {\n      if (!results) {\n        console.log(\"error\");\n      } else {\n        localStorage.setItem(\"proceed\", \"success\");\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"ExtraClubDelete\", params);\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"ExtraClubVerify\", params);\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the club</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"ECID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Activity</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"EDID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date & Year</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"EPID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"EOID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"EPDID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","/** @format */\n\n//Class Advisor ExtraCurricular Outreach TableRow\n\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"outreachname\", document.getElementById(\"ECID\").value);\n    params.append(\"date\", document.getElementById(\"EPID\").value);\n    params.append(\"outcome\", document.getElementById(\"EOID\").value);\n    params.append(\"credits\", document.getElementById(\"EPDID\").value);\n    axios.post(server_URL + \"OutreachEdit\", params);\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"OutreachDelete\", params);\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"OutreachVerify\", params);\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Activity</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"ECID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date & Year</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"EPID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"EOID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"EPDID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","/** @format */\n\n//Class Advisor ExtraCurricular Sports TableRow\n\nimport {\n  Flex,\n  Td,\n  Text,\n  Input,\n  Tr,\n  useColorModeValue,\n  Button,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  useToast,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"sportname\", document.getElementById(\"SNID\").value);\n    params.append(\"representation\", document.getElementById(\"SRID\").value);\n    params.append(\"position\", document.getElementById(\"SPID\").value);\n    params.append(\"date\", document.getElementById(\"SDID\").value);\n    params.append(\"credits\", document.getElementById(\"SCID\").value);\n    axios.post(server_URL + \"SportEdit\", params);\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"SportDelete\", params);\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"SportVerify\", params);\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the sport</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"SNID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Representation</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"SRID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Position Secured</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"SPID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date & Year</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"SDID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"SCID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","/** @format */\n\n//Class Advisor ExtraCurricular Culturals TableRow\n\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"culturalname\", document.getElementById(\"CNID\").value);\n    params.append(\"date\", document.getElementById(\"CDID\").value);\n    params.append(\"position\", document.getElementById(\"CPID\").value);\n    params.append(\"credits\", document.getElementById(\"CCID\").value);\n    axios.post(server_URL + \"CulturalEdit\", params);\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"CulturalDelete\", params);\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"CulturalVerify\", params);\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the Event</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"CNID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date & Year</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"CDID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Position Secured</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"CPID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"CCID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","/** @format */\n\n//Class Advisor ExtraCurricularData\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Button,\n  Collapse,\n  Hide,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport ExtraCurricualarTableRow1 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularClubTableRow1\";\nimport ExtraCurricualarTableRow2 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularOutreachTableRow1\";\nimport ExtraCurricualarTableRow3 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularSportsTableRow1\";\nimport ExtraCurricualarTableRow4 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularCulturalsTableRow1\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularData() {\n  var [drop1, setDrop1] = useState(false);\n  var [drop2, setDrop2] = useState(false);\n  var [drop3, setDrop3] = useState(false);\n  var [drop4, setDrop4] = useState(false);\n\n  const [data, setdata] = useState([[], [], [], []]);\n\n  const Null_message = \"NULL\";\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  localStorage.setItem(\"firsttime\", \"yes\");\n\n  axios.post(server_URL + \"temp\", params).then((items) => {\n    setdata(items.data);\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true), setDrop2(true), setDrop3(true), setDrop4(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Clubs\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Club</Th>\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[0] != undefined ? (\n                    data[0].map((items) => {\n                      return (\n                        <ExtraCurricualarTableRow1\n                          id={items.s_no || Null_message}\n                          row1={items.club_name || Null_message}\n                          row2={items.activity_name || Null_message}\n                          row3={items.date || Null_message}\n                          row4={items.outcome || Null_message}\n                          row5={items.credits || Null_message}\n                          row6={items.verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow3 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Outreach Activity\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[1] != undefined ? (\n                    data[1].map((item) => {\n                      return (\n                        <ExtraCurricualarTableRow2\n                          id={item.s_no || Null_message}\n                          row1={item.outreach_activity_name || Null_message}\n                          row2={item.outreach_date || Null_message}\n                          row3={item.outreach_outcome || Null_message}\n                          row4={item.credits || Null_message}\n                          row5={item.outreach_verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow3 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Sports Achievements\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop3}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Sport</Th>\n                    <Th color=\"gray.400\">Representation</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[2] != undefined ? (\n                    data[2].map((row) => {\n                      return (\n                        <ExtraCurricualarTableRow3\n                          id={row.s_no || Null_message}\n                          row1={row.sport_name || Null_message}\n                          row2={row.representation || Null_message}\n                          row3={row.position_secures || Null_message}\n                          row4={row.date || Null_message}\n                          row5={row.credits || Null_message}\n                          row6={row.verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow3 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Culturals\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Event</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[3] != undefined ? (\n                    data[3].map((row) => {\n                      return (\n                        <ExtraCurricualarTableRow4\n                          id={row.s_no || Null_message}\n                          row1={row.event_name || Null_message}\n                          row2={row.date || Null_message}\n                          row3={row.position_secures || Null_message}\n                          row4={row.credits || Null_message}\n                          row5={row.verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow4 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ExtraCurricularData;\n","//HoD ExtraCurricular Club TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","//HoD ExtraCurricular Outreach TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","//HoD ExtraCurricular Sports TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","//HoD ExtraCurricular Culturals TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","/** @format */\n\n//HoD ExtraCurricularData\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Button,\n  Collapse,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport ExtraCurricualarTableRow1 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularClubTableRow2\";\nimport ExtraCurricualarTableRow2 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularOutreachTableRow2\";\nimport ExtraCurricualarTableRow3 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularSportsTableRow2\";\nimport ExtraCurricualarTableRow4 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow2/ExtraCurricularCulturalsTableRow2\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularData() {\n  var [drop1, setDrop1] = useState(false);\n  var [drop2, setDrop2] = useState(false);\n  var [drop3, setDrop3] = useState(false);\n  var [drop4, setDrop4] = useState(false);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const Null_message = \"NULL\";\n\n  const [Cdata, setCdata] = useState([]);\n  const [Odata, setOdata] = useState([]);\n  const [Sdata, setSdata] = useState([]);\n  const [CUdata, setCudata] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  params.append(\"StudentDetails\", localStorage.getItem(\"generalStudent\"));\n\n  useEffect(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"ExtraClubCADisplay\", params),\n        axios.post(server_URL + \"ExtraOutreachCADisplay\", params),\n        axios.post(server_URL + \"ExtraSportsStudentDisplay\", params),\n        axios.post(server_URL + \"ExtraCulturalStudentDisplay\", params),\n      ])\n      .then(\n        axios.spread((data1, data2, data3, data4) => {\n          setCdata(data1.data);\n          setOdata(data2.data);\n          setSdata(data3.data);\n          setCudata(data4.data);\n        })\n      );\n  }, []);\n  console.log(Cdata);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true), setDrop2(true), setDrop3(true), setDrop4(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Clubs\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Club</Th>\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Cdata.map((item) => {\n                    return (\n                      <ExtraCurricualarTableRow1\n                        id={item.s_no || Null_message}\n                        row1={item.club_name || Null_message}\n                        row2={item.activity_name || Null_message}\n                        row3={item.date || Null_message}\n                        row4={item.outcome || Null_message}\n                        row5={item.credits || Null_message}\n                        row6={item.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Outreach Activity\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Odata.map((item) => {\n                    return (\n                      <ExtraCurricualarTableRow2\n                        id={item.s_no || Null_message}\n                        row1={item.outreach_activity_name || Null_message}\n                        row2={item.outreach_date || Null_message}\n                        row3={item.outreach_outcome || Null_message}\n                        row4={item.credits || Null_message}\n                        row5={item.outreach_verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Sports Achievements\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Sport</Th>\n                    <Th color=\"gray.400\">Representation</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Sdata.map((row) => {\n                    return (\n                      <ExtraCurricualarTableRow3\n                        row1={row.sport_name || Null_message}\n                        row2={row.representation || Null_message}\n                        row3={row.position_secures || Null_message}\n                        row4={row.date || Null_message}\n                        row5={row.credits || Null_message}\n                        row6={row.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Culturals\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Event</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {CUdata.map((row) => {\n                    return (\n                      <ExtraCurricualarTableRow4\n                        row1={row.event_name || Null_message}\n                        row2={row.date || Null_message}\n                        row3={row.position_secures || Null_message}\n                        row4={row.credits || Null_message}\n                        row5={row.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ExtraCurricularData;\n","//Official ExtraCurricular Club TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","//Official ExtraCurricular Outreach TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","//Official ExtraCurricular Sports TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","//Official ExtraCurricular Culturals TableRow\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction ExtraCurricularTableRow(props) {\n  const { row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"9em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ExtraCurricularTableRow;\n","/** @format */\n\n//Official ExtraCurricularData\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Collapse,\n  Button,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport ExtraCurricualarTableRow1 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularClubTableRow3\";\nimport ExtraCurricualarTableRow2 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularOutreachTableRow3\";\nimport ExtraCurricualarTableRow3 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularSportsTableRow3\";\nimport ExtraCurricualarTableRow4 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow3/ExtraCurricularCulturalsTableRow3\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularData() {\n  var [drop1, setDrop1] = useState(false);\n  var [drop2, setDrop2] = useState(false);\n  var [drop3, setDrop3] = useState(false);\n  var [drop4, setDrop4] = useState(false);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const Null_message = \"NULL\";\n\n  const [Cdata, setCdata] = useState([]);\n  const [Odata, setOdata] = useState([]);\n  const [Sdata, setSdata] = useState([]);\n  const [CUdata, setCudata] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  params.append(\"StudentDetails\", localStorage.getItem(\"generalStudent\"));\n  useEffect(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"ExtraClubCADisplay\", params),\n        axios.post(server_URL + \"ExtraOutreachCADisplay\", params),\n        axios.post(server_URL + \"ExtraSportsStudentDisplay\", params),\n        axios.post(server_URL + \"ExtraCulturalStudentDisplay\", params),\n      ])\n      .then(\n        axios.spread((data1, data2, data3, data4) => {\n          setCdata(data1.data);\n          setOdata(data2.data);\n          setSdata(data3.data);\n          setCudata(data4.data);\n        })\n      );\n  }, []);\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true), setDrop2(true), setDrop3(true), setDrop4(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Clubs\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Club</Th>\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Cdata.map((item) => {\n                    return (\n                      <ExtraCurricualarTableRow1\n                        id={item.s_no || Null_message}\n                        row1={item.club_name || Null_message}\n                        row2={item.activity_name || Null_message}\n                        row3={item.date || Null_message}\n                        row4={item.outcome || Null_message}\n                        row5={item.credits || Null_message}\n                        row6={item.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Outreach Activity\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Odata.map((item) => {\n                    return (\n                      <ExtraCurricualarTableRow2\n                        id={item.s_no || Null_message}\n                        row1={item.outreach_activity_name || Null_message}\n                        row2={item.outreach_date || Null_message}\n                        row3={item.outreach_outcome || Null_message}\n                        row4={item.credits || Null_message}\n                        row5={item.outreach_verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Sports Achievements\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Sport</Th>\n                    <Th color=\"gray.400\">Representation</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {Sdata.map((row) => {\n                    return (\n                      <ExtraCurricualarTableRow3\n                        row1={row.sport_name || Null_message}\n                        row2={row.representation || Null_message}\n                        row3={row.position_secures || Null_message}\n                        row4={row.date || Null_message}\n                        row5={row.credits || Null_message}\n                        row6={row.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Culturals\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Event</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {CUdata.map((row) => {\n                    return (\n                      <ExtraCurricualarTableRow4\n                        row1={row.event_name || Null_message}\n                        row2={row.date || Null_message}\n                        row3={row.position_secures || Null_message}\n                        row4={row.credits || Null_message}\n                        row5={row.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ExtraCurricularData;\n","/** @format */\n\n//Class Advisor ExtraCurricularData\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Button,\n  Collapse,\n  Hide,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport ExtraCurricualarTableRow1 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularClubTableRow1\";\nimport ExtraCurricualarTableRow2 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularOutreachTableRow1\";\nimport ExtraCurricualarTableRow3 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularSportsTableRow1\";\nimport ExtraCurricualarTableRow4 from \"components/Tables/ExtraCurricularTableRow/ExtraCurricularTableRow1/ExtraCurricularCulturalsTableRow1\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ExtraCurricularData() {\n  var [drop1, setDrop1] = useState(false);\n  var [drop2, setDrop2] = useState(false);\n  var [drop3, setDrop3] = useState(false);\n  var [drop4, setDrop4] = useState(false);\n\n  const [data, setdata] = useState([[], [], [], []]);\n\n  const Null_message = \"NULL\";\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  localStorage.setItem(\"firsttime\", \"yes\");\n\n  axios.post(server_URL + \"temp\", params).then((items) => {\n    setdata(items.data);\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true), setDrop2(true), setDrop3(true), setDrop4(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Clubs\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Club</Th>\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[0] != undefined ? (\n                    data[0].map((items) => {\n                      return (\n                        <ExtraCurricualarTableRow1\n                          id={items.s_no || Null_message}\n                          row1={items.club_name || Null_message}\n                          row2={items.activity_name || Null_message}\n                          row3={items.date || Null_message}\n                          row4={items.outcome || Null_message}\n                          row5={items.credits || Null_message}\n                          row6={items.verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow3 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Outreach Activity\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Activity</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[1] != undefined ? (\n                    data[1].map((item) => {\n                      return (\n                        <ExtraCurricualarTableRow2\n                          id={item.s_no || Null_message}\n                          row1={item.outreach_activity_name || Null_message}\n                          row2={item.outreach_date || Null_message}\n                          row3={item.outreach_outcome || Null_message}\n                          row4={item.credits || Null_message}\n                          row5={item.outreach_verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow3 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Sports Achievements\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop3}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Sport</Th>\n                    <Th color=\"gray.400\">Representation</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Date & Year</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[2] != undefined ? (\n                    data[2].map((row) => {\n                      return (\n                        <ExtraCurricualarTableRow3\n                          id={row.s_no || Null_message}\n                          row1={row.sport_name || Null_message}\n                          row2={row.representation || Null_message}\n                          row3={row.position_secures || Null_message}\n                          row4={row.date || Null_message}\n                          row5={row.credits || Null_message}\n                          row6={row.verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow3 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Culturals\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name Of The Event</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {data[3] != undefined ? (\n                    data[3].map((row) => {\n                      return (\n                        <ExtraCurricualarTableRow4\n                          id={row.s_no || Null_message}\n                          row1={row.event_name || Null_message}\n                          row2={row.date || Null_message}\n                          row3={row.position_secures || Null_message}\n                          row4={row.credits || Null_message}\n                          row5={row.verified || Null_message}\n                        />\n                      );\n                    })\n                  ) : (\n                    <ExtraCurricualarTableRow4 />\n                  )}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ExtraCurricularData;\n","/** @format */\n\n//Class Advisor AcademicData\n\nimport React, { useState, useEffect } from \"react\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Stat,\n  StatLabel,\n  Button,\n  SimpleGrid,\n  Td,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport axios from \"axios\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Academicdata() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  const [data, setdata] = useState([]);\n  const [Adata, setAdata] = useState([]);\n  const [Sdata, setSdata] = useState([]);\n\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"getColumnName\", params),\n        axios.post(server_URL + \"AcademicsData\", params),\n        axios.post(server_URL + \"academic_summary\", params),\n      ])\n      .then(\n        axios.spread((data1, data2, data3) => {\n          let filtered_data = data1.data.filter(\n            (header) =>\n              header.COLUMN_NAME != \"id\" && header.COLUMN_NAME != \"roll_no\"\n          );\n\n          console.log(\"JJ\");\n          console.log(filtered_data);\n\n          console.log(data2);\n          let student_data = [];\n          for (var i = 0; i < data2.data.length; i++) {\n            let student = Object.values(data2.data[i]);\n            student.splice(0, 2);\n            student_data.push(student);\n          }\n          setdata(filtered_data);\n          setAdata(student_data);\n          setSdata(data3.data);\n        })\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internal Exam Results\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  {data.map((items) => {\n                    return <Th color=\"gray.400\">{items.COLUMN_NAME}</Th>;\n                  })}\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {Adata.map((items) => {\n                  return (\n                    <Tr>\n                      {items.map((item) => {\n                        return <Td>{item}</Td>;\n                      })}\n                    </Tr>\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default Academicdata;\n","/** @format */\n\n//HoD AcademicData\n\nimport React, { useState, useEffect } from \"react\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Td,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport axios from \"axios\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Academicdata() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  const [data, setdata] = useState([]);\n  const [Adata, setAdata] = useState([]);\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"getColumnName\", params),\n        axios.post(server_URL + \"AcademicsData\", params),\n      ])\n      .then(\n        axios.spread((data1, data2) => {\n          let filtered_data = data1.data.filter(\n            (header) =>\n              header.COLUMN_NAME != \"id\" && header.COLUMN_NAME != \"roll_no\"\n          );\n          console.log(data2);\n\n          let student_data = [];\n          for (var i = 0; i < data2.data.length; i++) {\n            let student = Object.values(data2.data[i]);\n            student.splice(0, 2);\n            student_data.push(student);\n          }\n          setdata(filtered_data);\n          setAdata(student_data);\n        })\n      );\n  }, []);\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internal Exam Results\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  {data.map((items) => {\n                    return <Th color=\"gray.400\">{items.COLUMN_NAME}</Th>;\n                  })}\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {Adata.map((items) => {\n                  return (\n                    <Tr>\n                      {items.map((item) => {\n                        return <Td>{item}</Td>;\n                      })}\n                    </Tr>\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default Academicdata;\n","/** @format */\n\n//Official AcademicData\n\nimport React, { useState, useEffect } from \"react\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Stat,\n  StatLabel,\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Select,\n  SimpleGrid,\n  Td,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport Academictablerow from \"components/Tables/AcademicTableRow/Academictablerow3\";\nimport Academicsummarytablerow from \"components/Tables/AcademicTableRow/AcademicSummaryTableRow/Academicsummarytablerow3\";\n\nimport { AcademicSummary } from \"variables/general\";\nimport { Academicinfo } from \"variables/general\";\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Academicdata() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  const [data, setdata] = useState([]);\n  const [Adata, setAdata] = useState([]);\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"getColumnName\", params),\n        axios.post(server_URL + \"AcademicsData\", params),\n      ])\n      .then(\n        axios.spread((data1, data2) => {\n          let filtered_data = data1.data.filter(\n            (header) =>\n              header.COLUMN_NAME != \"id\" && header.COLUMN_NAME != \"roll_no\"\n          );\n\n          console.log(data2);\n          let student_data = [];\n          for (var i = 0; i < data2.data.length; i++) {\n            let student = Object.values(data2.data[i]);\n            student.splice(0, 2);\n            student_data.push(student);\n          }\n          setdata(filtered_data);\n          setAdata(student_data);\n        })\n      );\n  }, []);\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internal Exam Results\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  {data.map((items) => {\n                    return <Th color=\"gray.400\">{items.COLUMN_NAME}</Th>;\n                  })}\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {Adata.map((items) => {\n                  return (\n                    <Tr>\n                      {items.map((item) => {\n                        return <Td>{item}</Td>;\n                      })}\n                    </Tr>\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default Academicdata;\n","/** @format */\n\n//Class Advisor AcademicData\n\nimport React, { useState, useEffect } from \"react\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  Stat,\n  StatLabel,\n  Button,\n  SimpleGrid,\n  Td,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport axios from \"axios\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Academicdata() {\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  let params = new URLSearchParams();\n  const [data, setdata] = useState([]);\n  const [Adata, setAdata] = useState([]);\n  const [Sdata, setSdata] = useState([]);\n\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"getColumnName\", params),\n        axios.post(server_URL + \"AcademicsData\", params),\n        axios.post(server_URL + \"academic_summary\", params),\n      ])\n      .then(\n        axios.spread((data1, data2, data3) => {\n          let filtered_data = data1.data.filter(\n            (header) =>\n              header.COLUMN_NAME != \"id\" && header.COLUMN_NAME != \"roll_no\"\n          );\n\n          console.log(\"JJ\");\n          console.log(filtered_data);\n\n          console.log(data2);\n          let student_data = [];\n          for (var i = 0; i < data2.data.length; i++) {\n            let student = Object.values(data2.data[i]);\n            student.splice(0, 2);\n            student_data.push(student);\n          }\n          setdata(filtered_data);\n          setAdata(student_data);\n          setSdata(data3.data);\n        })\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internal Exam Results\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  {data.map((items) => {\n                    return <Th color=\"gray.400\">{items.COLUMN_NAME}</Th>;\n                  })}\n                </Tr>\n              </Thead>\n\n              <Tbody>\n                {Adata.map((items) => {\n                  return (\n                    <Tr>\n                      {items.map((item) => {\n                        return <Td>{item}</Td>;\n                      })}\n                    </Tr>\n                  );\n                })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default Academicdata;\n","/** @format */\n\n//Class Advisor PF Industrial Visit TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"industry_name\", document.getElementById(\"IndustryID\").value);\n    params.append(\"date\", document.getElementById(\"Date_and_year\").value);\n    params.append(\"outcome\", document.getElementById(\"OutcomeID\").value);\n    params.append(\"credits\", document.getElementById(\"credits\").value);\n    axios.post(server_URL + \"Industrialv_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"Industrialv_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"Industrialv_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the Industry</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"IndustryID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date & Year</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"Date_and_year\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"OutcomeID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"credits\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PF Inplant Training TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"industry\", document.getElementById(\"IndustryID\").value);\n    params.append(\"date\", document.getElementById(\"Date_and_year\").value);\n    params.append(\"outcome\", document.getElementById(\"OutcomeID\").value);\n    params.append(\"credits\", document.getElementById(\"credits\").value);\n    axios.post(server_URL + \"Inplant_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"Inplant_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"Inplant_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the Industry</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"IndustryID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"Date_and_year\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"OutcomeID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"credits\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PD Courses TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams(); \n    params.append(\"columnid\", cid.id);\n    params.append(\"topic\", document.getElementById(\"TopicID\").value);\n    params.append(\"resource_person\", document.getElementById(\"RsprID\").value);\n    params.append(\"outcome\", document.getElementById(\"OutcomeID\").value);\n    params.append(\"credits\", document.getElementById(\"CreditsID\").value);\n    axios.post(server_URL + \"guest_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"guest_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"guest_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Topic of the Lecture</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"TopicID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Resource Person</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"RsprID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"OutcomeID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"CreditsID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PF Motivational Talk TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"topic\", document.getElementById(\"TOPIC\").value);\n    params.append(\"date\", document.getElementById(\"date\").value);\n    params.append(\"resource_person\", document.getElementById(\"RESPER\").value);\n    params.append(\"outcome\", document.getElementById(\"OutcomeID3\").value);\n    params.append(\"credits\", document.getElementById(\"CRED3\").value);\n    axios.post(server_URL + \"Motivational_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"Motivational_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"Motivational_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Topic</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"TOPIC\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"date\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Resource Person</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"RESPER\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"OutcomeID3\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"CRED3\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false} \n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PF Internship TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"company_name\", document.getElementById(\"COMP\").value);\n    params.append(\"duration\", document.getElementById(\"DUR\").value);\n    params.append(\"date\", document.getElementById(\"DATE\").value);\n    params.append(\"reference\", document.getElementById(\"REF\").value);\n    params.append(\"credits\", document.getElementById(\"CRED\").value);\n    axios.post(server_URL + \"intern_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"intern_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"intern_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the Company</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"COMP\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"DATE\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Duration</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"DUR\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Reference</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"REF\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"CRED\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false} \n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PD Courses TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"course_name\", document.getElementById(\"CourseID\").value);\n    params.append(\"date\", document.getElementById(\"DateID\").value);\n    params.append(\"outcome\", document.getElementById(\"OutcomeID\").value);\n    params.append(\"credits\", document.getElementById(\"CreditsID\").value);\n    axios.post(server_URL + \"cour_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"cour_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"cour_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the Course</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"CourseID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"DateID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"OutcomeID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"CreditsID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PD Competitions TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"topic\", document.getElementById(\"TopicID\").value);\n    params.append(\"resource_person\", document.getElementById(\"RsprID\").value);\n    params.append(\"date\", document.getElementById(\"dateID\").value);\n    params.append(\"outcome\", document.getElementById(\"outID\").value);\n    params.append(\"credits\", document.getElementById(\"creditsID\").value);\n    axios.post(server_URL + \"workshop_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"workshop_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"workshop_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Topic of the Webinar</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"TopicID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"dateID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Resource Person</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"RsprID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"outID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"creditsID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false} \n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PD Competitions TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"topic\", document.getElementById(\"TopicID\").value);\n    params.append(\"resource_person\", document.getElementById(\"RsprID\").value);\n    params.append(\"date\", document.getElementById(\"dateID\").value);\n    params.append(\"outcome\", document.getElementById(\"outID\").value);\n    params.append(\"credits\", document.getElementById(\"creditsID\").value);\n    axios.post(server_URL + \"webinar_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"webinar_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"webinar_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Topic of the Webinar</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"TopicID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"dateID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Resource Person</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"RsprID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"outID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"creditsID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false} \n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PD Competitions TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"comp_name\", document.getElementById(\"nameID\").value);\n    params.append(\"comp_type\", document.getElementById(\"compID\").value);\n    params.append(\"date\", document.getElementById(\"dateID\").value);\n    params.append(\"position_secured\", document.getElementById(\"psID\").value);\n    params.append(\"credits\", document.getElementById(\"creditsID\").value);\n    axios.post(server_URL + \"comp_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"comp_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"comp_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name of the Competition</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"nameID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Competition Type</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"compID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Date</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"dateID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Position Secured</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"psID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"creditsID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row6 }.row6 == \"Verified\" ? true : false} \n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor  Placement TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"aptitude\", document.getElementById(\"APT\").value);\n    params.append(\"soft_skills\", document.getElementById(\"SOFTSKILL\").value);\n    params.append(\"reasoning\", document.getElementById(\"REASON\").value);\n    params.append(\"technical_training\", document.getElementById(\"TECHT\").value);\n    params.append(\"credits\", document.getElementById(\"CRED4\").value);\n    axios.post(server_URL + \"placement_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"placement_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"placement_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Aptitude</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"APT\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Soft Skills</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"SOFTSKILL\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Reasoning</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"REASON\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Technical Skill</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"TECHT\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row5}\n                    id=\"CRED4\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button> \n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PF Industrial Visit TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"project_title\", document.getElementById(\"PROJTITLE\").value);\n    params.append(\"objective\", document.getElementById(\"OBJ\").value);\n    params.append(\"outcome\", document.getElementById(\"OUTCOME\").value);\n    params.append(\"credits\", document.getElementById(\"CRED2\").value);\n    axios.post(server_URL + \"Miniproj_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"Miniproj_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"Miniproj_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Project Title</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"PROJTITLE\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Objective</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"OBJ\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"OUTCOME\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"CRED2\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PD Courses TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"title\", document.getElementById(\"TitleID\").value);\n    params.append(\"objective\", document.getElementById(\"ObjID\").value);\n    params.append(\"outcome\", document.getElementById(\"OutcomeID\").value);\n    params.append(\"credits\", document.getElementById(\"CreditsID\").value);\n    axios.post(server_URL + \"finpro_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"finpro_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"finpro_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });;\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Project Title</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"TitleID\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Objective</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"ObjID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Outcome</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"OutcomeID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"CreditsID\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row5 }.row5 == \"Verified\" ? true : false}\n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor PF Publications TableRow\nimport {\n  Button,\n  Flex,\n  Input,\n  Td,\n  Text,\n  Tr,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useColorModeValue,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentTableRow(props) {\n  // Toast var\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { id, row1, row2, row3, row4, row5, row6, row7 } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  function funedit() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"conf_or_journal\", document.getElementById(\"CONJOU\").value);\n    params.append(\"name\", document.getElementById(\"NAME\").value);\n    params.append(\"title\", document.getElementById(\"TITLE\").value);\n    params.append(\"impact_factor\", document.getElementById(\"IMPFACT\").value);\n    params.append(\"indexed_in\", document.getElementById(\"INDIN\").value);\n    params.append(\"credits\", document.getElementById(\"CRED5\").value);\n    axios.post(server_URL + \"publication_edit\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function fundelete() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    axios.post(server_URL + \"publication_delete\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  function funverify() {\n    let cid = { id };\n    let params = new URLSearchParams();\n    params.append(\"columnid\", cid.id);\n    params.append(\"verify\", \"Verified\");\n    axios.post(server_URL + \"publication_verify\", params).then((results)=>{\n      if(results){\n        window.location.reload(false);\n      }\n    });\n  }\n\n  return (\n    <Tr>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">\n            <Text fontSize=\"md\" color={textColor} minWidth=\"100%\">\n              {row1}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row2}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row3}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row4}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row5}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"10em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row6}</Flex>\n        </Flex>\n      </Td>\n      <Td minWidth={{ sm: \"5em\" }}>\n        <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n          <Flex direction=\"column\">{row7}</Flex>\n        </Flex>\n      </Td>\n\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Edit Details</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Conference or Journal</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row1}\n                    id=\"CONJOU\"\n                  />\n                </Td>\n              </Tr>\n\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Name</Text>\n                </Td>\n\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row2}\n                    id=\"NAME\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Title</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row3}\n                    id=\"TITLE\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Impact Factor</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"IMPFACT\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Indexed In</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"INDIN\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Credits</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={row4}\n                    id=\"CRED5\"\n                  />\n                </Td>\n              </Tr>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  toast({\n                    title: \"Edited Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  });\n                  funedit();\n                  onClose();\n                }}\n              >\n                Submit\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </Td>\n      <Td>\n        <Button\n          onClick={fundelete}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n      <Td>\n        <Button\n          onClick={funverify}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n          disabled={{ row7 }.row7 == \"Verified\" ? true : false} \n        >\n          Verify\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default ProfessionalDevelopmentTableRow;\n","/** @format */\n\n//Class Advisor ProfessionalDevelopment Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Button,\n  Collapse,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport ProfessionalDevelopmentTableRow1 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDIndustrialVisitTR1\";\nimport ProfessionalDevelopmentTableRow2 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDInplantTrainingTR1\";\nimport ProfessionalDevelopmentTableRow3 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDGuestlectureTR1\";\nimport ProfessionalDevelopmentTableRow4 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDMotivationalTalkTR1\";\nimport ProfessionalDevelopmentTableRow5 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDInternshipTR1\";\nimport ProfessionalDevelopmentTableRow6 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDCoursesTR1\";\nimport ProfessionalDevelopmentTableRow7 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDWorkshopTR1\";\nimport ProfessionalDevelopmentTableRow8 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDWebinarTR1\";\nimport ProfessionalDevelopmentTableRow9 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDCompetitionsTR1\";\nimport ProfessionalDevelopmentTableRow10 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDPlacementTR1\";\nimport ProfessionalDevelopmentTableRow11 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDMiniProjectTR1\";\nimport ProfessionalDevelopmentTableRow12 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDFinalprojectTR1\";\nimport ProfessionalDevelopmentTableRow13 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDPublicationsTR1\";\n\nimport { URL, server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentData1() {\n  const [drop1, setDrop1] = useState(false);\n  const [drop2, setDrop2] = useState(false);\n  const [drop3, setDrop3] = useState(false);\n  const [drop4, setDrop4] = useState(false);\n  const [drop5, setDrop5] = useState(false);\n  const [drop6, setDrop6] = useState(false);\n  const [drop7, setDrop7] = useState(false);\n  const [drop8, setDrop8] = useState(false);\n  const [drop9, setDrop9] = useState(false);\n  const [drop10, setDrop10] = useState(false);\n  const [drop11, setDrop11] = useState(false);\n  const [drop12, setDrop12] = useState(false);\n  const [drop13, setDrop13] = useState(false);\n\n  const [p1data, setp1data] = useState([]);\n  const [p2data, setp2data] = useState([]);\n  const [p3data, setp3data] = useState([]);\n  const [p4data, setp4data] = useState([]);\n  const [p5data, setp5data] = useState([]);\n  const [p6data, setp6data] = useState([]);\n  const [p7data, setp7data] = useState([]);\n  const [p8data, setp8data] = useState([]);\n  const [p9data, setp9data] = useState([]);\n  const [p10data, setp10data] = useState([]);\n  const [p11data, setp11data] = useState([]);\n  const [p12data, setp12data] = useState([]);\n  const [p13data, setp13data] = useState([]);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Inplant_cadisplay\", params),\n        axios.post(server_URL + \"guest_Ca_display\", params),\n        axios.post(server_URL + \"Motivational_cadisplay\", params),\n        axios.post(server_URL + \"intern_CA_display\", params),\n        axios.post(server_URL + \"cour_CA_display\", params),\n        axios.post(server_URL + \"workshop_cadisplay\", params),\n        axios.post(server_URL + \"webinar_cadisplay\", params),\n        axios.post(server_URL + \"comp_ca_display\", params),\n        axios.post(server_URL + \"placement_cadisplay\", params),\n        axios.post(server_URL + \"Miniproj_cadisplay\", params),\n        axios.post(server_URL + \"finpro_CA_display\", params),\n        axios.post(server_URL + \"publication_cadisplay\", params),\n      ])\n      .then(\n        axios.spread(\n          (\n            data1,\n            data2,\n            data3,\n            data4,\n            data5,\n            data6,\n            data7,\n            data8,\n            data9,\n            data10,\n            data11,\n            data12,\n            data13\n          ) => {\n            setp1data(data1.data);\n            setp2data(data2.data);\n            setp3data(data3.data);\n            setp4data(data4.data);\n            setp5data(data5.data);\n            setp6data(data6.data);\n            setp7data(data7.data);\n            setp8data(data8.data);\n            setp9data(data9.data);\n            setp10data(data10.data);\n            setp11data(data11.data);\n            setp12data(data12.data);\n            setp13data(data13.data);\n          }\n        )\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true),\n                  setDrop2(true),\n                  setDrop3(true),\n                  setDrop4(true),\n                  setDrop5(true),\n                  setDrop6(true),\n                  setDrop7(true),\n                  setDrop8(true),\n                  setDrop9(true),\n                  setDrop10(true),\n                  setDrop11(true),\n                  setDrop12(true),\n                  setDrop13(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false),\n                  setDrop5(false),\n                  setDrop6(false),\n                  setDrop7(false),\n                  setDrop8(false),\n                  setDrop9(false),\n                  setDrop10(false),\n                  setDrop11(false),\n                  setDrop12(false),\n                  setDrop13(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Industrial Visit\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p1data.map((item1) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow1\n                        id={item1.s_no}\n                        row1={item1.industry_name || Null_message}\n                        row2={item1.date || Null_message}\n                        row3={item1.outcome || Null_message}\n                        row4={item1.credits || Null_message}\n                        row5={item1.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Inplant Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p2data.map((item2) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow2\n                        id={item2.s_no}\n                        row1={item2.industry || Null_message}\n                        row2={item2.date || Null_message}\n                        row3={item2.outcome || Null_message}\n                        row4={item2.credits || Null_message}\n                        row5={item2.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Guest Lecture\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse mt=\"1em\" in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p3data.map((item3) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow3\n                        id={item3.s_no}\n                        row1={item3.topic || Null_message}\n                        row2={item3.resource_person || Null_message}\n                        row3={item3.outcome || Null_message}\n                        row4={item3.credits || Null_message}\n                        row5={item3.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Motivational Talks\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p4data.map((item4) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow4\n                        id={item4.s_no}\n                        row1={item4.topic || Null_message}\n                        row2={item4.date || Null_message}\n                        row3={item4.resource_person || Null_message}\n                        row4={item4.outcome || Null_message}\n                        row5={item4.credits || Null_message}\n                        row6={item4.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internships\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop5(!drop5)}\n            >\n              {drop5 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop5}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Company</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Duration in months</Th>\n                    <Th color=\"gray.400\">Reference</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p5data.map((item5) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow5\n                        id={item5.s_no}\n                        row1={item5.company_name || Null_message}\n                        row2={item5.date || Null_message}\n                        row3={item5.duration || Null_message}\n                        row4={item5.reference || Null_message}\n                        row5={item5.credits || Null_message}\n                        row6={item5.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Value Added Course\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop6(!drop6)}\n            >\n              {drop6 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop6}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Course Name</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p6data.map((item6) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow6\n                        id={item6.s_no}\n                        row1={item6.course_name || Null_message}\n                        row2={item6.date || Null_message}\n                        row3={item6.outcome || Null_message}\n                        row4={item6.credits || Null_message}\n                        row5={item6.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Workshop\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop7(!drop7)}\n            >\n              {drop7 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop7}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p7data.map((item7) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow7\n                        id={item7.s_no}\n                        row1={item7.topic || Null_message}\n                        row2={item7.date || Null_message}\n                        row3={item7.resource_person || Null_message}\n                        row4={item7.outcome || Null_message}\n                        row5={item7.credits || Null_message}\n                        row6={item7.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Webinar\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop8(!drop8)}\n            >\n              {drop8 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop8}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p8data.map((item8) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow8\n                        id={item8.s_no}\n                        row1={item8.topic || Null_message}\n                        row2={item8.date || Null_message}\n                        row3={item8.resource_person || Null_message}\n                        row4={item8.outcome || Null_message}\n                        row5={item8.credits || Null_message}\n                        row6={item8.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Competition\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop9(!drop9)}\n            >\n              {drop9 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop9}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name</Th>\n                    <Th color=\"gray.400\">\n                      Type of Competion (Coding / Project)\n                    </Th>\n                    <Th color=\"gray.400\">Date and year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p9data.map((item9) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow9\n                        id={item9.s_no}\n                        row1={item9.comp_name || Null_message}\n                        row2={item9.comp_type || Null_message}\n                        row3={item9.date || Null_message}\n                        row4={item9.position_secured || Null_message}\n                        row5={item9.credits || Null_message}\n                        row6={item9.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Placement Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop10(!drop10)}\n            >\n              {drop10 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop10}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Aptitude</Th>\n                    <Th color=\"gray.400\">Soft Skill</Th>\n                    <Th color=\"gray.400\">Reasoning</Th>\n                    <Th color=\"gray.400\">Technical Skill</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p10data.map((item10) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow10\n                        id={item10.s_no}\n                        row1={item10.aptitude || Null_message}\n                        row2={item10.soft_skills || Null_message}\n                        row3={item10.reasoning || Null_message}\n                        row4={item10.technical_training || Null_message}\n                        row5={item10.credits || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Mini Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop11(!drop11)}\n            >\n              {drop11 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop11}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p11data.map((item11) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow11\n                        id={item11.s_no}\n                        row1={item11.project_title || Null_message}\n                        row2={item11.objective || Null_message}\n                        row3={item11.outcome || Null_message}\n                        row4={item11.credits || Null_message}\n                        row5={item11.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Final Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop12(!drop12)}\n            >\n              {drop12 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop12}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p12data.map((item12) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow12\n                        id={item12.s_no}\n                        row1={item12.title || Null_message}\n                        row2={item12.objective || Null_message}\n                        row3={item12.outcome || Null_message}\n                        row4={item12.credits || Null_message}\n                        row5={item12.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Publications\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop13(!drop13)}\n            >\n              {drop13 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop13}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Conference / Journal</Th>\n                    <Th color=\"gray.400\">Name of Conference / Journal</Th>\n                    <Th color=\"gray.400\">Title Of the Article</Th>\n                    <Th color=\"gray.400\">Impact Factor</Th>\n                    <Th color=\"gray.400\">Indexed In</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p13data.map((item13) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow13\n                        id={item13.s_no}\n                        row1={item13.conf_or_journal || Null_message}\n                        row2={item13.name || Null_message}\n                        row3={item13.title || Null_message}\n                        row4={item13.impact_factor || Null_message}\n                        row5={item13.indexed_in || Null_message}\n                        row6={item13.credits || Null_message}\n                        row7={item13.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopmentData1;\n","/** @format */\n\n//Class Advisor ProfessionalDevelopment Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Button,\n  Collapse,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow5 from \"components/Tables/TableRow/TableRow5\";\nimport TableRow6 from \"components/Tables/TableRow/TableRow6\";\nimport TableRow7 from \"components/Tables/TableRow/TableRow7\";\nimport { URL, server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentData2() {\n  const [drop1, setDrop1] = useState(false);\n  const [drop2, setDrop2] = useState(false);\n  const [drop3, setDrop3] = useState(false);\n  const [drop4, setDrop4] = useState(false);\n  const [drop5, setDrop5] = useState(false);\n  const [drop6, setDrop6] = useState(false);\n  const [drop7, setDrop7] = useState(false);\n  const [drop8, setDrop8] = useState(false);\n  const [drop9, setDrop9] = useState(false);\n  const [drop10, setDrop10] = useState(false);\n  const [drop11, setDrop11] = useState(false);\n  const [drop12, setDrop12] = useState(false);\n  const [drop13, setDrop13] = useState(false);\n\n  const [p1data, setp1data] = useState([]);\n  const [p2data, setp2data] = useState([]);\n  const [p3data, setp3data] = useState([]);\n  const [p4data, setp4data] = useState([]);\n  const [p5data, setp5data] = useState([]);\n  const [p6data, setp6data] = useState([]);\n  const [p7data, setp7data] = useState([]);\n  const [p8data, setp8data] = useState([]);\n  const [p9data, setp9data] = useState([]);\n  const [p10data, setp10data] = useState([]);\n  const [p11data, setp11data] = useState([]);\n  const [p12data, setp12data] = useState([]);\n  const [p13data, setp13data] = useState([]);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"generalStudent\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"Industrialv_display\", params),\n        axios.post(server_URL + \"Inplant_display\", params),\n        axios.post(server_URL + \"guest_stud_display\", params),\n        axios.post(server_URL + \"Motivational_display\", params),\n        axios.post(server_URL + \"intern_stud_display\", params),\n        axios.post(server_URL + \"cour_Stud_display\", params),\n        axios.post(server_URL + \"workshop_studisplay\", params),\n        axios.post(server_URL + \"webinar_display\", params),\n        axios.post(server_URL + \"comp_stud_display\", params),\n        axios.post(server_URL + \"placement_display\", params),\n        axios.post(server_URL + \"Miniproj_display\", params),\n        axios.post(server_URL + \"finpro_Stud_display\", params),\n        axios.post(server_URL + \"publication_display\", params),\n      ])\n      .then(\n        axios.spread(\n          (\n            data1,\n            data2,\n            data3,\n            data4,\n            data5,\n            data6,\n            data7,\n            data8,\n            data9,\n            data10,\n            data11,\n            data12,\n            data13\n          ) => {\n            setp1data(data1.data);\n            setp2data(data2.data);\n            setp3data(data3.data);\n            setp4data(data4.data);\n            setp5data(data5.data);\n            setp6data(data6.data);\n            setp7data(data7.data);\n            setp8data(data8.data);\n            setp9data(data9.data);\n            setp10data(data10.data);\n            setp11data(data11.data);\n            setp12data(data12.data);\n            setp13data(data13.data);\n          }\n        )\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true),\n                  setDrop2(true),\n                  setDrop3(true),\n                  setDrop4(true),\n                  setDrop5(true),\n                  setDrop6(true),\n                  setDrop7(true),\n                  setDrop8(true),\n                  setDrop9(true),\n                  setDrop10(true),\n                  setDrop11(true),\n                  setDrop12(true),\n                  setDrop13(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false),\n                  setDrop5(false),\n                  setDrop6(false),\n                  setDrop7(false),\n                  setDrop8(false),\n                  setDrop9(false),\n                  setDrop10(false),\n                  setDrop11(false),\n                  setDrop12(false),\n                  setDrop13(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Industrial Visit\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p1data.map((item1) => {\n                    return (\n                      <TableRow5\n                        row1={item1.industry_name || Null_message}\n                        row2={item1.date || Null_message}\n                        row3={item1.outcome || Null_message}\n                        row4={item1.credits || Null_message}\n                        row5={item1.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Inplant Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p2data.map((item2) => {\n                    return (\n                      <TableRow5\n                        row1={item2.industry || Null_message}\n                        row2={item2.date || Null_message}\n                        row3={item2.outcome || Null_message}\n                        row4={item2.credits || Null_message}\n                        row5={item2.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Guest Lecture\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse mt=\"1em\" in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p3data.map((item3) => {\n                    return (\n                      <TableRow5\n                        row1={item3.topic || Null_message}\n                        row2={item3.resource_person || Null_message}\n                        row3={item3.outcome || Null_message}\n                        row4={item3.credits || Null_message}\n                        row5={item3.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Motivational Talks\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p4data.map((item4) => {\n                    return (\n                      <TableRow6\n                        row1={item4.topic || Null_message}\n                        row2={item4.date || Null_message}\n                        row3={item4.resource_person || Null_message}\n                        row4={item4.outcome || Null_message}\n                        row5={item4.credits || Null_message}\n                        row6={item4.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internships\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop5(!drop5)}\n            >\n              {drop5 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop5}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Company</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Duration in months</Th>\n                    <Th color=\"gray.400\">Reference</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p5data.map((item5) => {\n                    return (\n                      <TableRow6\n                        row1={item5.company_name || Null_message}\n                        row2={item5.date || Null_message}\n                        row3={item5.duration || Null_message}\n                        row4={item5.reference || Null_message}\n                        row5={item5.credits || Null_message}\n                        row6={item5.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Value Added Course\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop6(!drop6)}\n            >\n              {drop6 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop6}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Course Name</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p6data.map((item6) => {\n                    return (\n                      <TableRow5\n                        row1={item6.course_name || Null_message}\n                        row2={item6.date || Null_message}\n                        row3={item6.outcome || Null_message}\n                        row4={item6.credits || Null_message}\n                        row5={item6.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Workshop\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop7(!drop7)}\n            >\n              {drop7 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop7}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p7data.map((item7) => {\n                    return (\n                      <TableRow6\n                        row1={item7.topic || Null_message}\n                        row2={item7.date || Null_message}\n                        row3={item7.Resource || Null_message}\n                        row4={item7.outcome || Null_message}\n                        row5={item7.credits || Null_message}\n                        row6={item7.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Webinar\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop8(!drop8)}\n            >\n              {drop8 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop8}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p8data.map((item8) => {\n                    return (\n                      <TableRow6\n                        row1={item8.topic || Null_message}\n                        row2={item8.date || Null_message}\n                        row3={item8.resorce_person || Null_message}\n                        row4={item8.outcome || Null_message}\n                        row5={item8.credits || Null_message}\n                        row6={item8.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Competition\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop9(!drop9)}\n            >\n              {drop9 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop9}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name</Th>\n                    <Th color=\"gray.400\">\n                      Type of Competion (Coding / Project)\n                    </Th>\n                    <Th color=\"gray.400\">Date and year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p9data.map((item9) => {\n                    return (\n                      <TableRow6\n                        row1={item9.comp_name || Null_message}\n                        row2={item9.comp_type || Null_message}\n                        row3={item9.date || Null_message}\n                        row4={item9.position_secured || Null_message}\n                        row5={item9.credits || Null_message}\n                        row6={item9.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Placement Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop10(!drop10)}\n            >\n              {drop10 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop10}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Aptitude</Th>\n                    <Th color=\"gray.400\">Soft Skill</Th>\n                    <Th color=\"gray.400\">Reasoning</Th>\n                    <Th color=\"gray.400\">Technical Skill</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p10data.map((item10) => {\n                    return (\n                      <TableRow6\n                        row1={item10.aptitude || Null_message}\n                        row2={item10.soft_skills || Null_message}\n                        row3={item10.reasoning || Null_message}\n                        row4={item10.technical_training || Null_message}\n                        row5={item10.credits || Null_message}\n                        row6={item10.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Mini Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop11(!drop11)}\n            >\n              {drop11 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop11}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p11data.map((item11) => {\n                    return (\n                      <TableRow5\n                        row1={item11.project_title || Null_message}\n                        row2={item11.objective || Null_message}\n                        row3={item11.outcome || Null_message}\n                        row4={item11.credits || Null_message}\n                        row5={item11.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Final Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop12(!drop12)}\n            >\n              {drop12 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop12}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p12data.map((item12) => {\n                    return (\n                      <TableRow5\n                        row1={item12.title || Null_message}\n                        row2={item12.objective || Null_message}\n                        row3={item12.outcome || Null_message}\n                        row4={item12.credits || Null_message}\n                        row5={item12.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Publications\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop13(!drop13)}\n            >\n              {drop13 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop13}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Conference / Journal</Th>\n                    <Th color=\"gray.400\">Name of Conference / Journal</Th>\n                    <Th color=\"gray.400\">Title Of the Article</Th>\n                    <Th color=\"gray.400\">Impact Factor</Th>\n                    <Th color=\"gray.400\">Indexed In</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p13data.map((item13) => {\n                    return (\n                      <TableRow7\n                        row1={item13.conf_or_journal || Null_message}\n                        row2={item13.name || Null_message}\n                        row3={item13.title || Null_message}\n                        row4={item13.impact_factor || Null_message}\n                        row5={item13.indexed_in || Null_message}\n                        row6={item13.credits || Null_message}\n                        row7={item13.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopmentData2;\n","/** @format */\n\n//Class Advisor ProfessionalDevelopment Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Button,\n  Collapse,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TableRow5 from \"components/Tables/TableRow/TableRow5\";\nimport TableRow6 from \"components/Tables/TableRow/TableRow6\";\nimport TableRow7 from \"components/Tables/TableRow/TableRow7\";\nimport { URL, server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentData3() {\n  const [drop1, setDrop1] = useState(false);\n  const [drop2, setDrop2] = useState(false);\n  const [drop3, setDrop3] = useState(false);\n  const [drop4, setDrop4] = useState(false);\n  const [drop5, setDrop5] = useState(false);\n  const [drop6, setDrop6] = useState(false);\n  const [drop7, setDrop7] = useState(false);\n  const [drop8, setDrop8] = useState(false);\n  const [drop9, setDrop9] = useState(false);\n  const [drop10, setDrop10] = useState(false);\n  const [drop11, setDrop11] = useState(false);\n  const [drop12, setDrop12] = useState(false);\n  const [drop13, setDrop13] = useState(false);\n\n  const [p1data, setp1data] = useState([]);\n  const [p2data, setp2data] = useState([]);\n  const [p3data, setp3data] = useState([]);\n  const [p4data, setp4data] = useState([]);\n  const [p5data, setp5data] = useState([]);\n  const [p6data, setp6data] = useState([]);\n  const [p7data, setp7data] = useState([]);\n  const [p8data, setp8data] = useState([]);\n  const [p9data, setp9data] = useState([]);\n  const [p10data, setp10data] = useState([]);\n  const [p11data, setp11data] = useState([]);\n  const [p12data, setp12data] = useState([]);\n  const [p13data, setp13data] = useState([]);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n      ])\n      .then(\n        axios.spread(\n          (\n            data1,\n            data2,\n            data3,\n            data4,\n            data5,\n            data6,\n            data7,\n            data8,\n            data9,\n            data10,\n            data11,\n            data12,\n            data13\n          ) => {\n            setp1data(data1.data);\n            setp2data(data2.data);\n            setp3data(data3.data);\n            setp4data(data4.data);\n            setp5data(data5.data);\n            setp6data(data6.data);\n            setp7data(data7.data);\n            setp8data(data8.data);\n            setp9data(data9.data);\n            setp10data(data10.data);\n            setp11data(data11.data);\n            setp12data(data12.data);\n            setp13data(data13.data);\n          }\n        )\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true),\n                  setDrop2(true),\n                  setDrop3(true),\n                  setDrop4(true),\n                  setDrop5(true),\n                  setDrop6(true),\n                  setDrop7(true),\n                  setDrop8(true),\n                  setDrop9(true),\n                  setDrop10(true),\n                  setDrop11(true),\n                  setDrop12(true),\n                  setDrop13(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false),\n                  setDrop5(false),\n                  setDrop6(false),\n                  setDrop7(false),\n                  setDrop8(false),\n                  setDrop9(false),\n                  setDrop10(false),\n                  setDrop11(false),\n                  setDrop12(false),\n                  setDrop13(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Industrial Visit\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p1data.map((item1) => {\n                    return (\n                      <TableRow5\n                        id={item1.s_no || Null_message}\n                        row1={item1.industry_name || Null_message}\n                        row2={item1.date || Null_message}\n                        row3={item1.outcome || Null_message}\n                        row4={item1.credits || Null_message}\n                        row5={item1.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Inplant Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p2data.map((item2) => {\n                    return (\n                      <TableRow5\n                        row1={item2.industry || Null_message}\n                        row2={item2.date || Null_message}\n                        row3={item2.outcome || Null_message}\n                        row4={item2.credits || Null_message}\n                        row5={item2.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Guest Lecture\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse mt=\"1em\" in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p3data.map((item3) => {\n                    return (\n                      <TableRow5\n                        row1={item3.topic || Null_message}\n                        row2={item3.resource_person || Null_message}\n                        row3={item3.outcome || Null_message}\n                        row4={item3.credits || Null_message}\n                        row5={item3.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Motivational Talks\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p4data.map((item4) => {\n                    return (\n                      <TableRow6\n                        row1={item4.topic || Null_message}\n                        row2={item4.date || Null_message}\n                        row3={item4.resource_person || Null_message}\n                        row4={item4.outcome || Null_message}\n                        row5={item4.credits || Null_message}\n                        row6={item4.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internships\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop5(!drop5)}\n            >\n              {drop5 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop5}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Company</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Duration in months</Th>\n                    <Th color=\"gray.400\">Reference</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p5data.map((item5) => {\n                    return (\n                      <TableRow6\n                        row1={item5.company_name || Null_message}\n                        row2={item5.date || Null_message}\n                        row3={item5.duration || Null_message}\n                        row4={item5.reference || Null_message}\n                        row5={item5.credits || Null_message}\n                        row6={item5.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Value Added Course\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop6(!drop6)}\n            >\n              {drop6 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop6}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Course Name</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p6data.map((item6) => {\n                    return (\n                      <TableRow5\n                        row1={item6.course_name || Null_message}\n                        row2={item6.date || Null_message}\n                        row3={item6.outcome || Null_message}\n                        row4={item6.credits || Null_message}\n                        row5={item6.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Workshop\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop7(!drop7)}\n            >\n              {drop7 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop7}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p7data.map((item7) => {\n                    return (\n                      <TableRow6\n                        row1={item7.topic || Null_message}\n                        row2={item7.date || Null_message}\n                        row3={item7.Resource || Null_message}\n                        row4={item7.outcome || Null_message}\n                        row5={item7.credits || Null_message}\n                        row6={item7.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Webinar\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop8(!drop8)}\n            >\n              {drop8 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop8}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p8data.map((item8) => {\n                    return (\n                      <TableRow6\n                        row1={item8.topic || Null_message}\n                        row2={item8.date || Null_message}\n                        row3={item8.resorce_person || Null_message}\n                        row4={item8.outcome || Null_message}\n                        row5={item8.credits || Null_message}\n                        row6={item8.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Competition\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop9(!drop9)}\n            >\n              {drop9 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop9}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name</Th>\n                    <Th color=\"gray.400\">\n                      Type of Competion (Coding / Project)\n                    </Th>\n                    <Th color=\"gray.400\">Date and year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p9data.map((item9) => {\n                    return (\n                      <TableRow6\n                        row1={item9.comp_name || Null_message}\n                        row2={item9.comp_type || Null_message}\n                        row3={item9.date || Null_message}\n                        row4={item9.position_secured || Null_message}\n                        row5={item9.credits || Null_message}\n                        row6={item9.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Placement Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop10(!drop10)}\n            >\n              {drop10 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop10}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Aptitude</Th>\n                    <Th color=\"gray.400\">Soft Skill</Th>\n                    <Th color=\"gray.400\">Reasoning</Th>\n                    <Th color=\"gray.400\">Technical Skill</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p10data.map((item10) => {\n                    return (\n                      <TableRow6\n                        row1={item10.aptitude || Null_message}\n                        row2={item10.soft_skills || Null_message}\n                        row3={item10.reasoning || Null_message}\n                        row4={item10.technical_training || Null_message}\n                        row5={item10.credits || Null_message}\n                        row6={item10.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Mini Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop11(!drop11)}\n            >\n              {drop11 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop11}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p11data.map((item11) => {\n                    return (\n                      <TableRow5\n                        row1={item11.project_title || Null_message}\n                        row2={item11.objective || Null_message}\n                        row3={item11.outcome || Null_message}\n                        row4={item11.credits || Null_message}\n                        row5={item11.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Final Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop12(!drop12)}\n            >\n              {drop12 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop12}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p12data.map((item12) => {\n                    return (\n                      <TableRow5\n                        row1={item12.title || Null_message}\n                        row2={item12.objective || Null_message}\n                        row3={item12.outcome || Null_message}\n                        row4={item12.credits || Null_message}\n                        row5={item12.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Publications\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop13(!drop13)}\n            >\n              {drop13 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop13}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Conference / Journal</Th>\n                    <Th color=\"gray.400\">Name of Conference / Journal</Th>\n                    <Th color=\"gray.400\">Title Of the Article</Th>\n                    <Th color=\"gray.400\">Impact Factor</Th>\n                    <Th color=\"gray.400\">Indexed In</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p13data.map((item13) => {\n                    return (\n                      <TableRow7\n                        row1={item13.conf_or_journal || Null_message}\n                        row2={item13.name || Null_message}\n                        row3={item13.title || Null_message}\n                        row4={item13.impact_factor || Null_message}\n                        row5={item13.indexed_in || Null_message}\n                        row6={item13.credits || Null_message}\n                        row7={item13.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopmentData3;\n","/** @format */\n\n//Class Advisor ProfessionalDevelopment Data\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  SimpleGrid,\n  Button,\n  Collapse,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport ProfessionalDevelopmentTableRow1 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDIndustrialVisitTR1\";\nimport ProfessionalDevelopmentTableRow2 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDInplantTrainingTR1\";\nimport ProfessionalDevelopmentTableRow3 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDGuestlectureTR1\";\nimport ProfessionalDevelopmentTableRow4 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDMotivationalTalkTR1\";\nimport ProfessionalDevelopmentTableRow5 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDInternshipTR1\";\nimport ProfessionalDevelopmentTableRow6 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDCoursesTR1\";\nimport ProfessionalDevelopmentTableRow7 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDWorkshopTR1\";\nimport ProfessionalDevelopmentTableRow8 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDWebinarTR1\";\nimport ProfessionalDevelopmentTableRow9 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDCompetitionsTR1\";\nimport ProfessionalDevelopmentTableRow10 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDPlacementTR1\";\nimport ProfessionalDevelopmentTableRow11 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDMiniProjectTR1\";\nimport ProfessionalDevelopmentTableRow12 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDFinalprojectTR1\";\nimport ProfessionalDevelopmentTableRow13 from \"components/Tables/ProfessionalTableRow/ProfessionalTableRow1/PDPublicationsTR1\";\n\nimport { URL, server_URL } from \"controller/urls_config\";\n\nfunction ProfessionalDevelopmentData1() {\n  const [drop1, setDrop1] = useState(false);\n  const [drop2, setDrop2] = useState(false);\n  const [drop3, setDrop3] = useState(false);\n  const [drop4, setDrop4] = useState(false);\n  const [drop5, setDrop5] = useState(false);\n  const [drop6, setDrop6] = useState(false);\n  const [drop7, setDrop7] = useState(false);\n  const [drop8, setDrop8] = useState(false);\n  const [drop9, setDrop9] = useState(false);\n  const [drop10, setDrop10] = useState(false);\n  const [drop11, setDrop11] = useState(false);\n  const [drop12, setDrop12] = useState(false);\n  const [drop13, setDrop13] = useState(false);\n\n  const [p1data, setp1data] = useState([]);\n  const [p2data, setp2data] = useState([]);\n  const [p3data, setp3data] = useState([]);\n  const [p4data, setp4data] = useState([]);\n  const [p5data, setp5data] = useState([]);\n  const [p6data, setp6data] = useState([]);\n  const [p7data, setp7data] = useState([]);\n  const [p8data, setp8data] = useState([]);\n  const [p9data, setp9data] = useState([]);\n  const [p10data, setp10data] = useState([]);\n  const [p11data, setp11data] = useState([]);\n  const [p12data, setp12data] = useState([]);\n  const [p13data, setp13data] = useState([]);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const Null_message = \"NULL\";\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"Industrialv_cadisplay\", params),\n        axios.post(server_URL + \"Inplant_cadisplay\", params),\n        axios.post(server_URL + \"guest_Ca_display\", params),\n        axios.post(server_URL + \"Motivational_cadisplay\", params),\n        axios.post(server_URL + \"intern_CA_display\", params),\n        axios.post(server_URL + \"cour_CA_display\", params),\n        axios.post(server_URL + \"workshop_cadisplay\", params),\n        axios.post(server_URL + \"webinar_cadisplay\", params),\n        axios.post(server_URL + \"comp_ca_display\", params),\n        axios.post(server_URL + \"placement_cadisplay\", params),\n        axios.post(server_URL + \"Miniproj_cadisplay\", params),\n        axios.post(server_URL + \"finpro_CA_display\", params),\n        axios.post(server_URL + \"publication_cadisplay\", params),\n      ])\n      .then(\n        axios.spread(\n          (\n            data1,\n            data2,\n            data3,\n            data4,\n            data5,\n            data6,\n            data7,\n            data8,\n            data9,\n            data10,\n            data11,\n            data12,\n            data13\n          ) => {\n            setp1data(data1.data);\n            setp2data(data2.data);\n            setp3data(data3.data);\n            setp4data(data4.data);\n            setp5data(data5.data);\n            setp6data(data6.data);\n            setp7data(data7.data);\n            setp8data(data8.data);\n            setp9data(data9.data);\n            setp10data(data10.data);\n            setp11data(data11.data);\n            setp12data(data12.data);\n            setp13data(data13.data);\n          }\n        )\n      );\n  }, []);\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n        <Flex direction=\"column\" align=\"flex-end\">\n          <box>\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(true),\n                  setDrop2(true),\n                  setDrop3(true),\n                  setDrop4(true),\n                  setDrop5(true),\n                  setDrop6(true),\n                  setDrop7(true),\n                  setDrop8(true),\n                  setDrop9(true),\n                  setDrop10(true),\n                  setDrop11(true),\n                  setDrop12(true),\n                  setDrop13(true);\n              }}\n            >\n              Show All\n            </Button>\n\n            <Button\n              ms=\"auto\"\n              me=\"1em\"\n              bg=\"orange.400\"\n              width=\"6em\"\n              height=\"2em\"\n              onClick={() => {\n                setDrop1(false),\n                  setDrop2(false),\n                  setDrop3(false),\n                  setDrop4(false),\n                  setDrop5(false),\n                  setDrop6(false),\n                  setDrop7(false),\n                  setDrop8(false),\n                  setDrop9(false),\n                  setDrop10(false),\n                  setDrop11(false),\n                  setDrop12(false),\n                  setDrop13(false);\n              }}\n            >\n              Hide All\n            </Button>\n          </box>\n        </Flex>\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Industrial Visit\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop1(!drop1)}\n            >\n              {drop1 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop1}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p1data.map((item1) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow1\n                        id={item1.s_no}\n                        row1={item1.industry_name || Null_message}\n                        row2={item1.date || Null_message}\n                        row3={item1.outcome || Null_message}\n                        row4={item1.credits || Null_message}\n                        row5={item1.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Inplant Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop2(!drop2)}\n            >\n              {drop2 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop2}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Industry</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p2data.map((item2) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow2\n                        id={item2.s_no}\n                        row1={item2.industry || Null_message}\n                        row2={item2.date || Null_message}\n                        row3={item2.outcome || Null_message}\n                        row4={item2.credits || Null_message}\n                        row5={item2.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Guest Lecture\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop3(!drop3)}\n            >\n              {drop3 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse mt=\"1em\" in={drop3}>\n            <CardBody overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p3data.map((item3) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow3\n                        id={item3.s_no}\n                        row1={item3.topic || Null_message}\n                        row2={item3.resource_person || Null_message}\n                        row3={item3.outcome || Null_message}\n                        row4={item3.credits || Null_message}\n                        row5={item3.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Motivational Talks\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop4(!drop4)}\n            >\n              {drop4 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop4}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p4data.map((item4) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow4\n                        id={item4.s_no}\n                        row1={item4.topic || Null_message}\n                        row2={item4.date || Null_message}\n                        row3={item4.resource_person || Null_message}\n                        row4={item4.outcome || Null_message}\n                        row5={item4.credits || Null_message}\n                        row6={item4.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Internships\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop5(!drop5)}\n            >\n              {drop5 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop5}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Company</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Duration in months</Th>\n                    <Th color=\"gray.400\">Reference</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p5data.map((item5) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow5\n                        id={item5.s_no}\n                        row1={item5.company_name || Null_message}\n                        row2={item5.date || Null_message}\n                        row3={item5.duration || Null_message}\n                        row4={item5.reference || Null_message}\n                        row5={item5.credits || Null_message}\n                        row6={item5.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Value Added Course\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop6(!drop6)}\n            >\n              {drop6 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop6}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Course Name</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p6data.map((item6) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow6\n                        id={item6.s_no}\n                        row1={item6.course_name || Null_message}\n                        row2={item6.date || Null_message}\n                        row3={item6.outcome || Null_message}\n                        row4={item6.credits || Null_message}\n                        row5={item6.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Workshop\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop7(!drop7)}\n            >\n              {drop7 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop7}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p7data.map((item7) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow7\n                        id={item7.s_no}\n                        row1={item7.topic || Null_message}\n                        row2={item7.date || Null_message}\n                        row3={item7.resource_person || Null_message}\n                        row4={item7.outcome || Null_message}\n                        row5={item7.credits || Null_message}\n                        row6={item7.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Webinar\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop8(!drop8)}\n            >\n              {drop8 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop8}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Topic</Th>\n                    <Th color=\"gray.400\">Date and Year</Th>\n                    <Th color=\"gray.400\">Resource Person</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p8data.map((item8) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow8\n                        id={item8.s_no}\n                        row1={item8.topic || Null_message}\n                        row2={item8.date || Null_message}\n                        row3={item8.resource_person || Null_message}\n                        row4={item8.outcome || Null_message}\n                        row5={item8.credits || Null_message}\n                        row6={item8.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Competition\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop9(!drop9)}\n            >\n              {drop9 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop9}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Name</Th>\n                    <Th color=\"gray.400\">\n                      Type of Competion (Coding / Project)\n                    </Th>\n                    <Th color=\"gray.400\">Date and year</Th>\n                    <Th color=\"gray.400\">Position Secured</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p9data.map((item9) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow9\n                        id={item9.s_no}\n                        row1={item9.comp_name || Null_message}\n                        row2={item9.comp_type || Null_message}\n                        row3={item9.date || Null_message}\n                        row4={item9.position_secured || Null_message}\n                        row5={item9.credits || Null_message}\n                        row6={item9.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Placement Training\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop10(!drop10)}\n            >\n              {drop10 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop10}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Aptitude</Th>\n                    <Th color=\"gray.400\">Soft Skill</Th>\n                    <Th color=\"gray.400\">Reasoning</Th>\n                    <Th color=\"gray.400\">Technical Skill</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p10data.map((item10) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow10\n                        id={item10.s_no}\n                        row1={item10.aptitude || Null_message}\n                        row2={item10.soft_skills || Null_message}\n                        row3={item10.reasoning || Null_message}\n                        row4={item10.technical_training || Null_message}\n                        row5={item10.credits || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Mini Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop11(!drop11)}\n            >\n              {drop11 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop11}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p11data.map((item11) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow11\n                        id={item11.s_no}\n                        row1={item11.project_title || Null_message}\n                        row2={item11.objective || Null_message}\n                        row3={item11.outcome || Null_message}\n                        row4={item11.credits || Null_message}\n                        row5={item11.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Final Project\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop12(!drop12)}\n            >\n              {drop12 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop12}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Title</Th>\n                    <Th color=\"gray.400\">Objective</Th>\n                    <Th color=\"gray.400\">Outcome</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p12data.map((item12) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow12\n                        id={item12.s_no}\n                        row1={item12.title || Null_message}\n                        row2={item12.objective || Null_message}\n                        row3={item12.outcome || Null_message}\n                        row4={item12.credits || Null_message}\n                        row5={item12.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Publications\n            </Text>\n            <Button\n              ms=\"auto\"\n              bg=\"orange.400\"\n              width=\"fit-content\"\n              height=\"2em\"\n              onClick={() => setDrop13(!drop13)}\n            >\n              {drop13 ? \"Hide\" : \"Show\"}\n            </Button>\n          </CardHeader>\n          <Collapse in={drop13}>\n            <CardBody mt=\"1em\" overflowX={{ sm: \"scroll\" }}>\n              <Table variant=\"simple\" color={textColor}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">Conference / Journal</Th>\n                    <Th color=\"gray.400\">Name of Conference / Journal</Th>\n                    <Th color=\"gray.400\">Title Of the Article</Th>\n                    <Th color=\"gray.400\">Impact Factor</Th>\n                    <Th color=\"gray.400\">Indexed In</Th>\n                    <Th color=\"gray.400\">Credits</Th>\n                    <Th color=\"gray.400\">Verify Status</Th>\n                    <Th color=\"gray.400\">Edit</Th>\n                    <Th color=\"gray.400\">Delete</Th>\n                    <Th color=\"gray.400\">Verify</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {p13data.map((item13) => {\n                    return (\n                      <ProfessionalDevelopmentTableRow13\n                        id={item13.s_no}\n                        row1={item13.conf_or_journal || Null_message}\n                        row2={item13.name || Null_message}\n                        row3={item13.title || Null_message}\n                        row4={item13.impact_factor || Null_message}\n                        row5={item13.indexed_in || Null_message}\n                        row6={item13.credits || Null_message}\n                        row7={item13.verified || Null_message}\n                      />\n                    );\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Collapse>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopmentData1;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Button,\n  FormControl,\n  SimpleGrid,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  useToast,\n  ModalCloseButton,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationDataEdit(props) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // Toast var\n  const toast = useToast();\n\n  var roll_no,\n    reg_no,\n    sname,\n    aadhar_no,\n    email,\n    licet_email,\n    batch,\n    dept,\n    quota,\n    gender,\n    dob,\n    nationality,\n    contact_no,\n    father_name,\n    mother_name,\n    father_mob_no,\n    mother_mob_no,\n    community,\n    religion,\n    if_catholic_parish,\n    dalit_catholic_yn,\n    present_address,\n    permanent_address,\n    blood_group,\n    mother_tongue,\n    lang_know,\n    pan,\n    father_qualification,\n    mother_qualification,\n    father_occupation,\n    mother_occupation,\n    father_office_address,\n    mother_office_address,\n    father_annual_income,\n    mother_annual_income,\n    father_email,\n    mother_email,\n    guardian_name,\n    guardian_qualification,\n    guardian_occupation,\n    guardian_office_address,\n    guardian_annual_income,\n    guardian_mob_no,\n    guardian_email,\n    no_of_siblings,\n    name_siblings,\n    qualification_siblings,\n    occupation_siblings,\n    alumni_licet_loyola_yn,\n    application_no,\n    date_of_ad,\n    regular_lateral_rl,\n    dayschl_hosteller_dh,\n    scholarship_name,\n    scholarship_amount,\n    first_graduate_yn,\n    eco_backward_yn,\n    programming_languages,\n    software_proficiency,\n    dept_rel_proficiency,\n    certifications,\n    other_skills,\n    aptitude_analytical_skills,\n    communication_skills,\n    social_media_exposure,\n    leadership_skills,\n    other_interpersonal_skills,\n    short_term_goal,\n    long_term_goal,\n    membership_name,\n    membership_no,\n    membership_duration,\n    hse_school_name,\n    hse_board,\n    hse_medium,\n    hse_sec_lang,\n    hse_group,\n    hse_marks,\n    hse_percentage,\n    hse_cutoff,\n    hse_attempts,\n    sslc_school_name,\n    sslc_board,\n    sslc_medium,\n    sslc_sec_lang,\n    sslc_marks,\n    sslc_percentage,\n    sslc_attempts;\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n  });\n  data.map((item) => {\n    (sname = item.sname),\n      (roll_no = item.roll_no),\n      (reg_no = item.reg_no),\n      (gender = item.gender),\n      (dob = item.dob),\n      (dept = item.dept),\n      (batch = item.batch),\n      (nationality = item.nationality),\n      (religion = item.religion),\n      (if_catholic_parish = item.if_catholic_parish),\n      (dalit_catholic_yn = item.dalit_catholic_yn),\n      (community = item.community),\n      (blood_group = item.blood_group),\n      (mother_tongue = item.mother_tongue),\n      (contact_no = item.contact_no),\n      (aadhar_no = item.aadhar_no),\n      (licet_email = item.licet_email),\n      (email = item.email),\n      (present_address = item.present_address),\n      (permanent_address = item.permanent_address),\n      (lang_know = item.lang_know),\n      (pan = item.pan),\n      (hse_school_name = item.hse_school_name),\n      (hse_board = item.hse_board),\n      (hse_medium = item.hse_medium),\n      (hse_sec_lang = item.hse_sec_lang),\n      (hse_group = item.hse_group),\n      (hse_marks = item.hse_marks),\n      (hse_percentage = item.hse_percentage),\n      (hse_cutoff = item.hse_cutoff),\n      (hse_attempts = item.hse_attempts),\n      (sslc_school_name = item.sslc_school_name),\n      (sslc_board = item.sslc_board),\n      (sslc_medium = item.sslc_medium),\n      (sslc_sec_lang = item.sslc_sec_lang),\n      (sslc_marks = item.sslc_marks),\n      (sslc_percentage = item.sslc_percentage),\n      (sslc_attempts = item.sslc_attempts),\n      (father_name = item.father_name),\n      (father_qualification = item.father_office_address),\n      (father_occupation = item.father_occupation),\n      (father_office_address = item.father_office_address),\n      (father_annual_income = item.father_annual_income),\n      (father_mob_no = item.father_mob_no),\n      (father_email = item.father_email),\n      (guardian_name = item.guardian_name),\n      (guardian_qualification = item.guardian_qualification),\n      (guardian_occupation = item.guardian_occupation),\n      (guardian_office_address = item.guardian_office_address),\n      (guardian_annual_income = item.guardian_annual_income),\n      (guardian_mob_no = item.guardian_mob_no),\n      (guardian_email = item.guardian_email),\n      (mother_name = item.mother_name),\n      (mother_qualification = item.mother_qualification),\n      (mother_occupation = item.mother_occupation),\n      (mother_office_address = item.mother_office_address),\n      (mother_annual_income = item.mother_annual_income),\n      (mother_mob_no = item.mother_mob_no),\n      (mother_email = item.mother_email),\n      (no_of_siblings = item.no_of_siblings),\n      (name_siblings = item.name_siblings),\n      (qualification_siblings = item.qualification_siblings),\n      (occupation_siblings = item.occupation_siblings),\n      (alumni_licet_loyola_yn = item.alumni_licet_loyola_yn),\n      (application_no = item.application_no),\n      (date_of_ad = item.date_of_ad),\n      (quota = item.quota),\n      (regular_lateral_rl = item.regular_lateral_rl),\n      (dayschl_hosteller_dh = item.dayschl_hosteller_dh),\n      (scholarship_name = item.scholarship_name),\n      (scholarship_amount = item.scholarship_amount),\n      (first_graduate_yn = item.first_graduate_yn),\n      (eco_backward_yn = item.eco_backward_yn),\n      (programming_languages = item.programming_languages),\n      (software_proficiency = item.software_proficiency),\n      (dept_rel_proficiency = item.dept_rel_proficiency),\n      (certifications = item.certifications),\n      (other_skills = item.other_skills),\n      (aptitude_analytical_skills = item.aptitude_analytical_skills),\n      (communication_skills = item.communication_skills),\n      (social_media_exposure = item.social_media_exposure),\n      (leadership_skills = item.leadership_skills),\n      (other_interpersonal_skills = item.other_interpersonal_skills),\n      (short_term_goal = item.short_term_goal),\n      (long_term_goal = item.long_term_goal),\n      (membership_name = item.membership_name),\n      (membership_no = item.membership_no),\n      (membership_duration = item.membership_duration);\n  });\n  function funedit() {\n    let params = new URLSearchParams();\n\n    // Roll number\n    params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n    // Name\n    params.append(\n      \"name\",\n      document.getElementById(\"NID\").value.length !== 0\n        ? document.getElementById(\"NID\").value\n        : sname\n    );\n\n    // Register Number\n    params.append(\n      \"registerno\",\n      document.getElementById(\"REID\").value.length !== 0\n        ? document.getElementById(\"REID\").value\n        : reg_no\n    );\n\n    // sex\n    params.append(\n      \"sex\",\n      document.getElementById(\"SID\").value.length !== 0\n        ? document.getElementById(\"SID\").value\n        : reg_no\n    );\n\n    // Date of Birth\n    params.append(\n      \"dateofbirth\",\n      document.getElementById(\"DOBID\").value.length !== 0\n        ? document.getElementById(\"DOBID\").value\n        : dob\n    );\n\n    // Department\n    params.append(\n      \"dep\",\n      document.getElementById(\"DEPT\").value.length !== 0\n        ? document.getElementById(\"DEPT\").value\n        : dept\n    );\n\n    // Batch\n    params.append(\n      \"batt\",\n      document.getElementById(\"BATCH\").value.length !== 0\n        ? document.getElementById(\"BATCH\").value\n        : batch\n    );\n\n    // Nationality\n    params.append(\n      \"nationality\",\n      document.getElementById(\"NATIONID\").value.length !== 0\n        ? document.getElementById(\"NATIONID\").value\n        : nationality\n    );\n\n    // Religion\n    params.append(\n      \"religion\",\n      document.getElementById(\"RELIGIONID\").value.length !== 0\n        ? document.getElementById(\"RELIGIONID\").value\n        : religion\n    );\n\n    // Parish\n    params.append(\n      \"parish\",\n      document.getElementById(\"PARISHID\").value.length !== 0\n        ? document.getElementById(\"PARISHID\").value\n        : if_catholic_parish\n    );\n\n    // Dalit\n    params.append(\n      \"dalit\",\n      document.getElementById(\"DALITID\").value.length !== 0\n        ? document.getElementById(\"DALITID\").value\n        : dalit_catholic_yn\n    );\n\n    // Community\n    params.append(\n      \"community\",\n      document.getElementById(\"COMMUNITYID\").value.length !== 0\n        ? document.getElementById(\"COMMUNITYID\").value\n        : community\n    );\n\n    // BloodID\n    params.append(\n      \"bloodgroup\",\n      document.getElementById(\"BLOODID\").value.length !== 0\n        ? document.getElementById(\"BLOODID\").value\n        : blood_group\n    );\n\n    // Aadhar\n    params.append(\n      \"aadhar\",\n      document.getElementById(\"AADHARID\").value.length !== 0\n        ? document.getElementById(\"AADHARID\").value\n        : aadhar_no\n    );\n\n    // Mother Tongue\n    params.append(\n      \"mothertongue\",\n      document.getElementById(\"MOTHERID\").value.length !== 0\n        ? document.getElementById(\"MOTHERID\").value\n        : mother_tongue\n    );\n\n    // Contact\n    params.append(\n      \"contact\",\n      document.getElementById(\"CONTACTID\").value.length !== 0\n        ? document.getElementById(\"CONTACTID\").value\n        : contact_no\n    );\n\n    // PEREMAIL\n    params.append(\n      \"peremail\",\n      document.getElementById(\"PEREMID\").value.length !== 0\n        ? document.getElementById(\"PEREMID\").value\n        : email\n    );\n\n    // PREADDRID\n    params.append(\n      \"peraddr\",\n      document.getElementById(\"PREADDRID\").value.length !== 0\n        ? document.getElementById(\"PREADDRID\").value\n        : permanent_address\n    );\n\n    // Languages Known\n    params.append(\n      \"langknow\",\n      document.getElementById(\"LANKNOW\").value.length !== 0\n        ? document.getElementById(\"LANKNOW\").value\n        : permanent_address\n    );\n\n    if (document.getElementById(\"PAN\").value.length !== 0) {\n      params.append(\"pano\", document.getElementById(\"PAN\").value);\n    } else {\n      params.append(\"pano\", pan);\n    }\n\n    if (document.getElementById(\"NOS1\").value.length !== 0) {\n      params.append(\"hsenos\", document.getElementById(\"NOS1\").value);\n    } else {\n      params.append(\"hsenos\", hse_school_name);\n    }\n    if (document.getElementById(\"BOARD1\").value.length !== 0) {\n      params.append(\"hsebod\", document.getElementById(\"BOARD1\").value);\n    } else {\n      params.append(\"hsebod\", hse_board);\n    }\n    if (document.getElementById(\"MOI1\").value.length !== 0) {\n      params.append(\"hsemoi\", document.getElementById(\"MOI1\").value);\n    } else {\n      params.append(\"hsemoi\", hse_medium);\n    }\n    if (document.getElementById(\"SL1\").value.length !== 0) {\n      params.append(\"hsesl\", document.getElementById(\"SL1\").value);\n    } else {\n      params.append(\"hsesl\", hse_sec_lang);\n    }\n    if (document.getElementById(\"GROUP1\").value.length !== 0) {\n      params.append(\"hsegro\", document.getElementById(\"GROUP1\").value);\n    } else {\n      params.append(\"hsegro\", hse_group);\n    }\n    if (document.getElementById(\"TM1\").value.length !== 0) {\n      params.append(\"hsetm\", document.getElementById(\"TM1\").value);\n    } else {\n      params.append(\"hsetm\", hse_marks);\n    }\n    if (document.getElementById(\"OP1\").value.length !== 0) {\n      params.append(\"hseop\", document.getElementById(\"OP1\").value);\n    } else {\n      params.append(\"hseop\", hse_percentage);\n    }\n    if (document.getElementById(\"COM1\").value.length !== 0) {\n      params.append(\"hsecom\", document.getElementById(\"COM1\").value);\n    } else {\n      params.append(\"hsecom\", hse_cutoff);\n    }\n    if (document.getElementById(\"NOA1\").value.length !== 0) {\n      params.append(\"hsenoa\", document.getElementById(\"NOA1\").value);\n    } else {\n      params.append(\"hsenoa\", hse_attempts);\n    }\n\n    if (document.getElementById(\"NOS2\").value.length !== 0) {\n      params.append(\"sslcnos\", document.getElementById(\"NOS2\").value);\n    } else {\n      params.append(\"sslcnos\", sslc_school_name);\n    }\n    if (document.getElementById(\"BOARD2\").value.length !== 0) {\n      params.append(\"sslcbod\", document.getElementById(\"BOARD2\").value);\n    } else {\n      params.append(\"sslcbod\", sslc_board);\n    }\n    if (document.getElementById(\"MOI2\").value.length !== 0) {\n      params.append(\"sslcmoi\", document.getElementById(\"MOI2\").value);\n    } else {\n      params.append(\"sslcmoi\", sslc_medium);\n    }\n    if (document.getElementById(\"SL2\").value.length !== 0) {\n      params.append(\"sslcsl\", document.getElementById(\"SL2\").value);\n    } else {\n      params.append(\"sslcsl\", sslc_sec_lang);\n    }\n    if (document.getElementById(\"TM2\").value.length !== 0) {\n      params.append(\"sslctm\", document.getElementById(\"TM2\").value);\n    } else {\n      params.append(\"sslctm\", sslc_marks);\n    }\n    if (document.getElementById(\"OP2\").value.length !== 0) {\n      params.append(\"sslcop\", document.getElementById(\"OP2\").value);\n    } else {\n      params.append(\"sslcop\", sslc_percentage);\n    }\n    if (document.getElementById(\"NOA2\").value.length !== 0) {\n      params.append(\"sslcnoa\", document.getElementById(\"NOA2\").value);\n    } else {\n      params.append(\"sslcnoa\", sslc_attempts);\n    }\n    if (document.getElementById(\"FN\").value.length !== 0) {\n      params.append(\"fana\", document.getElementById(\"FN\").value);\n    } else {\n      params.append(\"fana\", father_name);\n    }\n    if (document.getElementById(\"FAQUA\").value.length !== 0) {\n      params.append(\"faq\", document.getElementById(\"FAQUA\").value);\n    } else {\n      params.append(\"faq\", father_qualification);\n    }\n    if (document.getElementById(\"FAOC\").value.length !== 0) {\n      params.append(\"faocc\", document.getElementById(\"FAOC\").value);\n    } else {\n      params.append(\"faocc\", father_occupation);\n    }\n    if (document.getElementById(\"FAOFAD\").value.length !== 0) {\n      params.append(\"faoff\", document.getElementById(\"FAOFAD\").value);\n    } else {\n      params.append(\"faoff\", father_office_address);\n    }\n    if (document.getElementById(\"FAANIN\").value.length !== 0) {\n      params.append(\"fainc\", document.getElementById(\"FAANIN\").value);\n    } else {\n      params.append(\"fainc\", father_annual_income);\n    }\n    if (document.getElementById(\"FAMOB\").value.length !== 0) {\n      params.append(\"fano\", document.getElementById(\"FAMOB\").value);\n    } else {\n      params.append(\"fano\", father_mob_no);\n    }\n    if (document.getElementById(\"FAEM\").value.length !== 0) {\n      params.append(\"famail\", document.getElementById(\"FAEM\").value);\n    } else {\n      params.append(\"famail\", father_email);\n    }\n    if (document.getElementById(\"GANA\").value.length !== 0) {\n      params.append(\"gname\", document.getElementById(\"GANA\").value);\n    } else {\n      params.append(\"gname\", guardian_name);\n    }\n    if (document.getElementById(\"GAQUA\").value.length !== 0) {\n      params.append(\"gqua\", document.getElementById(\"GAQUA\").value);\n    } else {\n      params.append(\"gqua\", guardian_qualification);\n    }\n    if (document.getElementById(\"GAOCC\").value.length !== 0) {\n      params.append(\"gocc\", document.getElementById(\"GAOCC\").value);\n    } else {\n      params.append(\"gocc\", guardian_occupation);\n    }\n    if (document.getElementById(\"GAOFAD\").value.length !== 0) {\n      params.append(\"goff\", document.getElementById(\"GAOFAD\").value);\n    } else {\n      params.append(\"goff\", guardian_office_address);\n    }\n    if (document.getElementById(\"GAANIN\").value.length !== 0) {\n      params.append(\"ginc\", document.getElementById(\"GAANIN\").value);\n    } else {\n      params.append(\"ginc\", guardian_annual_income);\n    }\n    if (document.getElementById(\"GAMOB\").value.length !== 0) {\n      params.append(\"gmob\", document.getElementById(\"GAMOB\").value);\n    } else {\n      params.append(\"gmob\", guardian_mob_no);\n    }\n    if (document.getElementById(\"GAEM\").value.length !== 0) {\n      params.append(\"gamail\", document.getElementById(\"GAEM\").value);\n    } else {\n      params.append(\"gamail\", guardian_email);\n    }\n    if (document.getElementById(\"MN\").value.length !== 0) {\n      params.append(\"mname\", document.getElementById(\"MN\").value);\n    } else {\n      params.append(\"mname\", mother_name);\n    }\n    if (document.getElementById(\"MOQUA\").value.length !== 0) {\n      params.append(\"mqua\", document.getElementById(\"MOQUA\").value);\n    } else {\n      params.append(\"mqua\", mother_qualification);\n    }\n    if (document.getElementById(\"MOOC\").value.length !== 0) {\n      params.append(\"moocc\", document.getElementById(\"MOOC\").value);\n    } else {\n      params.append(\"moocc\", mother_occupation);\n    }\n    if (document.getElementById(\"MOOFAD\").value.length !== 0) {\n      params.append(\"moff\", document.getElementById(\"MOOFAD\").value);\n    } else {\n      params.append(\"moff\", mother_office_address);\n    }\n    if (document.getElementById(\"MOANIN\").value.length !== 0) {\n      params.append(\"minc\", document.getElementById(\"MOANIN\").value);\n    } else {\n      params.append(\"minc\", mother_annual_income);\n    }\n    if (document.getElementById(\"MOMOB\").value.length !== 0) {\n      params.append(\"mno\", document.getElementById(\"MOMOB\").value);\n    } else {\n      params.append(\"mno\", mother_mob_no);\n    }\n    if (document.getElementById(\"MOEM\").value.length !== 0) {\n      params.append(\"memail\", document.getElementById(\"MOEM\").value);\n    } else {\n      params.append(\"memail\", mother_email);\n    }\n    if (document.getElementById(\"NOSIB\").value.length !== 0) {\n      params.append(\"nsib\", document.getElementById(\"NOSIB\").value);\n    } else {\n      params.append(\"nsib\", no_of_siblings);\n    }\n    if (document.getElementById(\"NASIB\").value.length !== 0) {\n      params.append(\"nmsib\", document.getElementById(\"NASIB\").value);\n    } else {\n      params.append(\"nmsib\", name_siblings);\n    }\n    if (document.getElementById(\"QUASIB\").value.length !== 0) {\n      params.append(\"qsib\", document.getElementById(\"QUASIB\").value);\n    } else {\n      params.append(\"qsib\", qualification_siblings);\n    }\n    if (document.getElementById(\"OCCSIB\").value.length !== 0) {\n      params.append(\"siboc\", document.getElementById(\"OCCSIB\").value);\n    } else {\n      params.append(\"siboc\", occupation_siblings);\n    }\n    if (document.getElementById(\"ALUMNILL\").value.length !== 0) {\n      params.append(\"llalumni\", document.getElementById(\"ALUMNILL\").value);\n    } else {\n      params.append(\"llalumni\", alumni_licet_loyola_yn);\n    }\n    if (document.getElementById(\"APPNO\").value.length !== 0) {\n      params.append(\"apno\", document.getElementById(\"APPNO\").value);\n    } else {\n      params.append(\"apno\", application_no);\n    }\n    if (document.getElementById(\"DOA\").value.length !== 0) {\n      params.append(\"doad\", document.getElementById(\"DOA\").value);\n    } else {\n      params.append(\"doad\", date_of_ad);\n    }\n    if (document.getElementById(\"QUOTA\").value.length !== 0) {\n      params.append(\"qta\", document.getElementById(\"QUOTA\").value);\n    } else {\n      params.append(\"qta\", quota);\n    }\n    if (document.getElementById(\"RELA\").value.length !== 0) {\n      params.append(\"regla\", document.getElementById(\"RELA\").value);\n    } else {\n      params.append(\"regla\", regular_lateral_rl);\n    }\n    if (document.getElementById(\"DAHO\").value.length !== 0) {\n      params.append(\"dayho\", document.getElementById(\"DAHO\").value);\n    } else {\n      params.append(\"dayho\", dayschl_hosteller_dh);\n    }\n    if (document.getElementById(\"SCHONM\").value.length !== 0) {\n      params.append(\"scname\", document.getElementById(\"SCHONM\").value);\n    } else {\n      params.append(\"scname\", scholarship_name);\n    }\n    if (document.getElementById(\"SCHOAMT\").value.length !== 0) {\n      params.append(\"scamt\", document.getElementById(\"SCHOAMT\").value);\n    } else {\n      params.append(\"scamt\", scholarship_amount);\n    }\n    if (document.getElementById(\"FIRGRA\").value.length !== 0) {\n      params.append(\"firstgra\", document.getElementById(\"FIRGRA\").value);\n    } else {\n      params.append(\"firstgra\", first_graduate_yn);\n    }\n    if (document.getElementById(\"ECOBK\").value.length !== 0) {\n      params.append(\"ecoback\", document.getElementById(\"ECOBK\").value);\n    } else {\n      params.append(\"ecoback\", eco_backward_yn);\n    }\n    if (document.getElementById(\"PROLAN\").value.length !== 0) {\n      params.append(\"proglan\", document.getElementById(\"PROLAN\").value);\n    } else {\n      params.append(\"proglan\", programming_languages);\n    }\n    if (document.getElementById(\"SOFTPRO\").value.length !== 0) {\n      params.append(\"sopro\", document.getElementById(\"SOFTPRO\").value);\n    } else {\n      params.append(\"sopro\", software_proficiency);\n    }\n    if (document.getElementById(\"DEPRELPRO\").value.length !== 0) {\n      params.append(\"deprel\", document.getElementById(\"DEPRELPRO\").value);\n    } else {\n      params.append(\"deprel\", dept_rel_proficiency);\n    }\n    if (document.getElementById(\"CERTI\").value.length !== 0) {\n      params.append(\"cer\", document.getElementById(\"CERTI\").value);\n    } else {\n      params.append(\"cer\", certifications);\n    }\n    if (document.getElementById(\"OTHERTECSKILL\").value.length !== 0) {\n      params.append(\"ots\", document.getElementById(\"OTHERTECSKILL\").value);\n    } else {\n      params.append(\"ots\", other_skills);\n    }\n    if (document.getElementById(\"APANA\").value.length !== 0) {\n      params.append(\"aptana\", document.getElementById(\"APANA\").value);\n    } else {\n      params.append(\"aptana\", aptitude_analytical_skills);\n    }\n    if (document.getElementById(\"COMSKILL\").value.length !== 0) {\n      params.append(\"cskill\", document.getElementById(\"COMSKILL\").value);\n    } else {\n      params.append(\"cskill\", communication_skills);\n    }\n    if (document.getElementById(\"SOMEEX\").value.length !== 0) {\n      params.append(\"sox\", document.getElementById(\"SOMEEX\").value);\n    } else {\n      params.append(\"sox\", social_media_exposure);\n    }\n    if (document.getElementById(\"LEADSKILL\").value.length !== 0) {\n      params.append(\"lskill\", document.getElementById(\"LEADSKILL\").value);\n    } else {\n      params.append(\"lskill\", leadership_skills);\n    }\n    if (document.getElementById(\"OINTSKILL\").value.length !== 0) {\n      params.append(\"oskill\", document.getElementById(\"OINTSKILL\").value);\n    } else {\n      params.append(\"oskill\", other_interpersonal_skills);\n    }\n    if (document.getElementById(\"SHOGOAL\").value.length !== 0) {\n      params.append(\"sgoal\", document.getElementById(\"SHOGOAL\").value);\n    } else {\n      params.append(\"sgoal\", short_term_goal);\n    }\n    if (document.getElementById(\"LONGGOAL\").value.length !== 0) {\n      params.append(\"lgoal\", document.getElementById(\"LONGGOAL\").value);\n    } else {\n      params.append(\"lgoal\", long_term_goal);\n    }\n    if (document.getElementById(\"MEMBNAME\").value.length !== 0) {\n      params.append(\"membn\", document.getElementById(\"MEMBNAME\").value);\n    } else {\n      params.append(\"membn\", membership_name);\n    }\n    if (document.getElementById(\"MEMBNO\").value.length !== 0) {\n      params.append(\"membnum\", document.getElementById(\"MEMBNO\").value);\n    } else {\n      params.append(\"membnum\", membership_no);\n    }\n    if (document.getElementById(\"MEMBDUR\").value.length !== 0) {\n      params.append(\"memd\", document.getElementById(\"MEMBDUR\").value);\n    } else {\n      params.append(\"memd\", membership_duration);\n    }\n\n    axios.post(server_URL + \"GeneralDataEdit\", params);\n    window.location.href = URL + \"Class-Advisor#/admin1/GeneralInformationdata\";\n  }\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"500px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={4}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Student Name\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"NID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={sname}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Roll No\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Text\n                            ms=\"1em\"\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            {roll_no}\n                          </Text>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Register No\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"REID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={reg_no}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Gender\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"SID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={gender}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Date Of Birth\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"DOBID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={dob}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Department\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"DEPT\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={dept}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Batch\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"BATCH\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={batch}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Nationality\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"NATIONID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={nationality}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Religion\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"RELIGIONID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={religion}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          If Catholic ,Parish?\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PARISHID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={if_catholic_parish}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Dalit Catholic\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"DALITID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={dalit_catholic_yn}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Community\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"COMMUNITYID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={community}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Blood Group\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"BLOODID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={blood_group}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Mother Tongue\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"MOTHERID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={mother_tongue}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Contact Number\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"CONTACTID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={contact_no}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Aadhar No\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"AADHARID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={aadhar_no}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Official Email ID\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Text\n                            ms=\"1em\"\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            {licet_email}\n                          </Text>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Personal Email ID\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PEREMID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={email}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Present Address\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PREADDRID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={present_address}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Permanent Address\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PERADDRID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={permanent_address}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          LANGUAGES KNOWN\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"LANKNOW\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={lang_know}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          PAN\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PAN\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={pan}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name of the School\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOS1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_school_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Board\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"BOARD1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_board}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Medium Of Instruction\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOI1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_medium}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Second Language\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SL1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_sec_lang}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Group\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GROUP1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_group}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Total Marks\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"TM1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_marks}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Overall Percentage\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OP1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_percentage}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Cut-Off Marks\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"COM1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_cutoff}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            No. of Attempts\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOA1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_attempts}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name of the School\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOS2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_school_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Board\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"BOARD2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_board}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Medium of Instruction\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOI2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_medium}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Second Language\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SL2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_sec_lang}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Total Marks\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"TM2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_marks}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Overall Percentage\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OP2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_percentage}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            No. of Attempts\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOA2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_attempts}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAQUA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_qualification}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAOC\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_occupation}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's office address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAOFAD\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_office_address}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's annual income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAANIN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_annual_income}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's mobile number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAMOB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_mob_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's email\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAEM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_email}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GANA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAQUA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_qualification}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAOCC\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_occupation}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian office address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAOFAD\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_office_address}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian annual income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAANIN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_annual_income}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian mobile number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAMOB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_mob_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian email id\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAEM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_email}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mothers's Qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOQUA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_qualification}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOOC\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_occupation}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's office address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOOFAD\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_office_address}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's annual income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOANIN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_annual_income}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's mobile number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOMOB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_mob_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Email\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOEM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_email}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Number Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOSIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={no_of_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NASIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={name_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Qualification Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"QUASIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={qualification_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Occupation Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OCCSIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={occupation_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Alumni Of LICET Or LOYOLA\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"ALUMNILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={alumni_licet_loyola_yn}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Application Number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"APPNO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={application_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Date of Admission\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DOA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={date_of_ad}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Quota\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"QUOTA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={quota}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Regular/Lateral Entry\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"RELA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={regular_lateral_rl}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Day Scholar/Hosteller\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DAHO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={dayschl_hosteller_dh}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Scholarship Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SCHONM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={scholarship_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Scholarship Amount\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SCHOAMT\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={scholarship_amount}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            First Graduate\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FIRGRA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={first_graduate_yn}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Economically Backward(Annual Income Of Parents Less\n                            than 1LPA)\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"ECOBK\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={eco_backward_yn}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical and Non Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Programming Languages\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"PROLAN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={programming_languages}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Software Proficiency\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SOFTPRO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={software_proficiency}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Department Related Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DEPRELPRO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={dept_rel_proficiency}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Certifications\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"CERTI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={certifications}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Other Technical Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OTHERTECSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={other_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Aptitude/Analytical Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"APANA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={aptitude_analytical_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Communication Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"COMSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={communication_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Social Media Exposure\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SOMEEX\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={social_media_exposure}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Leadership Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"LEADSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={leadership_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Other Interpersonal Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OINTSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={other_interpersonal_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals And Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Short Term Goals\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SHOGOAL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={short_term_goal}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Long Term Goals\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"LONGGOAL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={long_term_goal}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEMBNAME\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={membership_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership Number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEMBNO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={membership_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership Duration\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEMBDUR\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={membership_duration}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n      <SimpleGrid pt=\"1.5rem\" columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={onOpen}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Save\n            </Button>\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Edit Details</ModalHeader>\n                <ModalBody>Are you sure ?</ModalBody>\n                <ModalFooter>\n                  <Button\n                    colorScheme=\"blue\"\n                    mr={3}\n                    onClick={() => {\n                      funedit();\n                      onClose();\n                      toast({\n                        title: \"Student Information Edited Successfully\",\n                        status: \"success\",\n                        duration: 9000,\n                        position: \"top\",\n                        isClosable: true,\n                      });\n                    }}\n                  >\n                    Submit\n                  </Button>\n                  <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                    Close\n                  </Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={() => {\n                window.location.href =\n                  URL + \"Class-Advisor#/admin1/GeneralInformationdata\";\n              }}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Cancel\n            </Button>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationDataEdit;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Button,\n  FormControl,\n  SimpleGrid,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  useToast,\n  ModalCloseButton,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationDataEdit(props) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  // Toast var\n  const toast = useToast();\n\n  var roll_no,\n    reg_no,\n    sname,\n    aadhar_no,\n    email,\n    licet_email,\n    batch,\n    dept,\n    quota,\n    gender,\n    dob,\n    nationality,\n    contact_no,\n    father_name,\n    mother_name,\n    father_mob_no,\n    mother_mob_no,\n    community,\n    religion,\n    if_catholic_parish,\n    dalit_catholic_yn,\n    present_address,\n    permanent_address,\n    blood_group,\n    mother_tongue,\n    lang_know,\n    pan,\n    father_qualification,\n    mother_qualification,\n    father_occupation,\n    mother_occupation,\n    father_office_address,\n    mother_office_address,\n    father_annual_income,\n    mother_annual_income,\n    father_email,\n    mother_email,\n    guardian_name,\n    guardian_qualification,\n    guardian_occupation,\n    guardian_office_address,\n    guardian_annual_income,\n    guardian_mob_no,\n    guardian_email,\n    no_of_siblings,\n    name_siblings,\n    qualification_siblings,\n    occupation_siblings,\n    alumni_licet_loyola_yn,\n    application_no,\n    date_of_ad,\n    regular_lateral_rl,\n    dayschl_hosteller_dh,\n    scholarship_name,\n    scholarship_amount,\n    first_graduate_yn,\n    eco_backward_yn,\n    programming_languages,\n    software_proficiency,\n    dept_rel_proficiency,\n    certifications,\n    other_skills,\n    aptitude_analytical_skills,\n    communication_skills,\n    social_media_exposure,\n    leadership_skills,\n    other_interpersonal_skills,\n    short_term_goal,\n    long_term_goal,\n    membership_name,\n    membership_no,\n    membership_duration,\n    hse_school_name,\n    hse_board,\n    hse_medium,\n    hse_sec_lang,\n    hse_group,\n    hse_marks,\n    hse_percentage,\n    hse_cutoff,\n    hse_attempts,\n    sslc_school_name,\n    sslc_board,\n    sslc_medium,\n    sslc_sec_lang,\n    sslc_marks,\n    sslc_percentage,\n    sslc_attempts;\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n  axios.post(server_URL + \"GeneralData\", params).then((items) => {\n    setData(items.data);\n  });\n  data.map((item) => {\n    (sname = item.sname),\n      (roll_no = item.roll_no),\n      (reg_no = item.reg_no),\n      (gender = item.gender),\n      (dob = item.dob),\n      (dept = item.dept),\n      (batch = item.batch),\n      (nationality = item.nationality),\n      (religion = item.religion),\n      (if_catholic_parish = item.if_catholic_parish),\n      (dalit_catholic_yn = item.dalit_catholic_yn),\n      (community = item.community),\n      (blood_group = item.blood_group),\n      (mother_tongue = item.mother_tongue),\n      (contact_no = item.contact_no),\n      (aadhar_no = item.aadhar_no),\n      (licet_email = item.licet_email),\n      (email = item.email),\n      (present_address = item.present_address),\n      (permanent_address = item.permanent_address),\n      (lang_know = item.lang_know),\n      (pan = item.pan),\n      (hse_school_name = item.hse_school_name),\n      (hse_board = item.hse_board),\n      (hse_medium = item.hse_medium),\n      (hse_sec_lang = item.hse_sec_lang),\n      (hse_group = item.hse_group),\n      (hse_marks = item.hse_marks),\n      (hse_percentage = item.hse_percentage),\n      (hse_cutoff = item.hse_cutoff),\n      (hse_attempts = item.hse_attempts),\n      (sslc_school_name = item.sslc_school_name),\n      (sslc_board = item.sslc_board),\n      (sslc_medium = item.sslc_medium),\n      (sslc_sec_lang = item.sslc_sec_lang),\n      (sslc_marks = item.sslc_marks),\n      (sslc_percentage = item.sslc_percentage),\n      (sslc_attempts = item.sslc_attempts),\n      (father_name = item.father_name),\n      (father_qualification = item.father_office_address),\n      (father_occupation = item.father_occupation),\n      (father_office_address = item.father_office_address),\n      (father_annual_income = item.father_annual_income),\n      (father_mob_no = item.father_mob_no),\n      (father_email = item.father_email),\n      (guardian_name = item.guardian_name),\n      (guardian_qualification = item.guardian_qualification),\n      (guardian_occupation = item.guardian_occupation),\n      (guardian_office_address = item.guardian_office_address),\n      (guardian_annual_income = item.guardian_annual_income),\n      (guardian_mob_no = item.guardian_mob_no),\n      (guardian_email = item.guardian_email),\n      (mother_name = item.mother_name),\n      (mother_qualification = item.mother_qualification),\n      (mother_occupation = item.mother_occupation),\n      (mother_office_address = item.mother_office_address),\n      (mother_annual_income = item.mother_annual_income),\n      (mother_mob_no = item.mother_mob_no),\n      (mother_email = item.mother_email),\n      (no_of_siblings = item.no_of_siblings),\n      (name_siblings = item.name_siblings),\n      (qualification_siblings = item.qualification_siblings),\n      (occupation_siblings = item.occupation_siblings),\n      (alumni_licet_loyola_yn = item.alumni_licet_loyola_yn),\n      (application_no = item.application_no),\n      (date_of_ad = item.date_of_ad),\n      (quota = item.quota),\n      (regular_lateral_rl = item.regular_lateral_rl),\n      (dayschl_hosteller_dh = item.dayschl_hosteller_dh),\n      (scholarship_name = item.scholarship_name),\n      (scholarship_amount = item.scholarship_amount),\n      (first_graduate_yn = item.first_graduate_yn),\n      (eco_backward_yn = item.eco_backward_yn),\n      (programming_languages = item.programming_languages),\n      (software_proficiency = item.software_proficiency),\n      (dept_rel_proficiency = item.dept_rel_proficiency),\n      (certifications = item.certifications),\n      (other_skills = item.other_skills),\n      (aptitude_analytical_skills = item.aptitude_analytical_skills),\n      (communication_skills = item.communication_skills),\n      (social_media_exposure = item.social_media_exposure),\n      (leadership_skills = item.leadership_skills),\n      (other_interpersonal_skills = item.other_interpersonal_skills),\n      (short_term_goal = item.short_term_goal),\n      (long_term_goal = item.long_term_goal),\n      (membership_name = item.membership_name),\n      (membership_no = item.membership_no),\n      (membership_duration = item.membership_duration);\n  });\n  function funedit() {\n    let params = new URLSearchParams();\n\n    // Roll number\n    params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n\n    // Name\n    params.append(\n      \"name\",\n      document.getElementById(\"NID\").value.length !== 0\n        ? document.getElementById(\"NID\").value\n        : sname\n    );\n\n    // Register Number\n    params.append(\n      \"registerno\",\n      document.getElementById(\"REID\").value.length !== 0\n        ? document.getElementById(\"REID\").value\n        : reg_no\n    );\n\n    // sex\n    params.append(\n      \"sex\",\n      document.getElementById(\"SID\").value.length !== 0\n        ? document.getElementById(\"SID\").value\n        : reg_no\n    );\n\n    // Date of Birth\n    params.append(\n      \"dateofbirth\",\n      document.getElementById(\"DOBID\").value.length !== 0\n        ? document.getElementById(\"DOBID\").value\n        : dob\n    );\n\n    // Department\n    params.append(\n      \"dep\",\n      document.getElementById(\"DEPT\").value.length !== 0\n        ? document.getElementById(\"DEPT\").value\n        : dept\n    );\n\n    // Batch\n    params.append(\n      \"batt\",\n      document.getElementById(\"BATCH\").value.length !== 0\n        ? document.getElementById(\"BATCH\").value\n        : batch\n    );\n\n    // Nationality\n    params.append(\n      \"nationality\",\n      document.getElementById(\"NATIONID\").value.length !== 0\n        ? document.getElementById(\"NATIONID\").value\n        : nationality\n    );\n\n    // Religion\n    params.append(\n      \"religion\",\n      document.getElementById(\"RELIGIONID\").value.length !== 0\n        ? document.getElementById(\"RELIGIONID\").value\n        : religion\n    );\n\n    // Parish\n    params.append(\n      \"parish\",\n      document.getElementById(\"PARISHID\").value.length !== 0\n        ? document.getElementById(\"PARISHID\").value\n        : if_catholic_parish\n    );\n\n    // Dalit\n    params.append(\n      \"dalit\",\n      document.getElementById(\"DALITID\").value.length !== 0\n        ? document.getElementById(\"DALITID\").value\n        : dalit_catholic_yn\n    );\n\n    // Community\n    params.append(\n      \"community\",\n      document.getElementById(\"COMMUNITYID\").value.length !== 0\n        ? document.getElementById(\"COMMUNITYID\").value\n        : community\n    );\n\n    // BloodID\n    params.append(\n      \"bloodgroup\",\n      document.getElementById(\"BLOODID\").value.length !== 0\n        ? document.getElementById(\"BLOODID\").value\n        : blood_group\n    );\n\n    // Aadhar\n    params.append(\n      \"aadhar\",\n      document.getElementById(\"AADHARID\").value.length !== 0\n        ? document.getElementById(\"AADHARID\").value\n        : aadhar_no\n    );\n\n    // Mother Tongue\n    params.append(\n      \"mothertongue\",\n      document.getElementById(\"MOTHERID\").value.length !== 0\n        ? document.getElementById(\"MOTHERID\").value\n        : mother_tongue\n    );\n\n    // Contact\n    params.append(\n      \"contact\",\n      document.getElementById(\"CONTACTID\").value.length !== 0\n        ? document.getElementById(\"CONTACTID\").value\n        : contact_no\n    );\n\n    // PEREMAIL\n    params.append(\n      \"peremail\",\n      document.getElementById(\"PEREMID\").value.length !== 0\n        ? document.getElementById(\"PEREMID\").value\n        : email\n    );\n\n    // PREADDRID\n    params.append(\n      \"peraddr\",\n      document.getElementById(\"PREADDRID\").value.length !== 0\n        ? document.getElementById(\"PREADDRID\").value\n        : permanent_address\n    );\n\n    // Languages Known\n    params.append(\n      \"langknow\",\n      document.getElementById(\"LANKNOW\").value.length !== 0\n        ? document.getElementById(\"LANKNOW\").value\n        : permanent_address\n    );\n\n    if (document.getElementById(\"PAN\").value.length !== 0) {\n      params.append(\"pano\", document.getElementById(\"PAN\").value);\n    } else {\n      params.append(\"pano\", pan);\n    }\n\n    if (document.getElementById(\"NOS1\").value.length !== 0) {\n      params.append(\"hsenos\", document.getElementById(\"NOS1\").value);\n    } else {\n      params.append(\"hsenos\", hse_school_name);\n    }\n    if (document.getElementById(\"BOARD1\").value.length !== 0) {\n      params.append(\"hsebod\", document.getElementById(\"BOARD1\").value);\n    } else {\n      params.append(\"hsebod\", hse_board);\n    }\n    if (document.getElementById(\"MOI1\").value.length !== 0) {\n      params.append(\"hsemoi\", document.getElementById(\"MOI1\").value);\n    } else {\n      params.append(\"hsemoi\", hse_medium);\n    }\n    if (document.getElementById(\"SL1\").value.length !== 0) {\n      params.append(\"hsesl\", document.getElementById(\"SL1\").value);\n    } else {\n      params.append(\"hsesl\", hse_sec_lang);\n    }\n    if (document.getElementById(\"GROUP1\").value.length !== 0) {\n      params.append(\"hsegro\", document.getElementById(\"GROUP1\").value);\n    } else {\n      params.append(\"hsegro\", hse_group);\n    }\n    if (document.getElementById(\"TM1\").value.length !== 0) {\n      params.append(\"hsetm\", document.getElementById(\"TM1\").value);\n    } else {\n      params.append(\"hsetm\", hse_marks);\n    }\n    if (document.getElementById(\"OP1\").value.length !== 0) {\n      params.append(\"hseop\", document.getElementById(\"OP1\").value);\n    } else {\n      params.append(\"hseop\", hse_percentage);\n    }\n    if (document.getElementById(\"COM1\").value.length !== 0) {\n      params.append(\"hsecom\", document.getElementById(\"COM1\").value);\n    } else {\n      params.append(\"hsecom\", hse_cutoff);\n    }\n    if (document.getElementById(\"NOA1\").value.length !== 0) {\n      params.append(\"hsenoa\", document.getElementById(\"NOA1\").value);\n    } else {\n      params.append(\"hsenoa\", hse_attempts);\n    }\n\n    if (document.getElementById(\"NOS2\").value.length !== 0) {\n      params.append(\"sslcnos\", document.getElementById(\"NOS2\").value);\n    } else {\n      params.append(\"sslcnos\", sslc_school_name);\n    }\n    if (document.getElementById(\"BOARD2\").value.length !== 0) {\n      params.append(\"sslcbod\", document.getElementById(\"BOARD2\").value);\n    } else {\n      params.append(\"sslcbod\", sslc_board);\n    }\n    if (document.getElementById(\"MOI2\").value.length !== 0) {\n      params.append(\"sslcmoi\", document.getElementById(\"MOI2\").value);\n    } else {\n      params.append(\"sslcmoi\", sslc_medium);\n    }\n    if (document.getElementById(\"SL2\").value.length !== 0) {\n      params.append(\"sslcsl\", document.getElementById(\"SL2\").value);\n    } else {\n      params.append(\"sslcsl\", sslc_sec_lang);\n    }\n    if (document.getElementById(\"TM2\").value.length !== 0) {\n      params.append(\"sslctm\", document.getElementById(\"TM2\").value);\n    } else {\n      params.append(\"sslctm\", sslc_marks);\n    }\n    if (document.getElementById(\"OP2\").value.length !== 0) {\n      params.append(\"sslcop\", document.getElementById(\"OP2\").value);\n    } else {\n      params.append(\"sslcop\", sslc_percentage);\n    }\n    if (document.getElementById(\"NOA2\").value.length !== 0) {\n      params.append(\"sslcnoa\", document.getElementById(\"NOA2\").value);\n    } else {\n      params.append(\"sslcnoa\", sslc_attempts);\n    }\n    if (document.getElementById(\"FN\").value.length !== 0) {\n      params.append(\"fana\", document.getElementById(\"FN\").value);\n    } else {\n      params.append(\"fana\", father_name);\n    }\n    if (document.getElementById(\"FAQUA\").value.length !== 0) {\n      params.append(\"faq\", document.getElementById(\"FAQUA\").value);\n    } else {\n      params.append(\"faq\", father_qualification);\n    }\n    if (document.getElementById(\"FAOC\").value.length !== 0) {\n      params.append(\"faocc\", document.getElementById(\"FAOC\").value);\n    } else {\n      params.append(\"faocc\", father_occupation);\n    }\n    if (document.getElementById(\"FAOFAD\").value.length !== 0) {\n      params.append(\"faoff\", document.getElementById(\"FAOFAD\").value);\n    } else {\n      params.append(\"faoff\", father_office_address);\n    }\n    if (document.getElementById(\"FAANIN\").value.length !== 0) {\n      params.append(\"fainc\", document.getElementById(\"FAANIN\").value);\n    } else {\n      params.append(\"fainc\", father_annual_income);\n    }\n    if (document.getElementById(\"FAMOB\").value.length !== 0) {\n      params.append(\"fano\", document.getElementById(\"FAMOB\").value);\n    } else {\n      params.append(\"fano\", father_mob_no);\n    }\n    if (document.getElementById(\"FAEM\").value.length !== 0) {\n      params.append(\"famail\", document.getElementById(\"FAEM\").value);\n    } else {\n      params.append(\"famail\", father_email);\n    }\n    if (document.getElementById(\"GANA\").value.length !== 0) {\n      params.append(\"gname\", document.getElementById(\"GANA\").value);\n    } else {\n      params.append(\"gname\", guardian_name);\n    }\n    if (document.getElementById(\"GAQUA\").value.length !== 0) {\n      params.append(\"gqua\", document.getElementById(\"GAQUA\").value);\n    } else {\n      params.append(\"gqua\", guardian_qualification);\n    }\n    if (document.getElementById(\"GAOCC\").value.length !== 0) {\n      params.append(\"gocc\", document.getElementById(\"GAOCC\").value);\n    } else {\n      params.append(\"gocc\", guardian_occupation);\n    }\n    if (document.getElementById(\"GAOFAD\").value.length !== 0) {\n      params.append(\"goff\", document.getElementById(\"GAOFAD\").value);\n    } else {\n      params.append(\"goff\", guardian_office_address);\n    }\n    if (document.getElementById(\"GAANIN\").value.length !== 0) {\n      params.append(\"ginc\", document.getElementById(\"GAANIN\").value);\n    } else {\n      params.append(\"ginc\", guardian_annual_income);\n    }\n    if (document.getElementById(\"GAMOB\").value.length !== 0) {\n      params.append(\"gmob\", document.getElementById(\"GAMOB\").value);\n    } else {\n      params.append(\"gmob\", guardian_mob_no);\n    }\n    if (document.getElementById(\"GAEM\").value.length !== 0) {\n      params.append(\"gamail\", document.getElementById(\"GAEM\").value);\n    } else {\n      params.append(\"gamail\", guardian_email);\n    }\n    if (document.getElementById(\"MN\").value.length !== 0) {\n      params.append(\"mname\", document.getElementById(\"MN\").value);\n    } else {\n      params.append(\"mname\", mother_name);\n    }\n    if (document.getElementById(\"MOQUA\").value.length !== 0) {\n      params.append(\"mqua\", document.getElementById(\"MOQUA\").value);\n    } else {\n      params.append(\"mqua\", mother_qualification);\n    }\n    if (document.getElementById(\"MOOC\").value.length !== 0) {\n      params.append(\"moocc\", document.getElementById(\"MOOC\").value);\n    } else {\n      params.append(\"moocc\", mother_occupation);\n    }\n    if (document.getElementById(\"MOOFAD\").value.length !== 0) {\n      params.append(\"moff\", document.getElementById(\"MOOFAD\").value);\n    } else {\n      params.append(\"moff\", mother_office_address);\n    }\n    if (document.getElementById(\"MOANIN\").value.length !== 0) {\n      params.append(\"minc\", document.getElementById(\"MOANIN\").value);\n    } else {\n      params.append(\"minc\", mother_annual_income);\n    }\n    if (document.getElementById(\"MOMOB\").value.length !== 0) {\n      params.append(\"mno\", document.getElementById(\"MOMOB\").value);\n    } else {\n      params.append(\"mno\", mother_mob_no);\n    }\n    if (document.getElementById(\"MOEM\").value.length !== 0) {\n      params.append(\"memail\", document.getElementById(\"MOEM\").value);\n    } else {\n      params.append(\"memail\", mother_email);\n    }\n    if (document.getElementById(\"NOSIB\").value.length !== 0) {\n      params.append(\"nsib\", document.getElementById(\"NOSIB\").value);\n    } else {\n      params.append(\"nsib\", no_of_siblings);\n    }\n    if (document.getElementById(\"NASIB\").value.length !== 0) {\n      params.append(\"nmsib\", document.getElementById(\"NASIB\").value);\n    } else {\n      params.append(\"nmsib\", name_siblings);\n    }\n    if (document.getElementById(\"QUASIB\").value.length !== 0) {\n      params.append(\"qsib\", document.getElementById(\"QUASIB\").value);\n    } else {\n      params.append(\"qsib\", qualification_siblings);\n    }\n    if (document.getElementById(\"OCCSIB\").value.length !== 0) {\n      params.append(\"siboc\", document.getElementById(\"OCCSIB\").value);\n    } else {\n      params.append(\"siboc\", occupation_siblings);\n    }\n    if (document.getElementById(\"ALUMNILL\").value.length !== 0) {\n      params.append(\"llalumni\", document.getElementById(\"ALUMNILL\").value);\n    } else {\n      params.append(\"llalumni\", alumni_licet_loyola_yn);\n    }\n    if (document.getElementById(\"APPNO\").value.length !== 0) {\n      params.append(\"apno\", document.getElementById(\"APPNO\").value);\n    } else {\n      params.append(\"apno\", application_no);\n    }\n    if (document.getElementById(\"DOA\").value.length !== 0) {\n      params.append(\"doad\", document.getElementById(\"DOA\").value);\n    } else {\n      params.append(\"doad\", date_of_ad);\n    }\n    if (document.getElementById(\"QUOTA\").value.length !== 0) {\n      params.append(\"qta\", document.getElementById(\"QUOTA\").value);\n    } else {\n      params.append(\"qta\", quota);\n    }\n    if (document.getElementById(\"RELA\").value.length !== 0) {\n      params.append(\"regla\", document.getElementById(\"RELA\").value);\n    } else {\n      params.append(\"regla\", regular_lateral_rl);\n    }\n    if (document.getElementById(\"DAHO\").value.length !== 0) {\n      params.append(\"dayho\", document.getElementById(\"DAHO\").value);\n    } else {\n      params.append(\"dayho\", dayschl_hosteller_dh);\n    }\n    if (document.getElementById(\"SCHONM\").value.length !== 0) {\n      params.append(\"scname\", document.getElementById(\"SCHONM\").value);\n    } else {\n      params.append(\"scname\", scholarship_name);\n    }\n    if (document.getElementById(\"SCHOAMT\").value.length !== 0) {\n      params.append(\"scamt\", document.getElementById(\"SCHOAMT\").value);\n    } else {\n      params.append(\"scamt\", scholarship_amount);\n    }\n    if (document.getElementById(\"FIRGRA\").value.length !== 0) {\n      params.append(\"firstgra\", document.getElementById(\"FIRGRA\").value);\n    } else {\n      params.append(\"firstgra\", first_graduate_yn);\n    }\n    if (document.getElementById(\"ECOBK\").value.length !== 0) {\n      params.append(\"ecoback\", document.getElementById(\"ECOBK\").value);\n    } else {\n      params.append(\"ecoback\", eco_backward_yn);\n    }\n    if (document.getElementById(\"PROLAN\").value.length !== 0) {\n      params.append(\"proglan\", document.getElementById(\"PROLAN\").value);\n    } else {\n      params.append(\"proglan\", programming_languages);\n    }\n    if (document.getElementById(\"SOFTPRO\").value.length !== 0) {\n      params.append(\"sopro\", document.getElementById(\"SOFTPRO\").value);\n    } else {\n      params.append(\"sopro\", software_proficiency);\n    }\n    if (document.getElementById(\"DEPRELPRO\").value.length !== 0) {\n      params.append(\"deprel\", document.getElementById(\"DEPRELPRO\").value);\n    } else {\n      params.append(\"deprel\", dept_rel_proficiency);\n    }\n    if (document.getElementById(\"CERTI\").value.length !== 0) {\n      params.append(\"cer\", document.getElementById(\"CERTI\").value);\n    } else {\n      params.append(\"cer\", certifications);\n    }\n    if (document.getElementById(\"OTHERTECSKILL\").value.length !== 0) {\n      params.append(\"ots\", document.getElementById(\"OTHERTECSKILL\").value);\n    } else {\n      params.append(\"ots\", other_skills);\n    }\n    if (document.getElementById(\"APANA\").value.length !== 0) {\n      params.append(\"aptana\", document.getElementById(\"APANA\").value);\n    } else {\n      params.append(\"aptana\", aptitude_analytical_skills);\n    }\n    if (document.getElementById(\"COMSKILL\").value.length !== 0) {\n      params.append(\"cskill\", document.getElementById(\"COMSKILL\").value);\n    } else {\n      params.append(\"cskill\", communication_skills);\n    }\n    if (document.getElementById(\"SOMEEX\").value.length !== 0) {\n      params.append(\"sox\", document.getElementById(\"SOMEEX\").value);\n    } else {\n      params.append(\"sox\", social_media_exposure);\n    }\n    if (document.getElementById(\"LEADSKILL\").value.length !== 0) {\n      params.append(\"lskill\", document.getElementById(\"LEADSKILL\").value);\n    } else {\n      params.append(\"lskill\", leadership_skills);\n    }\n    if (document.getElementById(\"OINTSKILL\").value.length !== 0) {\n      params.append(\"oskill\", document.getElementById(\"OINTSKILL\").value);\n    } else {\n      params.append(\"oskill\", other_interpersonal_skills);\n    }\n    if (document.getElementById(\"SHOGOAL\").value.length !== 0) {\n      params.append(\"sgoal\", document.getElementById(\"SHOGOAL\").value);\n    } else {\n      params.append(\"sgoal\", short_term_goal);\n    }\n    if (document.getElementById(\"LONGGOAL\").value.length !== 0) {\n      params.append(\"lgoal\", document.getElementById(\"LONGGOAL\").value);\n    } else {\n      params.append(\"lgoal\", long_term_goal);\n    }\n    if (document.getElementById(\"MEMBNAME\").value.length !== 0) {\n      params.append(\"membn\", document.getElementById(\"MEMBNAME\").value);\n    } else {\n      params.append(\"membn\", membership_name);\n    }\n    if (document.getElementById(\"MEMBNO\").value.length !== 0) {\n      params.append(\"membnum\", document.getElementById(\"MEMBNO\").value);\n    } else {\n      params.append(\"membnum\", membership_no);\n    }\n    if (document.getElementById(\"MEMBDUR\").value.length !== 0) {\n      params.append(\"memd\", document.getElementById(\"MEMBDUR\").value);\n    } else {\n      params.append(\"memd\", membership_duration);\n    }\n\n    axios.post(server_URL + \"GeneralDataEdit\", params);\n    window.location.href = URL + \"Admin#/admin4/GeneralInformationdata\";\n  }\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"500px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={4}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Student Name\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"NID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={sname}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Roll No\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Text\n                            ms=\"1em\"\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            {roll_no}\n                          </Text>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Register No\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"REID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={reg_no}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Gender\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"SID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={gender}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Date Of Birth\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"DOBID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={dob}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Department\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"DEPT\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={dept}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Batch\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"BATCH\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={batch}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Nationality\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"NATIONID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={nationality}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Religion\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"RELIGIONID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={religion}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          If Catholic ,Parish?\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PARISHID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={if_catholic_parish}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Dalit Catholic\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"DALITID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={dalit_catholic_yn}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Community\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"COMMUNITYID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={community}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Blood Group\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"BLOODID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={blood_group}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Mother Tongue\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"MOTHERID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={mother_tongue}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Contact Number\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"CONTACTID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={contact_no}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Aadhar No\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"AADHARID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={aadhar_no}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Official Email ID\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Text\n                            ms=\"1em\"\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            {licet_email}\n                          </Text>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Personal Email ID\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PEREMID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={email}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Present Address\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PREADDRID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={present_address}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          Permanent Address\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PERADDRID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={permanent_address}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          LANGUAGES KNOWN\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"LANKNOW\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={lang_know}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          PAN\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"40em\"\n                            id=\"PAN\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            defaultValue={pan}\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name of the School\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOS1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_school_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Board\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"BOARD1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_board}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Medium Of Instruction\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOI1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_medium}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Second Language\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SL1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_sec_lang}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Group\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GROUP1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_group}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Total Marks\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"TM1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_marks}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Overall Percentage\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OP1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_percentage}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Cut-Off Marks\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"COM1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_cutoff}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            No. of Attempts\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOA1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={hse_attempts}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name of the School\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOS2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_school_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Board\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"BOARD2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_board}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Medium of Instruction\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOI2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_medium}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Second Language\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SL2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_sec_lang}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Total Marks\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"TM2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_marks}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Overall Percentage\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OP2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_percentage}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            No. of Attempts\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOA2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={sslc_attempts}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAQUA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_qualification}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAOC\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_occupation}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's office address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAOFAD\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_office_address}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's annual income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAANIN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_annual_income}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's mobile number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAMOB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_mob_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's email\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAEM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={father_email}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GANA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAQUA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_qualification}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAOCC\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_occupation}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian office address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAOFAD\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_office_address}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian annual income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAANIN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_annual_income}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian mobile number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAMOB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_mob_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian email id\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAEM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={guardian_email}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mothers's Qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOQUA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_qualification}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOOC\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_occupation}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's office address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOOFAD\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_office_address}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's annual income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOANIN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_annual_income}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's mobile number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOMOB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_mob_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Email\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOEM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={mother_email}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Number Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOSIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={no_of_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NASIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={name_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Qualification Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"QUASIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={qualification_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Occupation Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OCCSIB\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={occupation_siblings}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Alumni Of LICET Or LOYOLA\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"ALUMNILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={alumni_licet_loyola_yn}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Application Number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"APPNO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={application_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Date of Admission\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DOA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={date_of_ad}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Quota\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"QUOTA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={quota}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Regular/Lateral Entry\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"RELA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={regular_lateral_rl}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Day Scholar/Hosteller\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DAHO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={dayschl_hosteller_dh}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Scholarship Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SCHONM\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={scholarship_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Scholarship Amount\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SCHOAMT\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={scholarship_amount}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            First Graduate\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FIRGRA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={first_graduate_yn}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Economically Backward(Annual Income Of Parents Less\n                            than 1LPA)\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"ECOBK\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={eco_backward_yn}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical and Non Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Programming Languages\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"PROLAN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={programming_languages}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Software Proficiency\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SOFTPRO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={software_proficiency}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Department Related Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DEPRELPRO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={dept_rel_proficiency}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Certifications\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"CERTI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={certifications}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Other Technical Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OTHERTECSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={other_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Aptitude/Analytical Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"APANA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={aptitude_analytical_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Communication Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"COMSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={communication_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Social Media Exposure\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SOMEEX\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={social_media_exposure}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Leadership Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"LEADSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={leadership_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Other Interpersonal Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OINTSKILL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={other_interpersonal_skills}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals And Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Short Term Goals\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SHOGOAL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={short_term_goal}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Long Term Goals\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"LONGGOAL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={long_term_goal}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEMBNAME\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={membership_name}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership Number\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEMBNO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={membership_no}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership Duration\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEMBDUR\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              defaultValue={membership_duration}\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n      <SimpleGrid pt=\"1.5rem\" columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={onOpen}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Save\n            </Button>\n            <Modal isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Edit Details</ModalHeader>\n                <ModalBody>Are you sure ?</ModalBody>\n                <ModalFooter>\n                  <Button\n                    colorScheme=\"blue\"\n                    mr={3}\n                    onClick={() => {\n                      funedit();\n                      onClose();\n                      toast({\n                        title: \"Student Information Edited Successfully\",\n                        status: \"success\",\n                        duration: 9000,\n                        position: \"top\",\n                        isClosable: true,\n                      });\n                    }}\n                  >\n                    Submit\n                  </Button>\n                  <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n                    Close\n                  </Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n            <Button\n              onClick={() => {\n                window.location.href =\n                  URL + \"Admin#/admin4/GeneralInformationdata\";\n              }}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              width=\"100%\"\n            >\n              Cancel\n            </Button>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationDataEdit;\n","/** @format */\n\n//Student create page\n\nimport React from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Button,\n  FormControl,\n  FormLabel,\n  Select,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { Tooltip } from \"@chakra-ui/react\";\n\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction GeneralInformationdata() {\n  function logout() {\n    window.location.href = URL + \"Student#/auth/SignIn\";\n  }\n\n  function funinsert() {\n    let params = new URLSearchParams();\n    params.append(\"rollno\", document.getElementById(\"RID\").value);\n    params.append(\"registerno\", document.getElementById(\"REID\").value);\n    params.append(\"name\", document.getElementById(\"NID\").value);\n    params.append(\"aadhar\", document.getElementById(\"AADHARID\").value);\n    params.append(\"peremail\", document.getElementById(\"PEREMID\").value);\n    params.append(\"offemail\", document.getElementById(\"OFFEMID\").value);\n    params.append(\"batch\", document.getElementById(\"BATCH\").value);\n    params.append(\"department\", document.getElementById(\"DEPT\").value);\n    params.append(\"quo\", document.getElementById(\"QUO\").value);\n    params.append(\"sex\", document.getElementById(\"SID\").value);\n    params.append(\"dateofbirth\", document.getElementById(\"DOBID\").value);\n    params.append(\"nationality\", document.getElementById(\"NATIONID\").value);\n    params.append(\"contact\", document.getElementById(\"CONTACTID\").value);\n\n    params.append(\"religion\", document.getElementById(\"RELIGIONID\").value);\n    params.append(\"parish\", document.getElementById(\"PARISHID\").value);\n    params.append(\"dalit\", document.getElementById(\"DALITID\").value);\n    params.append(\"community\", document.getElementById(\"COMMUNITYID\").value);\n    params.append(\"bloodgroup\", document.getElementById(\"BLOODID\").value);\n    params.append(\"mothertongue\", document.getElementById(\"MOTHERID\").value);\n\n    params.append(\"preaddr\", document.getElementById(\"PREADDRID\").value);\n    params.append(\"peraddr\", document.getElementById(\"PERADDRID\").value);\n    params.append(\"langknown\", document.getElementById(\"LANKNO\").value);\n    params.append(\"pan\", document.getElementById(\"PAN\").value);\n\n    params.append(\"hsenos\", document.getElementById(\"NOS1\").value);\n    params.append(\"hsebod\", document.getElementById(\"BOARD1\").value);\n    params.append(\"hsemoi\", document.getElementById(\"MOI1\").value);\n    params.append(\"hsesl\", document.getElementById(\"SL1\").value);\n    params.append(\"hsegro\", document.getElementById(\"GROUP1\").value);\n    params.append(\"hsetm\", document.getElementById(\"TM1\").value);\n    params.append(\"hseop\", document.getElementById(\"OP1\").value);\n    params.append(\"hsecom\", document.getElementById(\"COM1\").value);\n    params.append(\"hsenoa\", document.getElementById(\"NOA1\").value);\n\n    params.append(\"sslcnos\", document.getElementById(\"NOS2\").value);\n    params.append(\"sslcbod\", document.getElementById(\"BOARD2\").value);\n    params.append(\"sslcmoi\", document.getElementById(\"MOI2\").value);\n    params.append(\"sslcsl\", document.getElementById(\"SL2\").value);\n    params.append(\"sslctm\", document.getElementById(\"TM2\").value);\n    params.append(\"sslcop\", document.getElementById(\"OP2\").value);\n    params.append(\"sslcnoa\", document.getElementById(\"NOA2\").value);\n\n    params.append(\"fanam\", document.getElementById(\"FN\").value);\n    params.append(\"faqul\", document.getElementById(\"FQ\").value);\n    params.append(\"faocc\", document.getElementById(\"FO\").value);\n    params.append(\"faoffadd\", document.getElementById(\"FOA\").value);\n    params.append(\"faanu\", document.getElementById(\"FAI\").value);\n    params.append(\"famob\", document.getElementById(\"FMN\").value);\n    params.append(\"faemail\", document.getElementById(\"FEI\").value);\n    params.append(\"gunam\", document.getElementById(\"GN\").value);\n    params.append(\"guqul\", document.getElementById(\"GQ\").value);\n    params.append(\"guocc\", document.getElementById(\"GO\").value);\n    params.append(\"guoffadd\", document.getElementById(\"GOA\").value);\n    params.append(\"guanu\", document.getElementById(\"GAI\").value);\n    params.append(\"gumob\", document.getElementById(\"GMN\").value);\n    params.append(\"guemail\", document.getElementById(\"GEI\").value);\n\n    params.append(\"manam\", document.getElementById(\"MN\").value);\n    params.append(\"maqul\", document.getElementById(\"MQ\").value);\n    params.append(\"maocc\", document.getElementById(\"MO\").value);\n    params.append(\"maoffadd\", document.getElementById(\"MOA\").value);\n    params.append(\"maanu\", document.getElementById(\"MAI\").value);\n    params.append(\"mamob\", document.getElementById(\"MMN\").value);\n    params.append(\"maemail\", document.getElementById(\"MEI\").value);\n    params.append(\"sibnos\", document.getElementById(\"NOS\").value);\n    params.append(\"sibnam\", document.getElementById(\"NAS\").value);\n    params.append(\"sibqul\", document.getElementById(\"QOS\").value);\n    params.append(\"sibocc\", document.getElementById(\"SO\").value);\n    params.append(\"sibalum\", document.getElementById(\"AOL\").value);\n\n    params.append(\"appno\", document.getElementById(\"AN\").value);\n    params.append(\"doa\", document.getElementById(\"DOA\").value);\n\n    params.append(\"reglat\", document.getElementById(\"RL\").value);\n    params.append(\"dayhos\", document.getElementById(\"DH\").value);\n\n    params.append(\"schlnam\", document.getElementById(\"SN\").value);\n    params.append(\"schlamt\", document.getElementById(\"SA\").value);\n    params.append(\"firgra\", document.getElementById(\"FG\").value);\n    params.append(\"ecoback\", document.getElementById(\"EB\").value);\n\n    params.append(\"prolan\", document.getElementById(\"PL\").value);\n    params.append(\"softpro\", document.getElementById(\"SP\").value);\n    params.append(\"deptrelpro\", document.getElementById(\"DRP\").value);\n    params.append(\"cert\", document.getElementById(\"CER\").value);\n    params.append(\"others\", document.getElementById(\"OS\").value);\n\n    params.append(\"anaapt\", document.getElementById(\"AAS\").value);\n    params.append(\"commu\", document.getElementById(\"CS\").value);\n    params.append(\"social\", document.getElementById(\"SME\").value);\n    params.append(\"lead\", document.getElementById(\"LS\").value);\n    params.append(\"otherins\", document.getElementById(\"OIS\").value);\n\n    params.append(\"stg\", document.getElementById(\"STG\").value);\n    params.append(\"ltg\", document.getElementById(\"LTG\").value);\n\n    params.append(\"promemnam\", document.getElementById(\"PMNO\").value);\n    params.append(\"promemno\", document.getElementById(\"PMNA\").value);\n    params.append(\"promemdur\", document.getElementById(\"DUR\").value);\n\n    axios.post(server_URL + \"logininsert\", params);\n    axios.post(server_URL + \"studentinsert\", params);\n    window.location.href = URL + \"Student#/auth/signin\";\n  }\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Flex direction=\"column\" p=\"0rem 2rem 0rem 2rem\">\n      <Button\n        onClick={logout}\n        marginBottom=\"1rem\"\n        marginTop=\"1rem\"\n        marginRight=\"1rem\"\n        colorScheme=\"orange\"\n        variant=\"solid\"\n        alignSelf=\"flex-end\"\n      >\n        log out\n      </Button>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={4}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              General Particulars\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Student Name\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"NID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"name\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Roll Number\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 19CS048\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"RID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"roll no\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Register Number\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 311119104010\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"REID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"register no\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Gender\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <Select\n                            minWidth=\"26em\"\n                            id=\"SID\"\n                            placeholder=\"Select Option\"\n                            isRequired\n                          >\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                            <option value=\"Other\">Other</option>\n                          </Select>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Date Of Birth\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"DOBID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"date\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Department\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: CSE\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"DEPT\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Department\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Batch\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 2019-2023\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"BATCH\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Batch\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Nationality\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"NATIONID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"nationality\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Religion\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"RELIGIONID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"religion\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <Text\n                          fontSize=\"md\"\n                          color={textColor}\n                          fontWeight=\"bold\"\n                          minWidth=\"100%\"\n                        >\n                          If Catholic, Parish ?\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"PARISHID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"Enter Parish\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Dalit Catholic\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Select\n                            minWidth=\"26em\"\n                            id=\"DALITID\"\n                            placeholder=\"Select Option\"\n                            isRequired\n                          >\n                            <option value=\"Yes\">Yes</option>\n                            <option value=\"No\">No</option>\n                          </Select>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Community\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"ALL CAPS\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"COMMUNITYID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"community\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Blood Group\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: AB+ve\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"BLOODID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"blood group\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother Tongue\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"MOTHERID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"mother tounge\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Contact Number\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"CONTACTID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"contact no.\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Aadhar Number\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"AADHARID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"aadhar no.\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Official Email ID\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"OFFEMID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"official email\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Personal Email ID\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"PEREMID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"personal email\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Present Address\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"PREADDRID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"present address\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Permanent Address\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"PERADDRID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"Permanent address\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Languages Known\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"LANKNO\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"languages known\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            PAN\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"PAN\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"PAN Number\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={4}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Higher Secondary Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Name Of School\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              minWidth=\"20em\"\n                              id=\"NOS1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"School name\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Board\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: STATE/CBSE\" placement=\"right\">\n                              <Input\n                                minWidth=\"20em\"\n                                id=\"BOARD1\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Board\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Medium Of Instruction\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOI1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Medium Of Instruction\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Second Language\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SL1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Second Language\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Group\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: BIO MATHS\" placement=\"right\">\n                              <Input\n                                id=\"GROUP1\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"group\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Total Marks\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"TM1\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"total marks\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Overall Percentage\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 90%\" placement=\"right\">\n                              <Input\n                                id=\"OP1\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Overall Percentage\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Cut-Off Marks\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 170.25\" placement=\"right\">\n                              <Input\n                                id=\"COM1\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Cut-Off Marks\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Number Of Attempts\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 1\" placement=\"right\">\n                              <Input\n                                id=\"NOA1\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"No. Of Attempts\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                10th Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Name Of School\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NOS2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"School name\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Board\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: STATE/CBSE\" placement=\"right\">\n                              <Input\n                                id=\"BOARD2\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Board\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Medium Of Instruction\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOI2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Medium Of Instruction\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Second Language\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SL2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Second Language\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Total Marks\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"TM2\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"total marks\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Overall Percentage\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 90%\" placement=\"right\">\n                              <Input\n                                id=\"OP2\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Overall Percentage\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Number Of Attempts\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 1\" placement=\"right\">\n                              <Input\n                                id=\"NOA2\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"No. Of Attempts\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Father's Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Father's Name\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Father's Name\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's Qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FQ\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Father's Qualification\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Fathers Occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Fathers Occupation\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's Office Address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FOA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Father's Office Address\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's Annual Income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FAI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Father's Annual Income\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Father's Mobile Number\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FMN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Father's Mobile No.\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Father's Email ID\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"FEI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Father's Email ID\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Guardian Name\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GQ\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Guardian Qualification\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Fathers Occupation\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Office Address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GOA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Guardian Office Address\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Annual Income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GAI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Guardian Annual Income\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Mobile No.\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GMN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Guardian Mobile No.\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Guardian's Email ID\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"GEI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Guardian Email ID\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Mother's and Sibling Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Mother's Name\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Mother's Name\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Qualification\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MQ\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Mother's Qualification\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Mother's Occupation\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Office Address\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MOA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Mother's Office Address\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Annual Income\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MAI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Mother's Annual Income\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Mother's Mobile Number\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MMN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Mother's Mobile No.\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Mother's Email ID\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"MEI\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Mother's Email ID\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Number Of Siblings\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 1\" placement=\"right\">\n                              <Input\n                                id=\"NOS\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Enter No. Of Siblings\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"NAS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Name Of Siblings\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Qualification Of Siblings\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"QOS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Qualification Of Siblings\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Sibling's Occupation\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter Sibling's Occupation\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Alumni Of LICET Or LOYOLA\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Select\n                              id=\"AOL\"\n                              placeholder=\"Select Option\"\n                              isRequired\n                            >\n                              <option value=\"Yes\">Yes</option>\n                              <option value=\"No\">No</option>\n                            </Select>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Admission Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Application Number\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"AN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Application No.\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Date Of Admission\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DOA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"date\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Quota\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Select\n                              id=\"QUO\"\n                              placeholder=\"Select Option\"\n                              isRequired\n                            >\n                              <option value=\"Government Quota\">\n                                Government Quota\n                              </option>\n                              <option value=\"Management Quota\">\n                                Management Quota\n                              </option>\n                            </Select>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Regular/Lateral Entry\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Select id=\"RL\" placeholder=\"Select Option\">\n                              <option value=\"Regular\">Regular</option>\n                              <option value=\"Lateral\">Lateral</option>\n                            </Select>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <FormLabel\n                              fontSize=\"md\"\n                              color={textColor}\n                              fontWeight=\"bold\"\n                              minWidth=\"100%\"\n                            >\n                              Day Scholar/Hosteller\n                            </FormLabel>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Select\n                              id=\"DH\"\n                              placeholder=\"Select Option\"\n                              isRequired\n                            >\n                              <option value=\"Day Scholar\">Day Scholar</option>\n                              <option value=\"Hosteller\">Hosteller</option>\n                            </Select>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Scholarship Details\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Scholarship Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SN\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Scholarship Name\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Scholarship Amount\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SA\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Scholarship Amount\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            First Graduate\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl isRequired>\n                            <Select\n                              id=\"FG\"\n                              placeholder=\"Select Option\"\n                              isRequired\n                            >\n                              <option value=\"Yes\">Yes</option>\n                              <option value=\"No\">N0</option>\n                            </Select>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Economically Backward (Annual Income Of Parents Less\n                            than 1LPA)\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Select\n                              id=\"EB\"\n                              placeholder=\"Select Option\"\n                              isRequired\n                            >\n                              <option value=\"Yes\">Yes</option>\n                              <option value=\"No\">No</option>\n                            </Select>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Programming Languages\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"PL\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Software Profficieny\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SP\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Department Related Profficieny\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"DRP\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Certifications\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"CER\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Other Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Non - Technical Skills\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Aptitude / Analytical Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"AAS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Communication Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"CS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Social Media Exposure\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"SME\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Leadership Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"LS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Other Interpersonal Skills\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"OIS\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Enter if any\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Goals\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Short Term Goals\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"STG\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Short Term Goals\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Long Term Goals\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"LTG\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Long Term Goals\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n                Professional Membership\n              </Text>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color={textColor}>\n                <Tbody>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Name\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: SAE\" placement=\"right\">\n                              <Input\n                                id=\"PMNA\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Professional Membership Name\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Membership No.\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Input\n                              id=\"PMNO\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Membership No.\"\n                            />\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <Text\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Duration\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                    <Td minWidth={{ sm: \"17rem\" }}>\n                      <Flex\n                        align=\"center\"\n                        py=\".8rem\"\n                        minWidth=\"100%\"\n                        flexWrap=\"nowrap\"\n                      >\n                        <Flex direction=\"column\">\n                          <FormControl>\n                            <Tooltip label=\"Ex: 2MONTHS\" placement=\"right\">\n                              <Input\n                                id=\"DUR\"\n                                borderRadius=\"5px\"\n                                fontSize=\"sm\"\n                                type=\"text\"\n                                placeholder=\"Membership Duration\"\n                              />\n                            </Tooltip>\n                          </FormControl>\n                        </Flex>\n                      </Flex>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n      </SimpleGrid>\n      <Button\n        onClick={funinsert}\n        alignSelf=\"center\"\n        marginBottom=\"1rem\"\n        marginTop=\"1rem\"\n        marginRight=\"1rem\"\n        width=\"30%\"\n        colorScheme=\"orange\"\n        variant=\"solid\"\n      >\n        Submit\n      </Button>\n    </Flex>\n  );\n}\n\nexport default GeneralInformationdata;\n","/** @format */\n\n//Student create page\n\nimport React from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Button,\n  FormControl,\n  Box,\n  useToast,\n  \n  FormLabel,\n  Select,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { Tooltip } from \"@chakra-ui/react\";\n\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction AdminControlCreate() {\n  function logout() {\n    window.location.href = URL + \"Student#/auth/SignIn\";\n  }\n\n  function Cancel() {\n    window.location.href = URL + \"Admin#/admin4/AdminControl\";\n  }\n  \n  function funinsert() {\n    let params = new URLSearchParams();\n    params.append(\"rollno\", document.getElementById(\"RID\").value);\n    params.append(\"email\", document.getElementById(\"NID\").value);\n    params.append(\"dept\", document.getElementById(\"DID\").value);\n    params.append(\"batch\", document.getElementById(\"BID\").value);\n    params.append(\"user_type\", document.getElementById(\"SID\").value);\n    // axios.post(server_URL + \"logininsert\", params);\n    // axios.post(server_URL + \"studentinsert\", params);\n    axios.post(server_URL + \"admin_create_creds\", params).then((results)=>{\n      if(results.data==\"inserted\")\n      {\n        document.getElementById(\"failure\").style.display = \"none\";\n        document.getElementById(\"success\").style.display = \"block\";\n      }\n      else{\n        document.getElementById(\"success\").style.display = \"none\";\n        document.getElementById(\"failure\").style.display = \"block\";\n      }\n    });\n  }\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Flex direction=\"column\" p=\"0rem 2rem 0rem 2rem\">\n      <Button\n        onClick={logout}\n        marginBottom=\"1rem\"\n        marginTop=\"1rem\"\n        marginRight=\"1rem\"\n        colorScheme=\"orange\"\n        variant=\"solid\"\n        alignSelf=\"flex-end\"\n      >\n        log out\n      </Button>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={4}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Credentials Details\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            User Type\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <Select\n                            minWidth=\"26em\"\n                            id=\"SID\"\n                            placeholder=\"Select User Type\"\n                            isRequired\n                          >\n                            <option value=\"0\">Student</option>\n                            <option value=\"1\">Class Advisor</option>\n                            <option value=\"2\">HoD</option>\n                            <option value=\"3\">Official</option>\n                            <option value=\"4\">Admin</option>\n                          </Select>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Email ID\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"NID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"email\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n               \n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Roll Number\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 19CS048\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"RID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"roll no\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Department\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: CSE\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"DID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Department\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Batch\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 2019-2023\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"BID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Batch\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n      <Box align=\"center\">\n        <Button\n          onClick={funinsert}\n          alignSelf=\"center\"\n          marginBottom=\"1rem\"\n          marginTop=\"1rem\"\n          marginRight=\"1rem\"\n          width=\"30%\"\n          colorScheme=\"orange\"\n          variant=\"solid\"\n        >\n          Create\n        </Button>\n        <Button\n          onClick={Cancel}\n          alignSelf=\"center\"\n          marginBottom=\"1rem\"\n          marginTop=\"1rem\"\n          marginRight=\"1rem\"\n          width=\"30%\"\n          colorScheme=\"red\"\n          variant=\"solid\"\n        >\n          Cancel\n        </Button>\n        <p id=\"success\" style={{display:\"none\",color:\"green\"}}>Inserted successfully</p>\n        <p id=\"failure\" style={{display:\"none\",color:\"red\"}}>Inserted failed</p>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default AdminControlCreate;\n","/** @format */\n\n//Student create page\n\nimport React from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Tr,\n  Td,\n  Input,\n  useColorModeValue,\n  Button,\n  FormControl,\n  Box,\n  FormLabel,\n  Select,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport { Tooltip } from \"@chakra-ui/react\";\n\nimport { server_URL, URL } from \"controller/urls_config\";\n\nfunction AdminControlEdit() {\n  function logout() {\n    window.location.href = URL + \"Student#/auth/SignIn\";\n  }\n\n  function Cancel() {\n    window.location.href = URL + \"Admin#/admin4/AdminControl\";\n  }\n\n  function funinsert() {\n    let params = new URLSearchParams();\n    params.append(\"rollno\", document.getElementById(\"RID\").value);\n    params.append(\"registerno\", document.getElementById(\"REID\").value);\n    params.append(\"name\", document.getElementById(\"NID\").value);\n    params.append(\"aadhar\", document.getElementById(\"AADHARID\").value);\n    params.append(\"peremail\", document.getElementById(\"PEREMID\").value);\n    params.append(\"offemail\", document.getElementById(\"OFFEMID\").value);\n    params.append(\"batch\", document.getElementById(\"BATCH\").value);\n    params.append(\"department\", document.getElementById(\"DEPT\").value);\n    params.append(\"quo\", document.getElementById(\"QUO\").value);\n    params.append(\"sex\", document.getElementById(\"SID\").value);\n    params.append(\"dateofbirth\", document.getElementById(\"DOBID\").value);\n    params.append(\"nationality\", document.getElementById(\"NATIONID\").value);\n    params.append(\"contact\", document.getElementById(\"CONTACTID\").value);\n\n    axios.post(server_URL + \"logininsert\", params);\n    axios.post(server_URL + \"studentinsert\", params);\n    window.location.href = URL + \"Student#/auth/signin\";\n  }\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Flex direction=\"column\" p=\"0rem 2rem 0rem 2rem\">\n      <Button\n        onClick={logout}\n        marginBottom=\"1rem\"\n        marginTop=\"1rem\"\n        marginRight=\"1rem\"\n        colorScheme=\"orange\"\n        variant=\"solid\"\n        alignSelf=\"flex-end\"\n      >\n        log out\n      </Button>\n      <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={4}>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Credentials Details\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Tbody>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            User Type\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <Select\n                            minWidth=\"26em\"\n                            id=\"SID\"\n                            placeholder=\"Select User Type\"\n                            isRequired\n                          >\n                            <option value=\"0\">Student</option>\n                            <option value=\"1\">Class Advisor</option>\n                            <option value=\"2\">HoD</option>\n                            <option value=\"3\">Official</option>\n                            <option value=\"4\">Admin</option>\n                          </Select>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Email ID\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Input\n                            minWidth=\"30em\"\n                            id=\"NID\"\n                            borderRadius=\"5px\"\n                            fontSize=\"sm\"\n                            type=\"text\"\n                            placeholder=\"name\"\n                          />\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Roll Number\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 19CS048\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"RID\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"roll no\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Department\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: CSE\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"DEPT\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Department\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n                <Tr>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl isRequired>\n                          <FormLabel\n                            fontSize=\"md\"\n                            color={textColor}\n                            fontWeight=\"bold\"\n                            minWidth=\"100%\"\n                          >\n                            Batch\n                          </FormLabel>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                  <Td minWidth={{ sm: \"17rem\" }}>\n                    <Flex\n                      align=\"center\"\n                      py=\".8rem\"\n                      minWidth=\"100%\"\n                      flexWrap=\"nowrap\"\n                    >\n                      <Flex direction=\"column\">\n                        <FormControl>\n                          <Tooltip label=\"Ex: 2019-2023\" placement=\"right\">\n                            <Input\n                              minWidth=\"30em\"\n                              id=\"BATCH\"\n                              borderRadius=\"5px\"\n                              fontSize=\"sm\"\n                              type=\"text\"\n                              placeholder=\"Batch\"\n                            />\n                          </Tooltip>\n                        </FormControl>\n                      </Flex>\n                    </Flex>\n                  </Td>\n                </Tr>\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n      <Box align=\"center\">\n        <Button\n          onClick={funinsert}\n          alignSelf=\"center\"\n          marginBottom=\"1rem\"\n          marginTop=\"1rem\"\n          marginRight=\"1rem\"\n          width=\"30%\"\n          colorScheme=\"orange\"\n          variant=\"solid\"\n        >\n          Create\n        </Button>\n        <Button\n          onClick={Cancel}\n          alignSelf=\"center\"\n          marginBottom=\"1rem\"\n          marginTop=\"1rem\"\n          marginRight=\"1rem\"\n          width=\"30%\"\n          colorScheme=\"orange\"\n          variant=\"solid\"\n        >\n          Cancel\n        </Button>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default AdminControlEdit;\n","/** @format */\n\nimport React from \"react\";\n\n// Chakra imports\nimport {\n  Flex,\n  Text,\n  SimpleGrid,\n  Card,\n  CardHeader,\n  CardBody,\n  useColorModeValue,\n  Container,\n} from \"@chakra-ui/react\";\n\nfunction Error404() {\n  const textColor = useColorModeValue(\"gray.400\", \"white\");\n  return (\n    <SimpleGrid>\n      <Container>\n        <Text\n          mt=\"7em\"\n          align=\"center\"\n          fontSize=\"5xl\"\n          color={textColor}\n          fontWeight=\"bold\"\n        >\n          Error 404 !\n        </Text>\n      </Container>\n      <Container>\n        <Text\n          m=\"2\"\n          align=\"center\"\n          fontSize=\"xl\"\n          color={textColor}\n          fontWeight=\"bold\"\n        >\n          The portal is under construction, try again later\n        </Text>\n      </Container>\n    </SimpleGrid>\n  );\n}\n\nexport default Error404;\n","/** @format */\n\nimport React from \"react\";\n\n// Chakra imports\nimport {\n  Flex,\n  Text,\n  SimpleGrid,\n  Card,\n  CardHeader,\n  CardBody,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nfunction ServerError() {\n  const textColor = useColorModeValue(\"gray.400\", \"white\");\n  return (\n    <SimpleGrid>\n      <div>\n        <Text\n          mt=\"7em\"\n          align=\"center\"\n          fontSize=\"5xl\"\n          color={textColor}\n          fontWeight=\"bold\"\n        >\n          Error 404 !\n        </Text>\n      </div>\n      <div>\n        <Text\n          m=\"2\"\n          align=\"center\"\n          fontSize=\"xl\"\n          color={textColor}\n          fontWeight=\"bold\"\n        >\n          The portal is under construction, try again later\n        </Text>\n      </div>\n    </SimpleGrid>\n  );\n}\n\nexport default ServerError;\n","/** @format */\n\n// Invisible Routes\n\nimport GeneralInformationdata1 from \"views/Pages/GeneralInformationData/GeneralInformationdata1\";\nimport GeneralInformationdata2 from \"views/Pages/GeneralInformationData/GeneralInformationdata2\";\nimport GeneralInformationdata3 from \"views/Pages/GeneralInformationData/GeneralInformationdata3\";\nimport GeneralInformationdata4 from \"views/Pages/GeneralInformationData/GeneralInformationdata4\";\n\nimport InternationalData1 from \"views/Pages/InternationalData/InternationalData1\";\nimport InternationalData2 from \"views/Pages/InternationalData/InternationalData2\";\nimport InternationalData3 from \"views/Pages/InternationalData/InternationalData3\";\nimport InternationalData4 from \"views/Pages/InternationalData/InternationalData4\";\n\nimport ExtraCurricularData1 from \"views/Pages/ExtraCurricularData/ExtraCurricularData1\";\nimport ExtraCurricularData2 from \"views/Pages/ExtraCurricularData/ExtraCurricularData2\";\nimport ExtraCurricularData3 from \"views/Pages/ExtraCurricularData/ExtraCurricularData3\";\nimport ExtraCurricularData4 from \"views/Pages/ExtraCurricularData/ExtraCurricularData4\";\n\nimport Academicdata1 from \"views/Pages/AcademicData/Academicdata1\";\nimport Academicdata2 from \"views/Pages/AcademicData/Academicdata2\";\nimport Academicdata3 from \"views/Pages/AcademicData/Academicdata3\";\nimport Academicdata4 from \"views/Pages/AcademicData/Academicdata4\";\n\nimport ProfessionalDevelopmentData1 from \"views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData1\";\nimport ProfessionalDevelopmentData2 from \"views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData2\";\nimport ProfessionalDevelopmentData3 from \"views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData3\";\nimport ProfessionalDevelopmentData4 from \"views/Pages/ProfessionalDevelopmentData/ProfessionalDevelopmentData4\";\n\nimport GeneralInformationDataEdit from \"views/Pages/Edit/GeneralInformationDataEdit\";\nimport GeneralInformationDataEdit4 from \"views/Pages/Edit/GeneralInformationDataEdit4\";\nimport GeneralInformationdata from \"views/Pages/Edit/GeneralInformationdata\";\n\nimport AdminControlCreate from \"views/Home/Admin Controls/AdminControlCreate\";\nimport AdminControlEdit from \"views/Home/Admin Controls/AdminControlEdit\";\n\nimport Error404 from \"views/Pages/Error404.js\";\nimport ServerError from \"views/Pages/ServerError\";\n\nimport {\n  HomeIcon,\n  StatsIcon,\n  CreditIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n  {\n    path: \"/GeneralInformationdata\",\n    component: GeneralInformationdata1,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/GeneralInformationdata\",\n    component: GeneralInformationdata2,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/GeneralInformationdata\",\n    component: GeneralInformationdata3,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/GeneralInformationdata\",\n    component: GeneralInformationdata4,\n    layout: \"/admin4\",\n  },\n\n  {\n    path: \"/GeneralInformationDataEdit\",\n    component: GeneralInformationDataEdit,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/GeneralInformationDataEdit\",\n    component: GeneralInformationDataEdit4,\n    layout: \"/admin4\",\n  },\n\n  {\n    path: \"/InternationalData\",\n    component: InternationalData1,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/InternationalData\",\n    component: InternationalData2,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/InternationalData\",\n    component: InternationalData3,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/InternationalData\",\n    component: InternationalData4,\n    layout: \"/admin4\",\n  },\n\n  {\n    path: \"/ExtracurricularData\",\n    component: ExtraCurricularData1,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/ExtracurricularData\",\n    component: ExtraCurricularData2,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/ExtracurricularData\",\n    component: ExtraCurricularData3,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/ExtracurricularData\",\n    component: ExtraCurricularData4,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/Academicdata\",\n    component: Academicdata1,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/Academicdata\",\n    component: Academicdata2,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/Academicdata\",\n    component: Academicdata3,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/Academicdata\",\n    component: Academicdata4,\n    layout: \"/admin4\",\n  },\n\n  {\n    path: \"/ProfessionalDevelopmentData\",\n    component: ProfessionalDevelopmentData1,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/ProfessionalDevelopmentData\",\n    component: ProfessionalDevelopmentData2,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/ProfessionalDevelopmentData\",\n    component: ProfessionalDevelopmentData3,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/ProfessionalDevelopmentData\",\n    component: ProfessionalDevelopmentData4,\n    layout: \"/admin4\",\n  },\n\n  {\n    path: \"/AdminControlEdit\",\n    name: \"Admin Controls\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: AdminControlEdit,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/AdminControlCreate\",\n    name: \"Admin Controls\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: AdminControlCreate,\n    layout: \"/admin4\",\n  },\n\n  {\n    path: \"/GeneralInformationdata\",\n    component: GeneralInformationdata,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/Error404\",\n    component: Error404,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/ServerError\",\n    component: ServerError,\n    layout: \"/auth\",\n  },\n];\nexport default dashRoutes;\n","import { mode } from \"@chakra-ui/theme-tools\";\n\nexport const globalStyles = {\n  colors: {\n    gray: {\n      700: \"#1f2733\",\n    },\n  },\n  styles: {\n    global: (props) => ({\n      body: {\n        bg: mode(\"gray.50\", \"gray.800\")(props),\n        fontFamily: 'Helvetica, sans-serif'\n      },\n      html: {\n        fontFamily: 'Helvetica, sans-serif'\n      }\n    }),\n  },\n};\n","// 1. Import the utilities\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\n// 2. Update the breakpoints as key-value pairs\nexport const breakpoints = createBreakpoints({\n  sm: \"320px\",\n  md: \"768px\",\n  lg: \"960px\",\n  xl: \"1200px\",\n});\n","export const buttonStyles = {\n  components: {\n    Button: {\n      variants: {\n        \"no-hover\": {\n          _hover: {\n            boxShadow: \"none\",\n          },\n        },\n        \"transparent-with-icon\": {\n          bg: \"transparent\",\n          fontWeight: \"bold\",\n          borderRadius: \"inherit\",\n          cursor: \"pointer\",\n          _hover: \"none\",\n          _active: {\n            bg: \"transparent\",\n            transform: \"none\",\n            borderColor: \"transparent\",\n          },\n          _focus: {\n            boxShadow: \"none\",\n          },\n          _hover: {\n            boxShadow: \"none\",\n          },\n        },\n      },\n      baseStyle: {\n        borderRadius: \"15px\",\n        _focus: {\n          boxShadow: \"none\",\n        },\n      },\n    },\n  },\n};\n","const Card = {\n  baseStyle: {\n    p: \"22px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    position: \"relative\",\n    minWidth: \"0px\",\n    wordWrap: \"break-word\",\n    backgroundClip: \"border-box\",\n  },\n  variants: {\n    panel: (props) => ({\n      bg: props.colorMode === \"dark\" ? \"gray.700\" : \"white\",\n      width: \"100%\",\n      boxShadow: \"0px 3.5px 5.5px rgba(0, 0, 0, 0.02)\",\n      borderRadius: \"15px\",\n    }),\n  },\n  defaultProps: {\n    variant: \"panel\",\n  },\n};\n\nexport const CardComponent = {\n  components: {\n    Card,\n  },\n};\n","const CardBody = {\n  baseStyle: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n};\n\nexport const CardBodyComponent = {\n  components: {\n    CardBody,\n  },\n};\n","const CardHeader = {\n  baseStyle: {\n    display: \"flex\",\n    width: \"100%\"\n  },\n};\n\nexport const CardHeaderComponent = {\n  components: {\n    CardHeader,\n  },\n};\n","const MainPanel = {\n  baseStyle: {\n    float: \"right\",\n    maxWidth: \"100%\",\n    overflow: \"auto\",\n    position: \"relative\",\n    maxHeight: \"100%\",\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n    transitionDuration: \".2s, .2s, .35s\",\n    transitionProperty: \"top, bottom, width\",\n    transitionTimingFunction: \"linear, linear, ease\",\n  },\n  variants: {\n    main: (props) => ({\n      float: \"right\",\n    }),\n    rtl: (props) => ({\n      float: \"left\",\n    }),\n  },\n  defaultProps: {\n    variant: \"main\",\n  },\n};\n\nexport const MainPanelComponent = {\n  components: {\n    MainPanel,\n  },\n};\n","const PanelContent = {\n  // variants: {\n  //   \"with-shadow\": {\n  //     boxShadow: \"0 0 2px 2px #efdfde\",\n  //     bgColor: \"red\",\n  //   },\n  // },\n  baseStyle: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n  },\n};\n\nexport const PanelContentComponent = {\n  components: {\n    PanelContent,\n  },\n};\n","const PanelContainer = {\n  baseStyle: {\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\",\n  },\n};\n\nexport const PanelContainerComponent = {\n  components: {\n    PanelContainer,\n  },\n};\n","import { extendTheme } from \"@chakra-ui/react\";\nimport { globalStyles } from \"./styles\";\nimport { font } from \"./foundations/fonts\";\nimport { breakpoints } from \"./foundations/breakpoints\";\nimport { buttonStyles } from \"./components/button\";\nimport { badgeStyles } from \"./components/badge\";\nimport { linkStyles } from \"./components/link\";\nimport { drawerStyles } from \"./components/drawer\";\nimport { CardComponent } from \"./additions/card/Card\";\nimport { CardBodyComponent } from \"./additions/card/CardBody\";\nimport { CardHeaderComponent } from \"./additions/card/CardHeader\";\nimport { MainPanelComponent } from \"./additions/layout/MainPanel\";\nimport { PanelContentComponent } from \"./additions/layout/PanelContent\";\nimport { PanelContainerComponent } from \"./additions/layout/PanelContainer\";\n// import { mode } from \"@chakra-ui/theme-tools\";\nexport default extendTheme(\n  { breakpoints }, // Breakpoints\n  globalStyles,\n  font, // Global styles\n  buttonStyles, // Button styles\n  badgeStyles, // Badge styles\n  linkStyles, // Link styles\n  drawerStyles, // Sidebar variant for Chakra's drawer\n  CardComponent, // Card component\n  CardBodyComponent, // Card Body component\n  CardHeaderComponent, // Card Header component\n  MainPanelComponent, // Main Panel component\n  PanelContentComponent, // Panel Content component\n  PanelContainerComponent // Panel Container component\n);\n","export const font = {\n    body: 'Roboto'\n};","import { baseStyle } from \"@chakra-ui/react\";\n\nexport const badgeStyles = {\n    components: {\n        Badge: {\n            sizes: {\n                md: {\n                    width: \"65px\",\n                    height: \"25px\"\n                }\n            },\n            baseStyle: {\n                textTransform: \"capitalize\"\n            }\n\n        }\n    }\n}","export const linkStyles = {\n  components: {\n    Link: {\n      // 3. We can add a new visual variant\n      decoration: \"none\",\n      baseStyle: {\n        _hover: {\n          textDecoration: \"none\",\n        },\n        _focus: {\n          boxShadow: \"none\",\n        },\n      },\n    },\n  },\n};\n","export const drawerStyles = {\n  components: {\n    Drawer: {\n      // 3. We can add a new visual variant\n      variants: {\n        \"with-shadow\": {\n          placement: \"right\",\n          boxShadow: \"0 0 2px 2px #efdfde\",\n          bgColor: \"red\",\n        },\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nexport function Separator(props) {\n  const { variant, children, ...rest } = props;\n  return (\n    <Flex\n      h=\"1px\"\n      w=\"100%\"\n      bg=\"linear-gradient(90deg, rgba(224, 225, 226, 0) 0%, #E0E1E2 49.52%, rgba(224, 225, 226, 0) 100%)\"\n      {...rest}\n    >\n      {children}\n    </Flex>\n  );\n}\n","// Chakra Imports\nimport {\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerHeader,\n  Flex,\n  Icon,\n  Link,\n  Switch,\n  Text,\n  useColorMode,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport GitHubButton from \"react-github-btn\";\nimport { Separator } from \"components/Separator/Separator\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { FaTwitter, FaFacebook } from \"react-icons/fa\";\n\nexport default function Configurator(props) {\n  const { rtlActive, secondary, isOpen, onClose, fixed, ...rest } = props;\n  const [switched, setSwitched] = useState(props.isChecked);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  // Chakra Color Mode\n  let fixedDisplay = \"flex\";\n  if (props.secondary) {\n    fixedDisplay = \"none\";\n  }\n\n  let bgButton = useColorModeValue(\n    \"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\",\n    \"white\"\n  );\n  let colorButton = useColorModeValue(\"white\", \"gray.700\");\n  const secondaryButtonBg = useColorModeValue(\"white\", \"transparent\");\n  const secondaryButtonBorder = useColorModeValue(\"gray.700\", \"white\");\n  const secondaryButtonColor = useColorModeValue(\"gray.700\", \"white\");\n  const settingsRef = React.useRef();\n  return (\n    <>\n      <Drawer\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        placement=\"right\"\n        finalFocusRef={settingsRef}\n        blockScrollOnMount={false}\n      >\n        <DrawerContent>\n          <DrawerHeader pt=\"24px\" px=\"24px\">\n            <DrawerCloseButton />\n\n            <Separator />\n          </DrawerHeader>\n          <DrawerBody w=\"340px\" ps=\"24px\" pe=\"40px\">\n            <Flex flexDirection=\"column\">\n              <Box>\n                <Text paddingBottom=\"2rem\" fontSize=\"md\" fontWeight=\"600\">\n                  Customize this page\n                </Text>\n              </Box>\n              <Box\n                display={fixedDisplay}\n                justifyContent=\"space-between \"\n                mb=\"16px\"\n              >\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\n                  Navbar Fixed\n                </Text>\n                <Switch\n                  colorScheme=\"orange\"\n                  isChecked={switched}\n                  onChange={(event) => {\n                    if (switched === true) {\n                      props.onSwitch(false);\n                      setSwitched(false);\n                    } else {\n                      props.onSwitch(true);\n                      setSwitched(true);\n                    }\n                  }}\n                />\n              </Box>\n              <Flex\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb=\"24px\"\n              >\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\n                  Dark/Light\n                </Text>\n                <Button onClick={toggleColorMode}>\n                  Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n                </Button>\n              </Flex>\n\n              <Separator />\n            </Flex>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\nConfigurator.propTypes = {\n  rtlActive: PropTypes.bool,\n  secondary: PropTypes.bool,\n  isOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  fixed: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"static/media/avatar1.eeef2af6.png\";","export default __webpack_public_path__ + \"static/media/avatar2.5692c39d.png\";","export default __webpack_public_path__ + \"static/media/avatar3.9f646ac5.png\";","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nexport default function IconBox(props) {\n  const { children, ...rest } = props;\n\n  return (\n    <Flex\n      alignItems={\"center\"}\n      justifyContent={\"center\"}\n      borderRadius={\"12px\"}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  );\n}\n","/**\n * /*eslint-disable\n *\n * @format\n */\n\nimport { ChevronDownIcon, HamburgerIcon } from \"@chakra-ui/icons\";\n// chakra imports\nimport {\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerOverlay,\n  Flex,\n  Link,\n  Stack,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Image,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuItemOption,\n  MenuGroup,\n  MenuOptionGroup,\n  MenuIcon,\n  MenuCommand,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport IconBox from \"components/Icons/IconBox\";\n\nimport { Separator } from \"components/Separator/Separator\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport signInImage from \"assets/img/signInImage.png\";\n\n// FUNCTIONS\n\nfunction Sidebar(props) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  const mainPanel = React.useRef();\n  let variantChange = \"0.2s linear\";\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    const { sidebarVariant, rtlActive } = props;\n    // Chakra Color Mode\n    let activeBg = useColorModeValue(\"white\", \"gray.700\");\n    let inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    let activeColor = useColorModeValue(\"gray.700\", \"white\");\n    let inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n    let sidebarActiveShadow = \"0px 7px 11px rgba(0, 0, 0, 0.04)\";\n    // Here are all the props that may change depending on sidebar's state.(Opaque or transparent)\n    if (sidebarVariant === \"opaque\") {\n      activeBg = \"transparent\";\n      inactiveBg = useColorModeValue(\"gray.100\", \"gray.600\");\n      activeColor = useColorModeValue(\"gray.700\", \"white\");\n      inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n      sidebarActiveShadow = \"none\";\n    }\n\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <>\n            <Text\n              color={activeColor}\n              fontWeight=\"bold\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx=\"auto\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n            >\n              {rtlActive ? prop.rtlName : prop.name}\n            </Text>\n            {createLinks(prop.views)}\n          </>\n        );\n      }\n      return (\n        <NavLink to={prop.layout + prop.path}>\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              boxShadow={sidebarActiveShadow}\n              bg={activeBg}\n              transition={variantChange}\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"0px 7px 11px rgba(0, 0, 0, 0.04)\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg=\"orange.300\"\n                    color=\"white\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                    transition={variantChange}\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {document.documentElement.dir === \"rtl\"\n                    ? prop.rtlName\n                    : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          ) : (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg=\"transparent\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              py=\"12px\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg={inactiveBg}\n                    color=\"orange.300\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                    transition={variantChange}\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          )}\n        </NavLink>\n      );\n    });\n  };\n  const { logoText, routes, rtlActive, sidebarVariant } = props;\n\n  var links = <>{createLinks(routes)}</>;\n  //  BRAND\n  //  Chakra Color Mode\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let sidebarBg = \"none\";\n  let sidebarRadius = \"0px\";\n  let sidebarMargins = \"0px\";\n  if (sidebarVariant === \"opaque\") {\n    sidebarBg = useColorModeValue(\"white\", \"gray.700\");\n    sidebarRadius = \"16px\";\n    sidebarMargins = \"16px 0px 16px 16px\";\n  }\n  var brand = (\n    <Box pt={\"25px\"} mb=\"12px\">\n      <Link\n        href={`${process.env.PUBLIC_URL}/#/`}\n        target=\"_blank\"\n        display=\"flex\"\n        lineHeight=\"100%\"\n        mb=\"30px\"\n        fontWeight=\"bold\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        fontSize=\"11px\"\n      >\n        <Box boxSize=\"50px\" me=\"1em\">\n          <Image src={signInImage} alt=\"LICET Logo\" />\n        </Box>\n        <Text fontSize=\"xl\" lineHeight=\"1.2\">\n          {logoText}\n        </Text>\n      </Link>\n      <Separator></Separator>\n    </Box>\n  );\n\n  // SIDEBAR\n  return (\n    <Box ref={mainPanel}>\n      <Box display={{ sm: \"none\", xl: \"block\" }} position=\"fixed\">\n        <Box\n          bg={sidebarBg}\n          transition={variantChange}\n          w=\"260px\"\n          maxW=\"260px\"\n          ms={{\n            sm: \"16px\",\n          }}\n          my={{\n            sm: \"16px\",\n          }}\n          h=\"calc(100vh - 32px)\"\n          ps=\"20px\"\n          pe=\"20px\"\n          m={sidebarMargins}\n          borderRadius={sidebarRadius}\n        >\n          <Box>{brand}</Box>\n          <Stack direction=\"column\" mb=\"40px\">\n            <Box>{links}</Box>\n          </Stack>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\n// FUNCTIONS\n\nexport function SidebarResponsive(props) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  const mainPanel = React.useRef();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    const { rtlActive } = props;\n    // Chakra Color Mode\n    const activeBg = useColorModeValue(\"white\", \"gray.700\");\n    const inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    const activeColor = useColorModeValue(\"gray.700\", \"white\");\n    const inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <>\n            <Text\n              color={activeColor}\n              fontWeight=\"bold\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx=\"auto\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n            >\n              {rtlActive ? prop.rtlName : prop.name}\n            </Text>\n            {createLinks(prop.views)}\n          </>\n        );\n      }\n      return (\n        <NavLink to={prop.layout + prop.path}>\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg={activeBg}\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg=\"orange.300\"\n                    color=\"black\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {document.documentElement.dir === \"rtl\"\n                    ? prop.rtlName\n                    : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          ) : (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg=\"transparent\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              py=\"12px\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg={inactiveBg}\n                    color=\"orange.300\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          )}\n        </NavLink>\n      );\n    });\n  };\n  const { logoText, routes, rtlActive, ...rest } = props;\n\n  var links = <>{createLinks(routes)}</>;\n  //  BRAND\n  //  Chakra Color Mode\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let hamburgerColor = useColorModeValue(\"gray.500\", \"gray.200\");\n  if (props.secondary === true) {\n    hamburgerColor = \"white\";\n  }\n  var brand = (\n    <Box pt={\"35px\"} mb=\"8px\">\n      <Link\n        href={`${process.env.PUBLIC_URL}/#/`}\n        target=\"_blank\"\n        display=\"flex\"\n        lineHeight=\"100%\"\n        mb=\"30px\"\n        fontWeight=\"bold\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        fontSize=\"11px\"\n      >\n        <Text fontSize=\"sm\" mt=\"3px\">\n          {logoText}\n        </Text>\n      </Link>\n      <Separator></Separator>\n    </Box>\n  );\n\n  // SIDEBAR\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n  // Color variables\n  return (\n    <Flex\n      display={{ sm: \"flex\", xl: \"none\" }}\n      ref={mainPanel}\n      alignItems=\"center\"\n    >\n      <HamburgerIcon\n        color={hamburgerColor}\n        w=\"18px\"\n        h=\"18px\"\n        ref={btnRef}\n        colorScheme=\"orange\"\n        onClick={onOpen}\n      />\n      <Drawer\n        isOpen={isOpen}\n        onClose={onClose}\n        placement=\"left\"\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent\n          w=\"250px\"\n          maxW=\"250px\"\n          ms={{\n            sm: \"16px\",\n          }}\n          my={{\n            sm: \"16px\",\n          }}\n          borderRadius=\"16px\"\n        >\n          <DrawerCloseButton\n            _focus={{ boxShadow: \"none\" }}\n            _hover={{ boxShadow: \"none\" }}\n          />\n          <DrawerBody maxW=\"250px\" px=\"1rem\">\n            <Box maxW=\"100%\" h=\"100vh\">\n              <Box>{brand}</Box>\n              <Stack direction=\"column\" mb=\"40px\">\n                <Box onClick={onClose}>{links}</Box>\n              </Stack>\n            </Box>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </Flex>\n  );\n}\n// PROPS\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  variant: PropTypes.string,\n};\nSidebarResponsive.propTypes = {\n  rtlActive: PropTypes.bool,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Sidebar;\n","/** @format */\n\n// Chakra Icons\nimport { BellIcon, SearchIcon } from \"@chakra-ui/icons\";\n// Chakra Imports\nimport {\n  Button,\n  Flex,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n// Assets\nimport avatar1 from \"assets/img/avatars/avatar1.png\";\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\n// Custom Icons\nimport { ProfileIcon, SettingsIcon } from \"components/Icons/Icons\";\n// Custom Components\nimport { ItemContent } from \"components/Menu/ItemContent\";\nimport { SidebarResponsive } from \"components/Sidebar/Sidebar\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"routes0.js\";\n\nexport default function HeaderLinks(props) {\n  const {\n    rtlActive,\n    variant,\n    children,\n    fixed,\n    secondary,\n    onOpen,\n    ...rest\n  } = props;\n\n  // Chakra Color Mode\n  let mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  let inputBg = useColorModeValue(\"white\", \"gray.800\");\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\n  let searchIcon = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  if (secondary) {\n    navbarIcon = \"white\";\n    mainText = \"white\";\n  }\n  const settingsRef = React.useRef();\n  const { isOpen, onClose } = useDisclosure();\n  return (\n    <Flex w={{ sm: \"100%\", md: \"auto\" }} alignItems=\"center\">\n      <NavLink to=\"/auth/signin\">\n        <Button\n          ms=\"0px\"\n          px=\"0px\"\n          me={{ sm: \"2px\", md: \"16px\" }}\n          color={navbarIcon}\n          variant=\"transparent-with-icon\"\n          leftIcon={\n            <ProfileIcon color={navbarIcon} w=\"22px\" h=\"22px\" me=\"0px\" />\n          }\n        >\n          <Text display={{ sm: \"none\", md: \"flex\" }}>Log Out</Text>\n        </Button>\n        <Modal\n          isOpen={isOpen}\n          onClose={() => {\n            onClose();\n          }}\n        >\n          <ModalContent>\n            <ModalHeader>Confirmation</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>Are you sure ?</ModalBody>\n            <ModalFooter>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  onClose();\n                  fundelete();\n                }}\n              >\n                Log out\n              </Button>\n              <Button\n                colorScheme=\"blue\"\n                mr={3}\n                onClick={() => {\n                  onClose();\n                }}\n              >\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </NavLink>\n      <SidebarResponsive\n        logoText={props.logoText}\n        secondary={props.secondary}\n        routes={routes}\n        // logo={logo}\n        {...rest}\n      />\n      <SettingsIcon\n        cursor=\"pointer\"\n        ms={{ base: \"16px\", xl: \"0px\" }}\n        ref={settingsRef}\n        onClick={props.onOpen}\n        color={navbarIcon}\n        w=\"18px\"\n        h=\"18px\"\n      />\n    </Flex>\n  );\n}\n\nHeaderLinks.propTypes = {\n  rtlActive: PropTypes.bool,\n  variant: PropTypes.string,\n  fixed: PropTypes.bool,\n  secondary: PropTypes.bool,\n  onOpen: PropTypes.func,\n};\n","// Chakra Imports\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Flex,\n  Link,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nexport default function AdminNavbar(props) {\n  const [scrolled, setScrolled] = useState(false);\n  const {\n    rtlActive,\n    variant,\n    children,\n    fixed,\n    secondary,\n    brandText,\n    onOpen,\n    ...rest\n  } = props;\n\n  // var num = 1;\n\n  // Here are all the props that may change depending on navbar's type or state.(secondary, variant, scrolled)\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let secondaryText = useColorModeValue(\"gray.400\", \"gray.200\");\n  let navbarPosition = \"absolute\";\n  let navbarFilter = \"none\";\n  let navbarBackdrop = \"blur(21px)\";\n  let navbarShadow = \"none\";\n  let navbarBg = \"none\";\n  let navbarBorder = \"transparent\";\n  let secondaryMargin = \"0px\";\n  let paddingX = \"15px\";\n  if (props.fixed === true)\n    if (scrolled === true) {\n      navbarPosition = \"fixed\";\n      navbarShadow = useColorModeValue(\n        \"0px 7px 23px rgba(0, 0, 0, 0.05)\",\n        \"none\"\n      );\n      navbarBg = useColorModeValue(\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.82) 0%, rgba(255, 255, 255, 0.8) 110.84%)\",\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n      );\n      navbarBorder = useColorModeValue(\"#FFFFFF\", \"rgba(255, 255, 255, 0.31)\");\n      navbarFilter = useColorModeValue(\n        \"none\",\n        \"drop-shadow(0px 7px 23px rgba(0, 0, 0, 0.05))\"\n      );\n    }\n  if (props.secondary) {\n    navbarBackdrop = \"none\";\n    navbarPosition = \"absolute\";\n    mainText = \"white\";\n    secondaryText = \"white\";\n    secondaryMargin = \"22px\";\n    paddingX = \"30px\";\n  }\n  const changeNavbar = () => {\n    if (window.scrollY > 1) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  };\n  window.addEventListener(\"scroll\", changeNavbar);\n  return (\n    <Flex\n      position={navbarPosition}\n      boxShadow={navbarShadow}\n      bg={navbarBg}\n      borderColor={navbarBorder}\n      filter={navbarFilter}\n      backdropFilter={navbarBackdrop}\n      borderWidth=\"1.5px\"\n      borderStyle=\"solid\"\n      transitionDelay=\"0s, 0s, 0s, 0s\"\n      transitionDuration=\" 0.25s, 0.25s, 0.25s, 0s\"\n      transition-property=\"box-shadow, background-color, filter, border\"\n      transitionTimingFunction=\"linear, linear, linear, linear\"\n      alignItems={{ xl: \"center\" }}\n      borderRadius=\"16px\"\n      display=\"flex\"\n      minH=\"75px\"\n      justifyContent={{ xl: \"center\" }}\n      lineHeight=\"25.6px\"\n      mx=\"auto\"\n      mt={secondaryMargin}\n      pb=\"8px\"\n      right={{ sm: \"15px\", xl: \"30px\" }}\n      px={{\n        sm: paddingX,\n        md: \"30px\",\n      }}\n      ps={{\n        xl: \"12px\",\n      }}\n      paddingTop=\"8px\"\n      top=\"18px\"\n      w={{ sm: \"calc(100vw - 30px)\", xl: \"calc(100vw - 75px - 275px)\" }}\n    >\n      <Flex\n        w=\"100%\"\n        flexDirection={{\n          sm: \"column\",\n          md: \"row\",\n        }}\n        alignItems={{ xl: \"center\" }}\n      >\n        <Box mb={{ sm: \"8px\", md: \"0px\" }}>\n          <Link\n            color={mainText}\n            bg=\"inherit\"\n            borderRadius=\"inherit\"\n            fontSize=\"2xl\"\n            fontWeight=\"bold\"\n          >\n            {brandText}\n          </Link>\n          <Breadcrumb fontSize=\"sm\">\n            <BreadcrumbItem color={mainText}>\n              <BreadcrumbLink\n                // href={\"#/admin\" + num + \"/dashboard\"}\n                color={secondaryText}\n              >\n                Portal\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n\n            <BreadcrumbItem color={mainText}>\n              <BreadcrumbLink color={mainText}>{brandText}</BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n        </Box>\n        <Box ms=\"auto\" w={{ sm: \"100%\", md: \"unset\" }}>\n          <AdminNavbarLinks\n            onOpen={props.onOpen}\n            rtlActive={rtlActive}\n            logoText={props.logoText}\n            secondary={props.secondary}\n            fixed={props.fixed}\n          />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nAdminNavbar.propTypes = {\n  rtlActive: PropTypes.bool,\n  brandText: PropTypes.string,\n  variant: PropTypes.string,\n  secondary: PropTypes.bool,\n  fixed: PropTypes.bool,\n  onOpen: PropTypes.func,\n};\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction MainPanel(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"MainPanel\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default MainPanel;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction PanelContainer(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"PanelContainer\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default PanelContainer;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction PanelContent(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"PanelContent\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default PanelContent;\n","// Internship Charts\n\nimport React, { useState } from \"react\";\nimport Card from \"components/Card/Card\";\nimport Chart from \"react-apexcharts\";\n\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction BarChartInternship() {\n  const [chartData, setChartData] = useState({\n    name: \"Internship\",\n    data: [],\n  });\n  const [chartOptions, setchartOptions] = useState({\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    tooltip: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n      onDatasetHover: {\n        style: {\n          backgroundColor: \"red\",\n          fontSize: \"12px\",\n          fontFamily: undefined,\n        },\n      },\n      theme: \"dark\",\n    },\n    xaxis: {\n      categories: [\"2019-2023\"],\n      show: true,\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"12px\",\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: {\n      show: true,\n      color: \"#fff\",\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    grid: {\n      show: false,\n    },\n    fill: {\n      colors: \"#fff\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 8,\n        columnWidth: \"12px\",\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n            },\n          },\n        },\n      },\n    ],\n  });\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useState(async () => {\n    axios.post(server_URL + \"InternshipGraphHOD\", params).then((items) => {\n      // console.log(items);\n      // console.log(items.data.placement_lst);\n      // console.log(...items.data.placement_lst);\n      setChartData({\n        ...chartData,\n        data: items.data.intern_lst,\n      });\n      setchartOptions({\n        ...chartOptions,\n        xaxis: {\n          categories: items.data.batches,\n          show: true,\n          labels: {\n            show: true,\n            style: {\n              colors: \"#fff\",\n              fontSize: \"12px\",\n            },\n          },\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n      });\n    });\n  });\n\n  return (\n    <Card\n      py=\"1rem\"\n      height={{ sm: \"200px\" }}\n      width=\"100%\"\n      bg=\"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\"\n      position=\"relative\"\n    >\n      <Chart\n        options={chartOptions}\n        series={[chartData]}\n        type=\"bar\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </Card>\n  );\n}\n\nexport default BarChartInternship;\n","// Placement Charts\n\nimport React, { Component, useState } from \"react\";\nimport Card from \"components/Card/Card\";\nimport Chart from \"react-apexcharts\";\nimport { barChartData, barChartOptions } from \"variables/charts\";\n\nimport axios from \"axios\";\n\nimport { URL, server_URL } from \"controller/urls_config\";\n\nlet chartOptions = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    style: {\n      backgroundColor: \"red\",\n      fontSize: \"12px\",\n      fontFamily: undefined,\n    },\n    onDatasetHover: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n    },\n    theme: \"dark\",\n  },\n  xaxis: {\n    categories: [\"2019-2023\"],\n    show: true,\n    labels: {\n      show: true,\n      style: {\n        colors: \"#fff\",\n        fontSize: \"12px\",\n      },\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: true,\n    color: \"#fff\",\n    labels: {\n      show: true,\n      style: {\n        colors: \"#fff\",\n        fontSize: \"14px\",\n      },\n    },\n  },\n  grid: {\n    show: false,\n  },\n  fill: {\n    colors: \"#fff\",\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  plotOptions: {\n    bar: {\n      borderRadius: 8,\n      columnWidth: \"12px\",\n    },\n  },\n  responsive: [\n    {\n      breakpoint: 768,\n      options: {\n        plotOptions: {\n          bar: {\n            borderRadius: 0,\n          },\n        },\n      },\n    },\n  ],\n};\n\nfunction BarChartPlacement() {\n  const [chartData, setChartData] = useState({\n    name: \"Internship\",\n    data: [],\n  });\n  const [chartOptions, setchartOptions] = useState({\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    tooltip: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n      onDatasetHover: {\n        style: {\n          backgroundColor: \"red\",\n          fontSize: \"12px\",\n          fontFamily: undefined,\n        },\n      },\n      theme: \"dark\",\n    },\n    xaxis: {\n      categories: [\"2019-2023\"],\n      show: true,\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"12px\",\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: {\n      show: true,\n      color: \"#fff\",\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    grid: {\n      show: false,\n    },\n    fill: {\n      colors: \"#fff\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 8,\n        columnWidth: \"12px\",\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n            },\n          },\n        },\n      },\n    ],\n  });\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useState(async () => {\n    axios.post(server_URL + \"PlacementGraphHOD\", params).then((items) => {\n      setChartData({ ...chartData, data: items.data.placement_lst });\n      setchartOptions({\n        ...chartOptions,\n        xaxis: {\n          categories: items.data.batches,\n          show: true,\n          labels: {\n            show: true,\n            style: {\n              colors: \"#fff\",\n              fontSize: \"12px\",\n            },\n          },\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n      });\n    });\n  });\n\n  return (\n    <Card\n      py=\"1rem\"\n      height={{ sm: \"200px\" }}\n      width=\"100%\"\n      bg=\"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\"\n      position=\"relative\"\n    >\n      <Chart\n        options={chartOptions}\n        series={[chartData]}\n        type=\"bar\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </Card>\n  );\n}\n\nexport default BarChartPlacement;\n","import React, { useState } from \"react\";\nimport { Box, Flex, Stat, StatLabel } from \"@chakra-ui/react\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport LineChartComponent from \"./LineChart\";\n\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction LineChart() {\n  const [batches, setbatches] = useState([\"2019-2023\"]);\n  const [batched_result, set_batched_result] = useState({\n    \"2020-2024\": [\n      {\n        name: \"CS123\",\n        data: [50, 40],\n      },\n    ],\n    \"2019-2023\": [\n      {\n        name: \"CS123\",\n        data: [50, 40],\n      },\n    ],\n  });\n\n  const [lineChartOptions, set_linechartOptions] = useState({\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    tooltip: {\n      theme: \"dark\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    xaxis: {\n      categories: [\"CAT1\", \"CAT2\"],\n      labels: {\n        style: {\n          colors: \"#c8cfca\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: \"#c8cfca\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    legend: {\n      show: true,\n    },\n    grid: {\n      strokeDashArray: 5,\n    },\n    fill: {\n      colors: [\"#aba0ef\", \"#2D3748\", \"#2D3790\"],\n    },\n    colors: [\"#aba0ef\", \"#2D3748\", \"#2D3790\"],\n  });\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useState(async () => {\n    axios.post(server_URL + \"AcademicsGraphCA\", params).then((items) => {\n      set_batched_result(items.data.batched_result);\n      setbatches(Object.keys(items.data.batched_result));\n      set_linechartOptions({\n        ...lineChartOptions,\n        xaxis: {\n          categories: items.data.exams,\n          labels: {\n            style: {\n              colors: \"#c8cfca\",\n              fontSize: \"12px\",\n            },\n          },\n        },\n      });\n    });\n  });\n\n  return (\n    <>\n      {batches.map((res) => {\n        return (\n          <Card minH=\"300px\">\n            <CardBody>\n              <Flex\n                flexDirection=\"column\"\n                align=\"center\"\n                justify=\"center\"\n                w=\"100%\"\n              >\n                <Stat mr=\"auto\">\n                  <StatLabel\n                    fontSize=\"sm\"\n                    color=\"gray.400\"\n                    fontWeight=\"bold\"\n                    pb=\"1.5rem\"\n                  >\n                    Academics {res}\n                  </StatLabel>\n                </Stat>\n                <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\">\n                  <LineChartComponent\n                    lineChartOptions={lineChartOptions}\n                    series={batched_result[res]}\n                  />\n                </Box>\n              </Flex>\n            </CardBody>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n\nexport default LineChart;\n","// Academic summary Charts\n\nimport React, { useState } from \"react\";\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport BarChartComponent from \"./BarChart\";\nimport { Flex, Stat, StatLabel } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { URL, server_URL } from \"controller/urls_config\";\n\nfunction BarChartAcademicSummary() {\n  const [batches, setbatches] = useState([\"2019-2023\"]);\n  const [chartData, setChartData] = useState({\n    \"2019-2023\": { 8.5: 2, 9.2: 1, 9.9: 1 },\n    \"2020-2024\": { 9.9: 5 },\n  });\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n  useState(async () => {\n    axios.post(server_URL + \"AcademicSummaryGraphCA\", params).then((items) => {\n      setbatches(items.data.batches);\n      setChartData(items.data.results);\n    });\n  });\n\n  return batches.map((res) => {\n    return (\n      <Card minH=\"300px\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Stat mr=\"auto\">\n              <StatLabel\n                fontSize=\"sm\"\n                color=\"gray.400\"\n                fontWeight=\"bold\"\n                pb=\"1.5rem\"\n              >\n                Academic Summary {res}\n              </StatLabel>\n            </Stat>\n            <BarChartComponent\n              chartData={Object.values(chartData[res])}\n              categories={Object.keys(chartData[res])}\n            />\n          </Flex>\n        </CardBody>\n      </Card>\n    );\n  });\n}\n\nexport default BarChartAcademicSummary;\n","/** @format */\n\n//Class Advisor - StudentList GeneralInformation\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListGeneral(props) {\n  const { name, email, reg, roll, dept, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href =\n          URL + \"Class-Advisor#/admin1/GeneralInformationdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListGeneral;\n","/** @format */\n\n//Class Advisor Dashboard/General\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\nimport SignIn from \"../../Pages/SignIn\";\nvar Loader = require(\"react-loader\");\n\nvar data2 = [];\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Box,\n  useToast,\n} from \"@chakra-ui/react\";\n\nimport { SearchIcon } from \"@chakra-ui/icons\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListGeneral from \"components/Tables/StudentList/StudentListGI1\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction GeneralInformation() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  // Toast var\n  const toast = useToast();\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  let auth_token = localStorage.getItem(\"auth_token\");\n\n  useEffect(async () => {\n    axios.post(server_URL + \"General\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\") {\n      return item;\n    } else if (\n      item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.batch.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n    ) {\n      return item;\n    }\n  });\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  if (auth_token != -1) {\n    return (\n      <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                General Information\n              </Text>\n            </Flex>\n          </CardBody>\n          <CardHeader mt=\"1em\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n              Search Student\n            </Text>\n          </CardHeader>\n          <InputGroup\n            bg={inputBg}\n            mt=\"1rem\"\n            borderRadius=\"15px\"\n            w=\"cover\"\n            _focus={{\n              borderColor: { mainorange },\n            }}\n            _active={{\n              borderColor: { mainorange },\n            }}\n          >\n            <InputLeftElement\n              children={\n                <IconButton\n                  bg=\"inherit\"\n                  borderRadius=\"inherit\"\n                  _hover=\"none\"\n                  _active={{\n                    bg: \"inherit\",\n                    transform: \"none\",\n                    borderColor: \"transparent\",\n                  }}\n                  _focus={{\n                    boxShadow: \"none\",\n                  }}\n                  icon={\n                    <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                  }\n                ></IconButton>\n              }\n            />\n\n            <Input\n              onChange={(event) => setSearchTerm(event.target.value)}\n              fontSize=\"xs\"\n              py=\"11px\"\n              placeholder=\"Type here...\"\n              borderRadius=\"inherit\"\n              value={searchTerm}\n            />\n          </InputGroup>\n          <Box alignSelf=\"flex-end\">\n            <CSVLink data={data2}>\n              <Button\n                minWidth=\"fit-content\"\n                mt=\"1.5em\"\n                colorScheme=\"orange\"\n                variant=\"solid\"\n                onClick={() =>\n                  toast({\n                    title: \"Report Downloaded Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  })\n                }\n              >\n                Download Report\n              </Button>\n            </CSVLink>\n          </Box>\n        </Card>\n\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Students List\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Roll No.</Th>\n                  <Th color=\"gray.400\">Name</Th>\n                  <Th color=\"gray.400\">Register No</Th>\n                  <Th color=\"gray.400\">Batch</Th>\n                  <Th color=\"gray.400\">Email</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data\n                  .filter((item) => {\n                    if (searchTerm == \"\") {\n                      //data2.push(item);\n                      return item;\n                    } else if (\n                      item.sname\n                        .toLowerCase()\n                        .includes(searchTerm.toLocaleLowerCase()) ||\n                      item.roll_no\n                        .toLowerCase()\n                        .includes(searchTerm.toLocaleLowerCase()) ||\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm.toLocaleLowerCase()) ||\n                      item.reg_no\n                        .toLowerCase()\n                        .includes(searchTerm.toLocaleLowerCase())\n                    ) {\n                      //data2.push(item);\n                      return item;\n                    }\n                  })\n                  .map((item) => {\n                    return (\n                      <StudentListGeneral\n                        roll={item.roll_no}\n                        name={item.sname}\n                        reg={item.reg_no}\n                        batch={item.batch}\n                        email={item.licet_email}\n                      />\n                    );\n                  })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Flex>\n    );\n  } else {\n    return <SignIn></SignIn>;\n  }\n}\n\nexport default GeneralInformation;\n","/** @format */\n\n//Class Advisor International Exposure - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListInternational(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"International\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"International\"));\n        window.location.href = URL + \"Class-Advisor#/admin1/InternationalData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListInternational;\n","/** @format */\n\n////Class Advisor International Exposure\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Box,\n  useToast,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListInternational from \"components/Tables/StudentList/StudentListInternational1\";\n\nimport { server_URL } from \"controller/urls_config\";\nimport { CSVLink } from \"react-csv\";\n\nvar Loader = require(\"react-loader\"),\n  data2 = [];\n\nfunction InternationalExposure() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n\n  // Toast var\n  const toast = useToast();\n\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"InternationalExpo\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\") {\n      return item;\n    } else if (\n      item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.batch.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n    ) {\n      return item;\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              International Exposure\n            </Text>\n          </Flex>\n        </CardBody>\n\n        <CardHeader mt=\"1em\">\n          <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n            Search Student\n          </Text>\n        </CardHeader>\n\n        <InputGroup\n          bg={inputBg}\n          mt=\"1rem\"\n          borderRadius=\"15px\"\n          w=\"cover\"\n          _focus={{\n            borderColor: { mainorange },\n          }}\n          _active={{\n            borderColor: { mainorange },\n          }}\n        >\n          <InputLeftElement\n            children={\n              <IconButton\n                bg=\"inherit\"\n                borderRadius=\"inherit\"\n                _hover=\"none\"\n                _active={{\n                  bg: \"inherit\",\n                  transform: \"none\",\n                  borderColor: \"transparent\",\n                }}\n                _focus={{\n                  boxShadow: \"none\",\n                }}\n                icon={<SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />}\n              ></IconButton>\n            }\n          />\n\n          <Input\n            onChange={(event) => setSearchTerm(event.target.value)}\n            fontSize=\"xs\"\n            py=\"11px\"\n            placeholder=\"Type here...\"\n            borderRadius=\"inherit\"\n            value={searchTerm}\n          />\n        </InputGroup>\n\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1.5em\"\n              onClick=\"m\"\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\") {\n                    return item;\n                  } else if (\n                    item.sname\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.roll_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.batch\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.reg_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase())\n                  ) {\n                    return item;\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListInternational\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default InternationalExposure;\n","/** @format */\n\n//Class Advisor Extracurricular - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListExtraCurricular(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href =\n          URL + \"Class-Advisor#/admin1/ExtracurricularData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListExtraCurricular;\n","/** @format */\n\n//Class Advisor Extracurricular\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\n\nimport { SearchIcon } from \"@chakra-ui/icons\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListExtraCurricular from \"components/Tables/StudentList/StudentListExtraCurricular1\";\n\nvar data2 = [];\nvar Loader = require(\"react-loader\");\n\nimport { CSVLink } from \"react-csv\";\nimport { server_URL } from \"controller/urls_config\";\n\nfunction Extracurricular() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"ExtracurricularCA\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\") {\n      return item;\n    } else if (\n      item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.batch.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n    ) {\n      return item;\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Extracurricular\n            </Text>\n          </Flex>\n        </CardBody>\n        <CardHeader mt=\"1em\">\n          <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n            Search Student\n          </Text>\n        </CardHeader>\n\n        <InputGroup\n          bg={inputBg}\n          mt=\"1rem\"\n          borderRadius=\"15px\"\n          w=\"cover\"\n          _focus={{\n            borderColor: { mainorange },\n          }}\n          _active={{\n            borderColor: { mainorange },\n          }}\n        >\n          <InputLeftElement\n            children={\n              <IconButton\n                bg=\"inherit\"\n                borderRadius=\"inherit\"\n                _hover=\"none\"\n                _active={{\n                  bg: \"inherit\",\n                  transform: \"none\",\n                  borderColor: \"transparent\",\n                }}\n                _focus={{\n                  boxShadow: \"none\",\n                }}\n                icon={<SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />}\n              ></IconButton>\n            }\n          />\n\n          <Input\n            onChange={(event) => setSearchTerm(event.target.value)}\n            fontSize=\"xs\"\n            py=\"11px\"\n            placeholder=\"Type here...\"\n            borderRadius=\"inherit\"\n            value={searchTerm}\n          />\n        </InputGroup>\n\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1.5em\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n              colorScheme=\"orange\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\") {\n                    return item;\n                  } else if (\n                    item.sname\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.roll_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.batch\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.reg_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase())\n                  ) {\n                    return item;\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListExtraCurricular\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      key={item.roll_no}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Extracurricular;\n","/** @format */\n\n//Class Advisor Academic - StudentList\n\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListAcademic(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"Class-Advisor#/admin1/Academicdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListAcademic;\n","/** @format */\n\n//Class Advisor Academic\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useDisclosure,\n  Collapse,\n  Box,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListAcademic from \"components/Tables/StudentList/StudentListAcademic1\";\nimport { server_URL } from \"controller/urls_config\";\nimport { saveAs } from \"file-saver\";\n\nvar data2 = [];\n\nimport { CSVLink } from \"react-csv\";\n\nfunction Academic() {\n  const [data, setData] = useState([]);\n  const [file, setfile] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  // Toast var\n  const toast = useToast();\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"Academic\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  });\n\n  let onFileChange = (event) => {\n    setfile(event.target.files[0]);\n  };\n\n  // On file upload (click the upload button)\n  function onFileUpload() {\n    const formData = new FormData();\n    formData.append(\"excel\", file);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    axios.post(server_URL + \"bulkupload\", formData, config);\n  }\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n  const { isOpen, onToggle } = useDisclosure();\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\") {\n      return item;\n    } else if (\n      item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.batch.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n    ) {\n      return item;\n    }\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Academic Results\n            </Text>\n          </Flex>\n        </CardBody>\n\n        <CardHeader mt=\"1em\">\n          <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n            Search Student\n          </Text>\n        </CardHeader>\n        <InputGroup\n          bg={inputBg}\n          mt=\"1rem\"\n          mb=\"1rem\"\n          borderRadius=\"15px\"\n          w=\"cover\"\n          _focus={{\n            borderColor: { mainorange },\n          }}\n          _active={{\n            borderColor: { mainorange },\n          }}\n        >\n          <InputLeftElement\n            children={\n              <IconButton\n                bg=\"inherit\"\n                borderRadius=\"inherit\"\n                _hover=\"none\"\n                _active={{\n                  bg: \"inherit\",\n                  transform: \"none\",\n                  borderColor: \"transparent\",\n                }}\n                _focus={{\n                  boxShadow: \"none\",\n                }}\n                icon={<SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />}\n              ></IconButton>\n            }\n          />\n\n          <Input\n            onChange={(event) => setSearchTerm(event.target.value)}\n            fontSize=\"xs\"\n            py=\"11px\"\n            placeholder=\"Type here...\"\n            borderRadius=\"inherit\"\n            value={searchTerm}\n          />\n        </InputGroup>\n\n        <SimpleGrid\n          alignSelf={{ sm: \"center\", md: \"flex-end\" }}\n          columns={{ sm: 1, md: 2, xl: 2 }}\n        >\n          <Box>\n            <Button\n              minWidth={{ sm: \"75vw\", md: \"fit-content\" }}\n              onClick={onToggle}\n              colorScheme=\"orange\"\n              variant=\"solid\"\n              mb={{ sm: \"1em\", md: \"0em\" }}\n            >\n              Bulk Upload\n            </Button>\n          </Box>\n          <Box>\n            <CSVLink data={data2}>\n              <Button\n                minWidth={{ sm: \"75vw\", md: \"fit-content\" }}\n                colorScheme=\"orange\"\n                variant=\"solid\"\n                onClick={() =>\n                  toast({\n                    title: \"Report Downloaded Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  })\n                }\n              >\n                Download Report\n              </Button>\n            </CSVLink>\n          </Box>\n        </SimpleGrid>\n      </Card>\n      <Collapse in={isOpen} animateOpacity>\n        <Card color=\"white\" mb=\"4\" bg=\"orange.300\" rounded=\"md\" shadow=\"md\">\n          <Input width=\"50%\" type=\"file\" onChange={onFileChange} />\n          <Flex>\n            {\" \"}\n            <Button\n              onClick={() => {\n                onFileUpload();\n                onToggle();\n                toast({\n                  title: \"Uploaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                });\n              }}\n              ms=\"4\"\n              marginTop=\"2\"\n              bg=\"gray.700\"\n              width=\"fit-content\"\n            >\n              Confirm\n            </Button>\n            <Button\n              onClick={() => {\n                saveAs(server_URL + \"download_template\", \"template.xlsx\");\n              }}\n              ms=\"4\"\n              marginTop=\"2\"\n              bg=\"gray.700\"\n              width=\"fit-content\"\n            >\n              Download Template\n            </Button>\n          </Flex>\n        </Card>\n      </Collapse>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor} id=\"dataTable\">\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No.</Th>\n                <Th color=\"gray.400\">batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\") {\n                    return item;\n                  } else if (\n                    item.sname\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.roll_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.batch\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.reg_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase())\n                  ) {\n                    return item;\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListAcademic\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Academic;\n","/** @format */\n\n//Class Advisor Extracurricular - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListProfessionalDevelopment(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href =\n          URL + \"Class-Advisor#/admin1/ProfessionalDevelopmentData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListProfessionalDevelopment;\n","/** @format */\n\n//Class Advisor Professional Development\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\nvar data2 = [];\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListProfessionalDevelopment from \"components/Tables/StudentList/StudentListProfessionalDevelopment1\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction ProfessionalDevelopment() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios\n      .post(server_URL + \"ProfessionalDevelopmentCA\", params)\n      .then((items) => {\n        setData(items.data);\n        setLoading(true);\n      });\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\") {\n      return item;\n    } else if (\n      item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.batch.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n      item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n    ) {\n      return item;\n    }\n  });\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Professional Development\n            </Text>\n          </Flex>\n        </CardBody>\n        <CardHeader mt=\"1em\">\n          <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n            Search Student\n          </Text>\n        </CardHeader>\n\n        <InputGroup\n          bg={inputBg}\n          mt=\"1rem\"\n          borderRadius=\"15px\"\n          w=\"cover\"\n          _focus={{\n            borderColor: { mainorange },\n          }}\n          _active={{\n            borderColor: { mainorange },\n          }}\n        >\n          <InputLeftElement\n            children={\n              <IconButton\n                bg=\"inherit\"\n                borderRadius=\"inherit\"\n                _hover=\"none\"\n                _active={{\n                  bg: \"inherit\",\n                  transform: \"none\",\n                  borderColor: \"transparent\",\n                }}\n                _focus={{\n                  boxShadow: \"none\",\n                }}\n                icon={<SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />}\n              ></IconButton>\n            }\n          />\n\n          <Input\n            onChange={(event) => setSearchTerm(event.target.value)}\n            fontSize=\"xs\"\n            py=\"11px\"\n            placeholder=\"Type here...\"\n            borderRadius=\"inherit\"\n            value={searchTerm}\n          />\n        </InputGroup>\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n              colorScheme=\"orange\"\n              alignSelf=\"flex-end\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\") {\n                    return item;\n                  } else if (\n                    item.sname\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.roll_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.batch\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase()) ||\n                    item.reg_no\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase())\n                  ) {\n                    return item;\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListProfessionalDevelopment\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopment;\n","/** @format */\n\n//Class Advisor Profile\n\nimport React, { useState } from \"react\";\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  SimpleGrid,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  Portal,\n  PopoverFooter,\n  ButtonGroup,\n  Table,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Collapse,\n} from \"@chakra-ui/react\";\nimport { SettingsIcon, EditIcon, WarningIcon } from \"@chakra-ui/icons\";\n\nimport axios from \"axios\";\n\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\nimport { server_URL } from \"controller/urls_config\";\nimport change_pass from \"controller/changepassword\";\n\nfunction Profile() {\n  function validation() {\n    document.getElementById(\"pass-success\").style.display = \"none\";\n    var oldpass = document.getElementById(\"old-pass\").value;\n    var newpass = document.getElementById(\"new-pass\").value;\n    var repass = document.getElementById(\"re-pass\").value;\n    var numbers = /[0-9]/g;\n    var lowercase = /[a-z]/g;\n    var uppercase = /[A-Z]/g;\n    var symbol = /[!@#$%^&*]/g;\n    var checknum = newpass.match(numbers);\n    var checklower = newpass.match(lowercase);\n    var checkupper = newpass.match(uppercase);\n    var checksymbol = newpass.match(symbol);\n    var passlen = newpass.length;\n    // var repass = document.getElementById(\"repassword\").value;\n    if (\n      oldpass == newpass ||\n      passlen < 8 ||\n      checknum == null ||\n      checklower == null ||\n      checkupper == null ||\n      checksymbol == null ||\n      passlen >= 15 ||\n      newpass !== repass\n    ) {\n      if (oldpass == newpass) {\n        document.getElementById(\"pass-same\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-same\").style.display = \"none\";\n      }\n\n      if (passlen < 8) {\n        document.getElementById(\"pass-len\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-len\").style.display = \"none\";\n      }\n\n      if (checknum == null) {\n        document.getElementById(\"pass-num\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-num\").style.display = \"none\";\n      }\n\n      if (checklower == null) {\n        document.getElementById(\"pass-lower\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-lower\").style.display = \"none\";\n      }\n\n      if (checkupper == null) {\n        document.getElementById(\"pass-upper\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-upper\").style.display = \"none\";\n      }\n\n      if (checksymbol == null) {\n        document.getElementById(\"pass-symbol\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-symbol\").style.display = \"none\";\n      }\n\n      if (passlen <= 15) {\n        document.getElementById(\"pass-valid\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-valid\").style.display = \"block\";\n      }\n\n      if (newpass == repass) {\n        document.getElementById(\"pass-equal\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-equal\").style.display = \"block\";\n      }\n    } else {\n      document.getElementById(\"pass-same\").style.display = \"none\";\n      document.getElementById(\"pass-len\").style.display = \"none\";\n      document.getElementById(\"pass-num\").style.display = \"none\";\n      document.getElementById(\"pass-lower\").style.display = \"none\";\n      document.getElementById(\"pass-upper\").style.display = \"none\";\n      document.getElementById(\"pass-symbol\").style.display = \"none\";\n      document.getElementById(\"pass-valid\").style.display = \"none\";\n      document.getElementById(\"pass-equal\").style.display = \"none\";\n      change_pass();\n    }\n  }\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const [data, setData] = useState([]);\n  var ca_email = localStorage.getItem(\"caemail\");\n  var ca_dept = (localStorage.getItem(\"dept\")).toUpperCase();\n  var ca_batch = (localStorage.getItem(\"batch\")).toUpperCase();\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          bgImage={ProfileBgImage}\n          bgSize=\"cover\"\n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  Class Advisor : {ca_dept} {ca_batch}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                  {ca_email}\n                </Text>\n              </Flex>\n            </Flex>\n            <Popover placement=\"auto\">\n              <PopoverTrigger>\n                <Button\n                  minWidth=\"-moz-fit-content\"\n                  leftIcon={<SettingsIcon />}\n                  colorScheme=\"orange\"\n                >\n                  Settings\n                </Button>\n              </PopoverTrigger>\n              <Portal>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverHeader>Available Settings</PopoverHeader>\n                  <PopoverBody>\n                    <Button onClick={onOpen} leftIcon={<EditIcon />}>\n                      Change Password\n                    </Button>\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            </Popover>\n            <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Change Password</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter old Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter Old Password\"\n                        id=\"old-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter New Password\"\n                        id=\"new-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\">\n                        Re enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Re-Enter New Password\"\n                        id=\"re-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <SimpleGrid marginLeft=\"auto\" width=\"fit-content\" gap={5}>\n                    <Button\n                      m=\"1em\"\n                      colorScheme=\"orange\"\n                      variant=\"solid\"\n                      id=\"pass-button\"\n                      onClick={validation}\n                    >\n                      Change Password\n                    </Button>\n                  </SimpleGrid>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-mis\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Passwords Don't Match\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Incorrect Old Password or Username or Invalid User\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"server-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Server Error. Try again after some time\n                  </Text>\n                  <Text\n                    color=\"green\"\n                    id=\"pass-success\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Password Changed Successfully\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-same\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    New password cannot be same as the old password\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-num\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your new password should contain atleast 1 number\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-len\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be atleast 8 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-lower\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 lowercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-upper\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 uppercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-symbol\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 special\n                    character.Allowed special characters(!,@,#,$,%,^,&,*)\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-valid\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be between 8 and 15 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-equal\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Re entered password and new password dosen't match\n                  </Text>\n                </ModalBody>\n              </ModalContent>\n            </Modal>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            ></Flex>\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","/** @format */\n\n// Class Advisor routes\n\nimport Dashboard from \"views/Home/DashBoard/Dashboard1.js\";\nimport GeneralInformation from \"views/Home/GeneralInformation/GeneralInformation1\";\nimport InternationalExposure from \"views/Home/InternationalExposure/InternationalExposure1\";\nimport Extracurricular from \"views/Home/ExtraCurricular/Extracurricular1\";\nimport Academic from \"views/Home/Academic/Academic1\";\nimport ProfessionalDevelopment from \"views/Home/ProfessionalDevelopment/ProfessionalDevelopment1\";\n\nimport Profile from \"views/Home/Profile/Profile1.js\";\nimport SignIn from \"views/Pages/SignIn.js\";\n\nimport {\n  HomeIcon,\n  StatsIcon,\n  DocumentIcon,\n  PersonIcon,\n  RocketIcon,\n  CreditIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: <HomeIcon color=\"inherit\" />,\n    component: Dashboard,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/GeneralInformation\",\n    name: \"General Information\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: GeneralInformation,\n    layout: \"/admin1\",\n  },\n\n  {\n    path: \"/InternationalExposure\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        International Exposure\n      </p>\n    ),\n    icon: <RocketIcon color=\"inherit\" />,\n    component: InternationalExposure,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/Extracurricular\",\n    name: \"Extracurricular\",\n    icon: <CreditIcon color=\"inherit\" />,\n    component: Extracurricular,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/ProfessionalDevelopment\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          lineHeight: \"1.2rem\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        Professional Development\n      </p>\n    ),\n    icon: <CreditIcon color=\"inherit\" />,\n    component: ProfessionalDevelopment,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/Academics\",\n    name: \"Academics\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: Academic,\n    layout: \"/admin1\",\n  },\n\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    icon: <PersonIcon color=\"inherit\" />,\n    secondaryNavbar: true,\n    component: Profile,\n    layout: \"/admin1\",\n  },\n  {\n    path: \"/signin\",\n    name: \"Log Out\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: SignIn,\n    layout: \"/auth\",\n  },\n];\nexport default dashRoutes;\n","/** @format */\n\n// Chakra imports\nimport { Box, Flex, SimpleGrid, Stat, StatLabel } from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport BarChartInternship from \"components/Charts/BarChartInternship2\";\nimport BarChartPlacement from \"components/Charts/BarChartPlacement2\";\nimport LineChart from \"components/Charts/LineChartAcademics1\";\nimport BarChartAcademicSummary from \"components/Charts/BarChartAcademicSummary1\";\n\nexport default function Dashboard() {\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <BarChartAcademicSummary />\n        <LineChart />\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Placement Statistics\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\" pt={\"20px\"}>\n                <BarChartPlacement />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>\n\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\"1.5rem\"\n                >\n                  Internships\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\">\n                <BarChartInternship />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Box, Flex, Stat, StatLabel } from \"@chakra-ui/react\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nimport LineChartComponent from \"./LineChart\";\n\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction LineChart() {\n  const [batches, setbatches] = useState([\"2019-2023\"]);\n\n  const [batched_result, set_batched_result] = useState({\n    \"2020-2024\": [\n      {\n        name: \"CS123\",\n        data: [50, 40],\n      },\n    ],\n    \"2019-2023\": [\n      {\n        name: \"CS123\",\n        data: [50, 40],\n      },\n    ],\n  });\n\n  const [lineChartOptions, set_linechartOptions] = useState({\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    tooltip: {\n      theme: \"dark\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    xaxis: {\n      categories: [\"CAT1\", \"CAT2\"],\n      labels: {\n        style: {\n          colors: \"#c8cfca\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: \"#c8cfca\",\n          fontSize: \"12px\",\n        },\n      },\n    },\n    legend: {\n      show: true,\n    },\n    grid: {\n      strokeDashArray: 5,\n    },\n    fill: {\n      colors: [\"#aba0ef\", \"#2D3748\", \"#2D3790\"],\n    },\n    colors: [\"#aba0ef\", \"#2D3748\", \"#2D3790\"],\n  });\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", \"None\");\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useState(async () => {\n    axios.post(server_URL + \"AcademicsGraphHOD\", params).then((items) => {\n      set_batched_result(items.data.results.batched_result);\n      setbatches(Object.keys(items.data.results.batched_result));\n      set_linechartOptions({\n        ...lineChartOptions,\n        xaxis: {\n          categories: items.data.results.exams,\n          labels: {\n            style: {\n              colors: \"#c8cfca\",\n              fontSize: \"12px\",\n            },\n          },\n        },\n      });\n    });\n  });\n\n  return (\n    <>\n      {batches.map((res) => {\n        return (\n          <Card minH=\"300px\">\n            <CardBody>\n              <Flex\n                flexDirection=\"column\"\n                align=\"center\"\n                justify=\"center\"\n                w=\"100%\"\n              >\n                <Stat mr=\"auto\">\n                  <StatLabel\n                    fontSize=\"sm\"\n                    color=\"gray.400\"\n                    fontWeight=\"bold\"\n                    pb=\"1.5rem\"\n                  >\n                    Academics {res}\n                  </StatLabel>\n                </Stat>\n                <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\">\n                  <LineChartComponent\n                    lineChartOptions={lineChartOptions}\n                    series={batched_result[res]}\n                  />\n                </Box>\n              </Flex>\n            </CardBody>\n          </Card>\n        );\n      })}\n    </>\n  );\n}\n\nexport default LineChart;\n","// Academic summary Charts\n\nimport React, { useState } from \"react\";\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport BarChartComponent from \"./BarChart\";\nimport { Flex, Stat, StatLabel } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction BarChartAcademicSummary() {\n  const [batches, setbatches] = useState([\"2019-2023\"]);\n  const [chartData, setChartData] = useState({\n    \"2019-2023\": { 8.5: 2, 9.2: 1, 9.9: 1 },\n    \"2020-2024\": { 9.9: 5 },\n  });\n\n  // var chartData = { name: \"AcademicSummary\", data: student_lst };\n  let params = new URLSearchParams();\n  params.append(\"batch\", \"None\");\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n  useState(async () => {\n    axios.post(server_URL + \"AcademicSummaryGraphHOD\", params).then((items) => {\n      setbatches(items.data.batches);\n      setChartData(items.data.results);\n      // setstud(items.data.student_lst);\n      // chartOptions.xaxis.categories = items.data.CGPA;\n    });\n  });\n\n  return batches.map((res) => {\n    return (\n      <Card minH=\"300px\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Stat mr=\"auto\">\n              <StatLabel\n                fontSize=\"sm\"\n                color=\"gray.400\"\n                fontWeight=\"bold\"\n                pb=\"1.5rem\"\n              >\n                Academic Summary {res}\n              </StatLabel>\n            </Stat>\n            <BarChartComponent\n              chartData={Object.values(chartData[res])}\n              categories={Object.keys(chartData[res])}\n            />\n          </Flex>\n        </CardBody>\n      </Card>\n    );\n  });\n}\n\nexport default BarChartAcademicSummary;\n","/** @format */\n\n//HoD - StudentList GeneralInformation\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction GeneralParticularstablerow(props) {\n  const { roll, name, reg, batch, email } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"HoD#/admin2/GeneralInformationdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default GeneralParticularstablerow;\n","/** @format */\n\n//HoD Dashboard/General\n\nimport React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\n\n// loader and global vars\nvar Loader = require(\"react-loader\");\nvar data2 = [];\n\nimport SignIn from \"../../Pages/SignIn\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n  useToast,\n} from \"@chakra-ui/react\";\n\nimport { SearchIcon } from \"@chakra-ui/icons\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GeneralParticularstablerow from \"components/Tables/StudentList/StudentListGI2\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction GeneralInformationHOD() {\n  const [Loaded, setLoading] = useState(false),\n    [data, setData] = useState([]),\n    [searchTerm, setSearchTerm] = useState(\"\"),\n    [searchTerm1, setSearchTerm1] = useState(\"\");\n\n  // Toast var\n  const toast = useToast();\n\n  let params = new URLSearchParams();\n  let auth_token = localStorage.getItem(\"auth_token\");\n\n  params.append(\"department\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"GeneralHOD\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  });\n\n  // Filter Download Updates\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  // Styles\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  if (auth_token != -1) {\n    return (\n      <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                General Information\n              </Text>\n            </Flex>\n          </CardBody>\n          <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Search Batch\n                </Text>\n              </CardHeader>\n\n              <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm1(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type batch\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm1}\n                />\n              </InputGroup>\n            </Box>\n\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Search Student\n                </Text>\n              </CardHeader>\n              <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type here...\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm}\n                />\n              </InputGroup>\n            </Box>\n          </SimpleGrid>\n          <Box alignSelf=\"flex-end\">\n            <CSVLink data={data2}>\n              <Button\n                minWidth=\"fit-content\"\n                mt=\"1em\"\n                onClick=\"m\"\n                colorScheme=\"orange\"\n                alignSelf=\"flex-end\"\n                variant=\"solid\"\n                onClick={() =>\n                  toast({\n                    title: \"Report Downloaded Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  })\n                }\n              >\n                Download Report\n              </Button>\n            </CSVLink>\n          </Box>\n        </Card>\n        <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Students List\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Roll No.</Th>\n                  <Th color=\"gray.400\">Name</Th>\n                  <Th color=\"gray.400\">Register No</Th>\n                  <Th color=\"gray.400\">Batch</Th>\n                  <Th color=\"gray.400\">Email</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data\n                  .filter((item) => {\n                    if (searchTerm == \"\" && searchTerm1 == \"\") {\n                      return item;\n                    } else if (searchTerm1 != \"\" && searchTerm == \"\") {\n                      if (\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else {\n                      if (\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        if (\n                          item.sname\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase()) ||\n                          item.roll_no\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase()) ||\n                          item.reg_no\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase())\n                        ) {\n                          return item;\n                        }\n                      }\n                    }\n                  })\n                  .map((item) => {\n                    return (\n                      <GeneralParticularstablerow\n                        roll={item.roll_no}\n                        name={item.sname}\n                        reg={item.reg_no}\n                        batch={item.batch}\n                        email={item.licet_email}\n                      />\n                    );\n                  })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Flex>\n    );\n  } else {\n    return <SignIn></SignIn>;\n  }\n}\n\nexport default GeneralInformationHOD;\n","/** @format */\n\n//hod International Exposure - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListInternational(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"International\", roll);\n        window.location.href = URL + \"HoD#/admin2/InternationalData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListInternational;\n","/** @format */\n\n//Hod International Exposure\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\nvar data2 = [];\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListInternational from \"components/Tables/StudentList/StudentListInternational2\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction InternationalExposure() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  // Toast var\n  const toast = useToast();\n\n  useEffect(async () => {\n    axios.post(server_URL + \"InternationalExpoHOD\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              International Exposure\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick=\"m\"\n              colorScheme=\"orange\"\n              alignSelf=\"flex-end\"\n              variant=\"solid\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\" && searchTerm1 == \"\") {\n                    return item;\n                  } else if (searchTerm1 !== \"\" && searchTerm == \"\") {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListInternational\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default InternationalExposure;\n","/** @format */\n\n//HoD Extracurricular - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListExtraCurricular(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"HoD#/admin2/ExtracurricularData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListExtraCurricular;\n","/** @format */\n\n//HoD Extracurricular\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListExtraCurricular from \"components/Tables/StudentList/StudentListExtraCurricular2\";\nimport { server_URL } from \"controller/urls_config\";\n\nvar data2 = [];\nvar Loader = require(\"react-loader\");\n\nimport { CSVLink } from \"react-csv\";\n\nfunction Extracurricular() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", \"None\");\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"ExtracurricularCA\", params).then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  }, []);\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm1 != \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Extracurricular\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n              colorScheme=\"orange\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\" && searchTerm1 == \"\") {\n                    return item;\n                  } else if (searchTerm1 != \"\" && searchTerm == \"\") {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListExtraCurricular\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Extracurricular;\n","/** @format */\n\n//HoD Academic - StudentList\n\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListAcademic(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"HoD#/admin2/Academicdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListAcademic;\n","/** @format */\n\n//HoD Academic\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListAcademic from \"components/Tables/StudentList/StudentListAcademic2\";\nimport { server_URL } from \"controller/urls_config\";\n\nvar data2 = [];\nimport { CSVLink } from \"react-csv\";\n\nfunction Academic() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"department\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"AcademicsDataHOD\", params).then((items) => {\n      setData(items.data);\n      setLoading(false);\n    });\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Academic Results\n            </Text>\n          </Flex>\n        </CardBody>\n\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick=\"m\"\n              colorScheme=\"orange\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody overflowX={{ sm: \"scroll\" }}>\n          <Table variant=\"simple\" color={textColor} id=\"dataTable\">\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No.</Th>\n                <Th color=\"gray.400\">batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListAcademic\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Academic;\n","/** @format */\n\n//HoD Professional Developement - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListProfessionalDevelopment(props) {\n  const { name, email, reg, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"HoD#/admin2/ProfessionalDevelopmentData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListProfessionalDevelopment;\n","/** @format */\n\n//HoD Professional Development\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListProfessionalDevelopment from \"components/Tables/StudentList/StudentListProfessionalDevelopment2\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar data2 = [];\nvar Loader = require(\"react-loader\");\n\nimport { CSVLink } from \"react-csv\";\n\nfunction ProfessionalDevelopment() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios\n      .post(server_URL + \"ProfessionalDevelopmentHOD\", params)\n      .then((items) => {\n        console.log(items);\n        setData(items.data);\n        setLoading(true);\n      });\n  }, []);\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  data2 = data.filter((item) => {\n    if (searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm1 != \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Professional Development\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n              colorScheme=\"orange\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\" && searchTerm1 == \"\") {\n                    return item;\n                  } else if (searchTerm1 != \"\" && searchTerm == \"\") {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListProfessionalDevelopment\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopment;\n","/** @format */\n\n//Class Advisor Profile\n\nimport React, { useState } from \"react\";\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  SimpleGrid,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  Portal,\n  PopoverFooter,\n  ButtonGroup,\n  Table,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Collapse,\n} from \"@chakra-ui/react\";\nimport { SettingsIcon, EditIcon, WarningIcon } from \"@chakra-ui/icons\";\n\nimport axios from \"axios\";\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\nimport { server_URL } from \"controller/urls_config\";\nimport change_pass from \"controller/changepassword\";\n\nfunction Profile() {\n  function validation() {\n    document.getElementById(\"pass-success\").style.display = \"none\";\n    var oldpass = document.getElementById(\"old-pass\").value;\n    var newpass = document.getElementById(\"new-pass\").value;\n    var repass = document.getElementById(\"re-pass\").value;\n    var numbers = /[0-9]/g;\n    var lowercase = /[a-z]/g;\n    var uppercase = /[A-Z]/g;\n    var symbol = /[!@#$%^&*]/g;\n    var checknum = newpass.match(numbers);\n    var checklower = newpass.match(lowercase);\n    var checkupper = newpass.match(uppercase);\n    var checksymbol = newpass.match(symbol);\n    var passlen = newpass.length;\n    // var repass = document.getElementById(\"repassword\").value;\n    if (\n      oldpass == newpass ||\n      passlen < 8 ||\n      checknum == null ||\n      checklower == null ||\n      checkupper == null ||\n      checksymbol == null ||\n      passlen >= 15 ||\n      newpass !== repass\n    ) {\n      if (oldpass == newpass) {\n        document.getElementById(\"pass-same\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-same\").style.display = \"none\";\n      }\n\n      if (passlen < 8) {\n        document.getElementById(\"pass-len\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-len\").style.display = \"none\";\n      }\n\n      if (checknum == null) {\n        document.getElementById(\"pass-num\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-num\").style.display = \"none\";\n      }\n\n      if (checklower == null) {\n        document.getElementById(\"pass-lower\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-lower\").style.display = \"none\";\n      }\n\n      if (checkupper == null) {\n        document.getElementById(\"pass-upper\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-upper\").style.display = \"none\";\n      }\n\n      if (checksymbol == null) {\n        document.getElementById(\"pass-symbol\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-symbol\").style.display = \"none\";\n      }\n\n      if (passlen <= 15) {\n        document.getElementById(\"pass-valid\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-valid\").style.display = \"block\";\n      }\n\n      if (newpass == repass) {\n        document.getElementById(\"pass-equal\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-equal\").style.display = \"block\";\n      }\n    } else {\n      document.getElementById(\"pass-same\").style.display = \"none\";\n      document.getElementById(\"pass-len\").style.display = \"none\";\n      document.getElementById(\"pass-num\").style.display = \"none\";\n      document.getElementById(\"pass-lower\").style.display = \"none\";\n      document.getElementById(\"pass-upper\").style.display = \"none\";\n      document.getElementById(\"pass-symbol\").style.display = \"none\";\n      document.getElementById(\"pass-valid\").style.display = \"none\";\n      document.getElementById(\"pass-equal\").style.display = \"none\";\n      change_pass();\n    }\n  }\n  var sname, licet_email, roll_no, dept, reg_no, batch, cell, year;\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n\n  var hod_email = localStorage.getItem(\"hodemail\");\n  var hod_dept = localStorage.getItem(\"dept\");\n  hod_dept = hod_dept.toUpperCase();\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          bgImage={ProfileBgImage}\n          bgSize=\"cover\"\n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  HoD : {hod_dept}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                  {hod_email}\n                </Text>\n              </Flex>\n            </Flex>\n            <Popover placement=\"auto\">\n              <PopoverTrigger>\n                <Button\n                  minWidth=\"-moz-fit-content\"\n                  leftIcon={<SettingsIcon />}\n                  colorScheme=\"orange\"\n                >\n                  Settings\n                </Button>\n              </PopoverTrigger>\n              <Portal>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverHeader>Available Settings</PopoverHeader>\n                  <PopoverBody>\n                    <Button onClick={onOpen} leftIcon={<EditIcon />}>\n                      Change Password\n                    </Button>\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            </Popover>\n            <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Change Password</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter old Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter Old Password\"\n                        id=\"old-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter New Password\"\n                        id=\"new-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\">\n                        Re enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Re-Enter New Password\"\n                        id=\"re-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <SimpleGrid marginLeft=\"auto\" width=\"fit-content\" gap={5}>\n                    <Button\n                      m=\"1em\"\n                      colorScheme=\"orange\"\n                      variant=\"solid\"\n                      id=\"pass-button\"\n                      onClick={validation}\n                    >\n                      Change Password\n                    </Button>\n                  </SimpleGrid>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-mis\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Passwords Don't Match\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Incorrect Old Password or Username or Invalid User\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"server-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Server Error. Try again after some time\n                  </Text>\n                  <Text\n                    color=\"green\"\n                    id=\"pass-success\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Password Changed Successfully\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-same\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    New password cannot be same as the old password\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-num\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your new password should contain atleast 1 number\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-len\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be atleast 8 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-lower\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 lowercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-upper\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 uppercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-symbol\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 special\n                    character.Allowed special characters(!,@,#,$,%,^,&,*)\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-valid\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be between 8 and 15 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-equal\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Re entered password and new password dosen't match\n                  </Text>\n                </ModalBody>\n              </ModalContent>\n            </Modal>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            ></Flex>\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","/** @format */\n\n// HoD routes\n\nimport Dashboard from \"views/Home/DashBoard/Dashboard2.js\";\nimport GeneralInformation from \"views/Home/GeneralInformation/GeneralInformation2\";\nimport InternationalExposure from \"views/Home/InternationalExposure/InternationalExposure2\";\nimport Extracurricular from \"views/Home/ExtraCurricular/Extracurricular2\";\nimport Academic from \"views/Home/Academic/Academic2\";\nimport ProfessionalDevelopment from \"views/Home/ProfessionalDevelopment/ProfessionalDevelopment2\";\n\nimport Profile from \"views/Home/Profile/Profile2.js\";\nimport SignIn from \"views/Pages/SignIn.js\";\n\nimport {\n  HomeIcon,\n  StatsIcon,\n  CreditIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: <HomeIcon color=\"inherit\" />,\n    component: Dashboard,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/GeneralInformation\",\n    name: \"General Information\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: GeneralInformation,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/InternationalExposure\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        International Exposure\n      </p>\n    ),\n    icon: <RocketIcon color=\"inherit\" />,\n    component: InternationalExposure,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/Extracurricular\",\n    name: \"Extracurricular\",\n    icon: <CreditIcon color=\"inherit\" />,\n    component: Extracurricular,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/ProfessionalDevelopment\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          lineHeight: \"1.2rem\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        Professional Development\n      </p>\n    ),\n    icon: <CreditIcon color=\"inherit\" />,\n    component: ProfessionalDevelopment,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/Academics\",\n    name: \"Academics\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: Academic,\n    layout: \"/admin2\",\n  },\n\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    icon: <PersonIcon color=\"inherit\" />,\n    secondaryNavbar: true,\n    component: Profile,\n    layout: \"/admin2\",\n  },\n  {\n    path: \"/signin\",\n    name: \"Log Out\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: SignIn,\n    layout: \"/auth\",\n  },\n];\nexport default dashRoutes;\n","/** @format */\n\n// Chakra imports\nimport { Box, Flex, SimpleGrid, Stat, StatLabel } from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport BarChartInternship from \"components/Charts/BarChartInternship2\";\nimport BarChartPlacement from \"components/Charts/BarChartPlacement2\";\nimport LineChartAcademics from \"components/Charts/LineChartAcademics2\";\nimport BarChartAcademicSummary from \"components/Charts/BarChartAcademicSummary2\";\nexport default function Dashboard() {\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Placement\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\" pt={\"20px\"}>\n                <BarChartPlacement />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>{\" \"}\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\"1.5rem\"\n                >\n                  Internships\n                </StatLabel>\n              </Stat>\n              <BarChartInternship />\n            </Flex>\n          </CardBody>\n        </Card>\n        <BarChartAcademicSummary />\n        <LineChartAcademics />\n      </SimpleGrid>\n    </Flex>\n  );\n}\n","// Internship Charts\n\nimport React, { useState } from \"react\";\nimport Card from \"components/Card/Card\";\nimport Chart from \"react-apexcharts\";\n\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction BarChartInternship() {\n  const [chartData, setChartData] = useState({\n    name: \"Internship\",\n    data: [],\n  });\n  const [chartOptions, setchartOptions] = useState({\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    tooltip: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n      onDatasetHover: {\n        style: {\n          backgroundColor: \"red\",\n          fontSize: \"12px\",\n          fontFamily: undefined,\n        },\n      },\n      theme: \"dark\",\n    },\n    xaxis: {\n      categories: [\"2019-2023\"],\n      show: true,\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"12px\",\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: {\n      show: true,\n      color: \"#fff\",\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    grid: {\n      show: false,\n    },\n    fill: {\n      colors: \"#fff\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 8,\n        columnWidth: \"12px\",\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n            },\n          },\n        },\n      },\n    ],\n  });\n\n  useState(async () => {\n    axios.post(server_URL + \"InternshipGraphOfficial\").then((items) => {\n      setChartData({\n        ...chartData,\n        data: items.data.intern_lst,\n      });\n      setchartOptions({\n        ...chartOptions,\n        xaxis: {\n          categories: items.data.batches,\n          show: true,\n          labels: {\n            show: true,\n            style: {\n              colors: \"#fff\",\n              fontSize: \"12px\",\n            },\n          },\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n      });\n    });\n  });\n\n  return (\n    <Card\n      py=\"1rem\"\n      height={{ sm: \"200px\" }}\n      width=\"100%\"\n      bg=\"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\"\n      position=\"relative\"\n    >\n      <Chart\n        options={chartOptions}\n        series={[chartData]}\n        type=\"bar\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </Card>\n  );\n}\n\nexport default BarChartInternship;\n","// Placement Charts\n\nimport React, { useState } from \"react\";\nimport Card from \"components/Card/Card\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { URL, server_URL } from \"controller/urls_config\";\n\nlet chartOptions = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    style: {\n      backgroundColor: \"red\",\n      fontSize: \"12px\",\n      fontFamily: undefined,\n    },\n    onDatasetHover: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n    },\n    theme: \"dark\",\n  },\n  xaxis: {\n    categories: [\"2019-2023\"],\n    show: true,\n    labels: {\n      show: true,\n      style: {\n        colors: \"#fff\",\n        fontSize: \"12px\",\n      },\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: true,\n    color: \"#fff\",\n    labels: {\n      show: true,\n      style: {\n        colors: \"#fff\",\n        fontSize: \"14px\",\n      },\n    },\n  },\n  grid: {\n    show: false,\n  },\n  fill: {\n    colors: \"#fff\",\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  plotOptions: {\n    bar: {\n      borderRadius: 8,\n      columnWidth: \"12px\",\n    },\n  },\n  responsive: [\n    {\n      breakpoint: 768,\n      options: {\n        plotOptions: {\n          bar: {\n            borderRadius: 0,\n          },\n        },\n      },\n    },\n  ],\n};\n\nfunction BarChartPlacement() {\n  const [chartData, setChartData] = useState({\n    name: \"Internship\",\n    data: [],\n  });\n  const [chartOptions, setchartOptions] = useState({\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    tooltip: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n      onDatasetHover: {\n        style: {\n          backgroundColor: \"red\",\n          fontSize: \"12px\",\n          fontFamily: undefined,\n        },\n      },\n      theme: \"dark\",\n    },\n    xaxis: {\n      categories: [\"2019-2023\"],\n      show: true,\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"12px\",\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: {\n      show: true,\n      color: \"#fff\",\n      labels: {\n        show: true,\n        style: {\n          colors: \"#fff\",\n          fontSize: \"14px\",\n        },\n      },\n    },\n    grid: {\n      show: false,\n    },\n    fill: {\n      colors: \"#fff\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 8,\n        columnWidth: \"12px\",\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 768,\n        options: {\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n            },\n          },\n        },\n      },\n    ],\n  });\n\n  let params = new URLSearchParams();\n\n  useState(async () => {\n    axios.post(server_URL + \"PlacementGraphOfficial\", params).then((items) => {\n      setChartData({ ...chartData, data: items.data.placement_lst });\n      setchartOptions({\n        ...chartOptions,\n        xaxis: {\n          categories: items.data.batches,\n          show: true,\n          labels: {\n            show: true,\n            style: {\n              colors: \"#fff\",\n              fontSize: \"12px\",\n            },\n          },\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n        },\n      });\n    });\n  });\n\n  return (\n    <Card\n      py=\"1rem\"\n      height={{ sm: \"200px\" }}\n      width=\"100%\"\n      bg=\"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\"\n      position=\"relative\"\n    >\n      <Chart\n        options={chartOptions}\n        series={[chartData]}\n        type=\"bar\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </Card>\n  );\n}\n\nexport default BarChartPlacement;\n","/** @format */\n\n//Official - StudentList GeneralInformation\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction GeneralParticularstablerow(props) {\n  const { roll, name, reg, dept, batch, email } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"LICET#/admin3/GeneralInformationdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td minWidth=\"6em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default GeneralParticularstablerow;\n","/** @format */\n\n//Official Dashboard/General\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\n\nvar data2 = [];\n\nvar Loader = require(\"react-loader\");\nimport SignIn from \"../../Pages/SignIn\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n  useToast,\n  Select,\n} from \"@chakra-ui/react\";\n\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GeneralParticularstablerow from \"components/Tables/StudentList/StudentListGI3\";\n\nimport { server_URL } from \"controller/urls_config\";\n\n// Loading var\nvar is_loading = true;\n\nfunction GeneralInformation3() {\n  const [data, setData] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [data4, setData4] = useState([]);\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n\n  // Toast var\n  const toast = useToast();\n\n  params.append(\"department\", localStorage.getItem(\"dept\"));\n  let auth_token = localStorage.getItem(\"auth_token\");\n\n  // useEffect(async () => {\n  //   axios.post(server_URL + \"GeneralOfficial\", params).then((items) => {\n  //     setData(items.data);\n  //     setLoading(true);\n  //   });\n\n  // });\n\n  // useEffect(async () => {\n  // axios.post(server_URL + \"GeneralOfficialDepartment\",params).then((items) => {\n  //   setData3(items.data3);\n  //   });\n  // });\n\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"GeneralOfficial\", params),\n        axios.post(server_URL + \"GeneralOfficialDepartment\", params),\n        axios.post(server_URL + \"GeneralOfficialBatch\", params),\n      ])\n      .then(\n        axios.spread((data, data3, data4) => {\n          setData(data.data);\n          setData3(data3.data);\n          setData4(data4.data);\n          setLoading(true);\n        })\n      );\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  if (auth_token != -1) {\n    return (\n      <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                General Information\n              </Text>\n            </Flex>\n          </CardBody>\n          <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Select Department\n                </Text>\n              </CardHeader>\n\n              {/* <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm2(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type department\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm2}\n                />\n              </InputGroup> */}\n\n              <Select\n                mt=\"1em\"\n                bg={inputBg}\n                placeholder=\"Department\"\n                id=\"dept\"\n                onChange={(e) => setSearchTerm2(e.target.value)}\n              >\n                {data3.map((data) => {\n                  return <option value={data.dept}>{data.dept}</option>;\n                })}\n              </Select>\n            </Box>\n\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Select Batch\n                </Text>\n              </CardHeader>\n\n              {/* <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm1(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type batch\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm1}\n                />\n              </InputGroup> */}\n              <Select\n                mt=\"1em\"\n                bg={inputBg}\n                placeholder=\"Batch\"\n                id=\"batch\"\n                onChange={(e) => setSearchTerm1(e.target.value)}\n              >\n                {data4.map((data) => {\n                  return <option value={data.batch}>{data.batch}</option>;\n                })}\n              </Select>\n            </Box>\n\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Search Student\n                </Text>\n              </CardHeader>\n              <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type here...\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm}\n                />\n              </InputGroup>\n            </Box>\n          </SimpleGrid>\n          <Box alignSelf=\"flex-end\">\n            <CSVLink data={data2}>\n              <Button\n                minWidth=\"fit-content\"\n                mt=\"1em\"\n                onClick=\"m\"\n                colorScheme=\"orange\"\n                alignSelf=\"flex-end\"\n                variant=\"solid\"\n                onClick={() =>\n                  toast({\n                    title: \"Report Downloaded Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  })\n                }\n              >\n                Download Report\n              </Button>\n            </CSVLink>\n          </Box>\n        </Card>\n        <Card overflowX={{ sm: \"scroll\", md: \"scroll\", xl: \"scroll\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Students List\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Roll No.</Th>\n                  <Th color=\"gray.400\">Name</Th>\n                  <Th color=\"gray.400\">Register No</Th>\n                  <Th color=\"gray.400\">Department</Th>\n                  <Th color=\"gray.400\">Batch</Th>\n                  <Th color=\"gray.400\">Email</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data\n                  .filter((item) => {\n                    if (\n                      searchTerm2 == \"\" &&\n                      searchTerm == \"\" &&\n                      searchTerm1 == \"\"\n                    ) {\n                      return item;\n                    } else if (\n                      searchTerm2 !== \"\" &&\n                      searchTerm1 == \"\" &&\n                      searchTerm == \"\"\n                    ) {\n                      if (\n                        item.dept\n                          .toLowerCase()\n                          .includes(searchTerm2.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else if (\n                      searchTerm2 == \"\" &&\n                      searchTerm1 !== \"\" &&\n                      searchTerm == \"\"\n                    ) {\n                      if (\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else if (\n                      searchTerm2 !== \"\" &&\n                      searchTerm1 !== \"\" &&\n                      searchTerm == \"\"\n                    ) {\n                      if (\n                        item.dept\n                          .toLowerCase()\n                          .includes(searchTerm2.toLocaleLowerCase()) &&\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else {\n                      if (\n                        item.dept\n                          .toLowerCase()\n                          .includes(searchTerm2.toLocaleLowerCase()) &&\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        if (\n                          item.sname\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase()) ||\n                          item.roll_no\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase()) ||\n                          item.reg_no\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase())\n                        ) {\n                          return item;\n                        }\n                      }\n                    }\n                  })\n                  .map((item) => {\n                    return (\n                      <GeneralParticularstablerow\n                        roll={item.roll_no}\n                        name={item.sname}\n                        reg={item.reg_no}\n                        batch={item.batch}\n                        email={item.licet_email}\n                        dept={item.dept}\n                      />\n                    );\n                  })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Flex>\n    );\n  } else {\n    return <SignIn></SignIn>;\n  }\n}\n\nexport default GeneralInformation3;\n","/** @format */\n\n//Official International Exposure - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListInternational(props) {\n  const { name, email, reg, roll, batch, dept } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"International\", roll);\n        window.location.href = URL + \"LICET#/admin3/InternationalData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td minWidth=\"6em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListInternational;\n","/** @format */\n\n//Official International Exposure\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\n\nvar data2 = [];\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListInternational from \"components/Tables/StudentList/StudentListInternational3\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction InternationalExposure() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  // Toast var\n  const toast = useToast();\n\n  let params = new URLSearchParams();\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios\n      .post(server_URL + \"InternationalExpoofficial\", params)\n      .then((items) => {\n        setData(items.data);\n        setLoading(true);\n      });\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              International Exposure\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick=\"m\"\n              colorScheme=\"orange\"\n              alignSelf=\"flex-end\"\n              variant=\"solid\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody overflowX={{ sm: \"scroll\" }}>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListInternational\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default InternationalExposure;\n","/** @format */\n\n//Class Advisor Extracurricular - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListExtraCurricular(props) {\n  const { name, email, reg, dept, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"LICET#/admin3/ExtracurricularData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td minWidth=\"6em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListExtraCurricular;\n","/** @format */\n\n//Official Extracurricular\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListExtraCurricular from \"components/Tables/StudentList/StudentListExtraCurricular3\";\n\nimport { server_URL } from \"controller/urls_config\";\nvar Loader = require(\"react-loader\");\nvar is_loading = true;\n\nfunction Extracurricular() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"ExtracurricularCA\", params).then((items) => {\n      setData(items.data);\n      is_loading = false;\n    });\n  }, []);\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Extracurricular\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n\n        <Button\n          minWidth=\"fit-content\"\n          mt=\"1em\"\n          onClick={() =>\n            toast({\n              title: \"Report Downloaded Successfully\",\n              status: \"success\",\n              duration: 9000,\n              position: \"top\",\n              isClosable: true,\n            })\n          }\n          colorScheme=\"orange\"\n          alignSelf=\"flex-end\"\n          variant=\"solid\"\n        >\n          Download Report\n        </Button>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListExtraCurricular\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Extracurricular;\n","/** @format */\n\n//HoD Professional Developement - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListProfessionalDevelopment(props) {\n  const { name, email, reg, dept, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href =\n          URL + \"LICET#/admin3/ProfessionalDevelopmentData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListProfessionalDevelopment;\n","/** @format */\n\n//HoD Professional Development\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListProfessionalDevelopment from \"components/Tables/StudentList/StudentListProfessionalDevelopment3\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar data2 = [];\nvar Loader = require(\"react-loader\");\n\nimport { CSVLink } from \"react-csv\";\n\nfunction ProfessionalDevelopment() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios\n      .post(server_URL + \"ProfessionalDevelopmentCA\", params)\n      .then((items) => {\n        setData(items.data);\n        setLoading(true);\n      });\n  }, []);\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Professional Development\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n              colorScheme=\"orange\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListProfessionalDevelopment\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      dept={item.dept}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopment;\n","/** @format */\n\n//Official Academic - StudentList\n\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListAcademic(props) {\n  const { name, email, reg, roll, dept, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"Official#/admin3/Academicdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListAcademic;\n","//Official Academic\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListAcademic from \"components/Tables/StudentList/StudentListAcademic3\";\nimport { server_URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction Academic() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n  let params = new URLSearchParams();\n\n  useEffect(async () => {\n    axios.post(server_URL + \"AcademicsDataofficial\").then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Academic Results\n            </Text>\n          </Flex>\n        </CardBody>\n\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n        <Button\n          mt=\"1em\"\n          minWidth=\"fit-content\"\n          onClick=\"m\"\n          colorScheme=\"orange\"\n          alignSelf=\"flex-end\"\n          variant=\"solid\"\n        >\n          Download Report\n        </Button>\n      </Card>\n      <Card>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody overflowX={{ sm: \"scroll\" }}>\n          <Table variant=\"simple\" color={textColor} id=\"dataTable\">\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No.</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListAcademic\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Academic;\n","/** @format */\n\n//Class Advisor Profile\n\nimport React, { useState } from \"react\";\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  SimpleGrid,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  Portal,\n  PopoverFooter,\n  ButtonGroup,\n  Table,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Collapse,\n} from \"@chakra-ui/react\";\nimport { SettingsIcon, EditIcon, WarningIcon } from \"@chakra-ui/icons\";\n\nimport axios from \"axios\";\n// Custom components\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody\";\nimport CardHeader from \"components/Card/CardHeader\";\n// Assets\nimport avatar8 from \"assets/img/avatars/avatar8.jpg\";\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\nimport { server_URL } from \"controller/urls_config\";\nimport change_pass from \"controller/changepassword\";\n\nfunction Profile() {\n  function validation() {\n    document.getElementById(\"pass-success\").style.display = \"none\";\n    var oldpass = document.getElementById(\"old-pass\").value;\n    var newpass = document.getElementById(\"new-pass\").value;\n    var repass = document.getElementById(\"re-pass\").value;\n    var numbers = /[0-9]/g;\n    var lowercase = /[a-z]/g;\n    var uppercase = /[A-Z]/g;\n    var symbol = /[!@#$%^&*]/g;\n    var checknum = newpass.match(numbers);\n    var checklower = newpass.match(lowercase);\n    var checkupper = newpass.match(uppercase);\n    var checksymbol = newpass.match(symbol);\n    var passlen = newpass.length;\n    // var repass = document.getElementById(\"repassword\").value;\n    if (\n      oldpass == newpass ||\n      passlen < 8 ||\n      checknum == null ||\n      checklower == null ||\n      checkupper == null ||\n      checksymbol == null ||\n      passlen >= 15 ||\n      newpass !== repass\n    ) {\n      if (oldpass == newpass) {\n        document.getElementById(\"pass-same\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-same\").style.display = \"none\";\n      }\n\n      if (passlen < 8) {\n        document.getElementById(\"pass-len\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-len\").style.display = \"none\";\n      }\n\n      if (checknum == null) {\n        document.getElementById(\"pass-num\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-num\").style.display = \"none\";\n      }\n\n      if (checklower == null) {\n        document.getElementById(\"pass-lower\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-lower\").style.display = \"none\";\n      }\n\n      if (checkupper == null) {\n        document.getElementById(\"pass-upper\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-upper\").style.display = \"none\";\n      }\n\n      if (checksymbol == null) {\n        document.getElementById(\"pass-symbol\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-symbol\").style.display = \"none\";\n      }\n\n      if (passlen <= 15) {\n        document.getElementById(\"pass-valid\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-valid\").style.display = \"block\";\n      }\n\n      if (newpass == repass) {\n        document.getElementById(\"pass-equal\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-equal\").style.display = \"block\";\n      }\n    } else {\n      document.getElementById(\"pass-same\").style.display = \"none\";\n      document.getElementById(\"pass-len\").style.display = \"none\";\n      document.getElementById(\"pass-num\").style.display = \"none\";\n      document.getElementById(\"pass-lower\").style.display = \"none\";\n      document.getElementById(\"pass-upper\").style.display = \"none\";\n      document.getElementById(\"pass-symbol\").style.display = \"none\";\n      document.getElementById(\"pass-valid\").style.display = \"none\";\n      document.getElementById(\"pass-equal\").style.display = \"none\";\n      change_pass();\n    }\n  }\n  var sname, licet_email, roll_no, dept, reg_no, batch, cell, year;\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n\n  var off_email = localStorage.getItem(\"offemail\");\n  var off_arr_name = (localStorage.getItem(\"offemail\")).split('@');\n  var  off_name = (off_arr_name[0]).toUpperCase();\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          bgImage={ProfileBgImage}\n          bgSize=\"cover\"\n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  LICET : {off_name}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                  {off_email}\n                </Text>\n              </Flex>\n            </Flex>\n            <Popover placement=\"auto\">\n              <PopoverTrigger>\n                <Button\n                  minWidth=\"-moz-fit-content\"\n                  leftIcon={<SettingsIcon />}\n                  colorScheme=\"orange\"\n                >\n                  Settings\n                </Button>\n              </PopoverTrigger>\n              <Portal>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverHeader>Available Settings</PopoverHeader>\n                  <PopoverBody>\n                    <Button onClick={onOpen} leftIcon={<EditIcon />}>\n                      Change Password\n                    </Button>\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            </Popover>\n            <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Change Password</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter old Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter Old Password\"\n                        id=\"old-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter New Password\"\n                        id=\"new-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\">\n                        Re enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Re-Enter New Password\"\n                        id=\"re-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <SimpleGrid marginLeft=\"auto\" width=\"fit-content\" gap={5}>\n                    <Button\n                      m=\"1em\"\n                      colorScheme=\"orange\"\n                      variant=\"solid\"\n                      id=\"pass-button\"\n                      onClick={validation}\n                    >\n                      Change Password\n                    </Button>\n                  </SimpleGrid>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-mis\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Passwords Don't Match\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Incorrect Old Password or Username or Invalid User\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"server-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Server Error. Try again after some time\n                  </Text>\n                  <Text\n                    color=\"green\"\n                    id=\"pass-success\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Password Changed Successfully\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-same\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    New password cannot be same as the old password\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-num\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your new password should contain atleast 1 number\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-len\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be atleast 8 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-lower\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 lowercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-upper\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 uppercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-symbol\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 special\n                    character.Allowed special characters(!,@,#,$,%,^,&,*)\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-valid\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be between 8 and 15 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-equal\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Re entered password and new password dosen't match\n                  </Text>\n                </ModalBody>\n              </ModalContent>\n            </Modal>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            ></Flex>\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","/** @format */\n\n// Official routes\n\nimport Dashboard from \"views/Home/DashBoard/Dashboard3\";\nimport GeneralInformation from \"views/Home/GeneralInformation/GeneralInformation3\";\nimport InternationalExposure3 from \"views/Home/InternationalExposure/InternationalExposure3\";\nimport Extracurricular from \"views/Home/ExtraCurricular/Extracurricular3\";\nimport ProfessionalDevelopment from \"views/Home/ProfessionalDevelopment/ProfessionalDevelopment3\";\nimport Academic from \"views/Home/Academic/Academic3\";\n\nimport Profile from \"views/Home/Profile/Profile3.js\";\nimport SignIn from \"views/Pages/SignIn.js\";\n\nimport {\n  HomeIcon,\n  StatsIcon,\n  CreditIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: <HomeIcon color=\"inherit\" />,\n    component: Dashboard,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/GeneralInformation\",\n    name: \"General Information\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: GeneralInformation,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/InternationalExposure\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        International Exposure\n      </p>\n    ),\n    icon: <RocketIcon color=\"inherit\" />,\n    component: InternationalExposure3,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/Extracurricular\",\n    name: \"Extracurricular\",\n    icon: <CreditIcon color=\"inherit\" />,\n    component: Extracurricular,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/ProfessionalDevelopment\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          lineHeight: \"1.2rem\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        Professional Development\n      </p>\n    ),\n    icon: <CreditIcon color=\"inherit\" />,\n    component: ProfessionalDevelopment,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/Academics\",\n    name: \"Academics\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: Academic,\n    layout: \"/admin3\",\n  },\n\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    icon: <PersonIcon color=\"inherit\" />,\n    secondaryNavbar: true,\n    component: Profile,\n    layout: \"/admin3\",\n  },\n  {\n    path: \"/signin\",\n    name: \"Log Out\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: SignIn,\n    layout: \"/auth\",\n  },\n];\nexport default dashRoutes;\n","/** @format */\n\n// Chakra imports\nimport { Box, Flex, SimpleGrid, Stat, StatLabel } from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport BarChartInternship from \"components/Charts/BarChartInternship3\";\nimport BarChartPlacement from \"components/Charts/BarChartPlacement3\";\n\nexport default function Dashboard() {\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Placement Statistics\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\" pt={\"20px\"}>\n                <BarChartPlacement />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>\n\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\"1.5rem\"\n                >\n                  Internships\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\">\n                <BarChartInternship />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n","/** @format */\n\n//Official - StudentList GeneralInformation\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction GeneralParticularstablerow(props) {\n  const { roll, name, reg, dept, batch, email } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"Admin#/admin4/GeneralInformationdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td minWidth=\"6em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default GeneralParticularstablerow;\n","/** @format */\n\n//Official Dashboard/General\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\n\nvar data2 = [];\n\nvar Loader = require(\"react-loader\");\nimport SignIn from \"../../Pages/SignIn\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n  useToast,\n  Select,\n} from \"@chakra-ui/react\";\n\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport GeneralParticularstablerow from \"components/Tables/StudentList/StudentListGI4\";\n\nimport { server_URL } from \"controller/urls_config\";\n\n// Loading var\nvar is_loading = true;\n\nfunction GeneralInformation3() {\n  const [data, setData] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [data4, setData4] = useState([]);\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n\n  // Toast var\n  const toast = useToast();\n\n  params.append(\"department\", localStorage.getItem(\"dept\"));\n  let auth_token = localStorage.getItem(\"auth_token\");\n\n  // useEffect(async () => {\n  //   axios.post(server_URL + \"GeneralOfficial\", params).then((items) => {\n  //     setData(items.data);\n  //     setLoading(true);\n  //   });\n\n  // });\n\n  // useEffect(async () => {\n  // axios.post(server_URL + \"GeneralOfficialDepartment\",params).then((items) => {\n  //   setData3(items.data3);\n  //   });\n  // });\n\n  useState(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"GeneralOfficial\", params),\n        axios.post(server_URL + \"GeneralOfficialDepartment\", params),\n        axios.post(server_URL + \"GeneralOfficialBatch\", params),\n      ])\n      .then(\n        axios.spread((data, data3, data4) => {\n          setData(data.data);\n          setData3(data3.data);\n          setData4(data4.data);\n          setLoading(true);\n        })\n      );\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  if (auth_token != -1) {\n    return (\n      <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                General Information\n              </Text>\n            </Flex>\n          </CardBody>\n          <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Select Department\n                </Text>\n              </CardHeader>\n\n              {/* <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm2(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type department\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm2}\n                />\n              </InputGroup> */}\n\n              <Select\n                mt=\"1em\"\n                bg={inputBg}\n                placeholder=\"Department\"\n                id=\"dept\"\n                onChange={(e) => setSearchTerm2(e.target.value)}\n              >\n                {data3.map((data) => {\n                  return <option value={data.dept}>{data.dept}</option>;\n                })}\n              </Select>\n            </Box>\n\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Select Batch\n                </Text>\n              </CardHeader>\n\n              {/* <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm1(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type batch\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm1}\n                />\n              </InputGroup> */}\n              <Select\n                mt=\"1em\"\n                bg={inputBg}\n                placeholder=\"Batch\"\n                id=\"batch\"\n                onChange={(e) => setSearchTerm1(e.target.value)}\n              >\n                {data4.map((data) => {\n                  return <option value={data.batch}>{data.batch}</option>;\n                })}\n              </Select>\n            </Box>\n\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Search Student\n                </Text>\n              </CardHeader>\n              <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type here...\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm}\n                />\n              </InputGroup>\n            </Box>\n          </SimpleGrid>\n          <Box alignSelf=\"flex-end\">\n            <CSVLink data={data2}>\n              <Button\n                minWidth=\"fit-content\"\n                mt=\"1em\"\n                onClick=\"m\"\n                colorScheme=\"orange\"\n                alignSelf=\"flex-end\"\n                variant=\"solid\"\n                onClick={() =>\n                  toast({\n                    title: \"Report Downloaded Successfully\",\n                    status: \"success\",\n                    duration: 9000,\n                    position: \"top\",\n                    isClosable: true,\n                  })\n                }\n              >\n                Download Report\n              </Button>\n            </CSVLink>\n          </Box>\n        </Card>\n        <Card overflowX={{ sm: \"scroll\", md: \"scroll\", xl: \"scroll\" }}>\n          <CardHeader p=\"6px 0px 22px 0px\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n              Students List\n            </Text>\n          </CardHeader>\n          <CardBody>\n            <Table variant=\"simple\" color={textColor}>\n              <Thead>\n                <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                  <Th color=\"gray.400\">Roll No.</Th>\n                  <Th color=\"gray.400\">Name</Th>\n                  <Th color=\"gray.400\">Register No</Th>\n                  <Th color=\"gray.400\">Department</Th>\n                  <Th color=\"gray.400\">Batch</Th>\n                  <Th color=\"gray.400\">Email</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data\n                  .filter((item) => {\n                    if (\n                      searchTerm2 == \"\" &&\n                      searchTerm == \"\" &&\n                      searchTerm1 == \"\"\n                    ) {\n                      return item;\n                    } else if (\n                      searchTerm2 !== \"\" &&\n                      searchTerm1 == \"\" &&\n                      searchTerm == \"\"\n                    ) {\n                      if (\n                        item.dept\n                          .toLowerCase()\n                          .includes(searchTerm2.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else if (\n                      searchTerm2 == \"\" &&\n                      searchTerm1 !== \"\" &&\n                      searchTerm == \"\"\n                    ) {\n                      if (\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else if (\n                      searchTerm2 !== \"\" &&\n                      searchTerm1 !== \"\" &&\n                      searchTerm == \"\"\n                    ) {\n                      if (\n                        item.dept\n                          .toLowerCase()\n                          .includes(searchTerm2.toLocaleLowerCase()) &&\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    } else {\n                      if (\n                        item.dept\n                          .toLowerCase()\n                          .includes(searchTerm2.toLocaleLowerCase()) &&\n                        item.batch\n                          .toLowerCase()\n                          .includes(searchTerm1.toLocaleLowerCase())\n                      ) {\n                        if (\n                          item.sname\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase()) ||\n                          item.roll_no\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase()) ||\n                          item.reg_no\n                            .toLowerCase()\n                            .includes(searchTerm.toLocaleLowerCase())\n                        ) {\n                          return item;\n                        }\n                      }\n                    }\n                  })\n                  .map((item) => {\n                    return (\n                      <GeneralParticularstablerow\n                        roll={item.roll_no}\n                        name={item.sname}\n                        reg={item.reg_no}\n                        batch={item.batch}\n                        email={item.licet_email}\n                        dept={item.dept}\n                      />\n                    );\n                  })}\n              </Tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </Flex>\n    );\n  } else {\n    return <SignIn></SignIn>;\n  }\n}\n\nexport default GeneralInformation3;\n","/** @format */\n\n//Official International Exposure - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListInternational(props) {\n  const { name, email, reg, roll, batch, dept } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"International\", roll);\n        window.location.href = URL + \"Admin#/admin4/InternationalData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td minWidth=\"6em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListInternational;\n","/** @format */\n\n//Official International Exposure\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\n\nvar data2 = [];\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  Select,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\n\n// Custom components\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListInternational from \"components/Tables/StudentList/StudentListInternational4\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction InternationalExposure() {\n  const [data, setData] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [data4, setData4] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  // Toast var\n  const toast = useToast();\n\n  let params = new URLSearchParams();\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios\n      .all([\n        axios.post(server_URL + \"GeneralOfficial\", params),\n        axios.post(server_URL + \"GeneralOfficialDepartment\", params),\n        axios.post(server_URL + \"GeneralOfficialBatch\", params),\n      ])\n      .then(\n        axios.spread((data, data3, data4) => {\n          setData(data.data);\n          setData3(data3.data);\n          setData4(data4.data);\n          setLoading(true);\n        })\n      );\n  }, []);\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              International Exposure\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Select Department\n              </Text>\n            </CardHeader>\n\n            {/* <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm2(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type department\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm2}\n                />\n              </InputGroup> */}\n\n            <Select\n              mt=\"1em\"\n              bg={inputBg}\n              placeholder=\"Department\"\n              id=\"dept\"\n              onChange={(e) => setSearchTerm2(e.target.value)}\n            >\n              {data3.map((data) => {\n                return <option value={data.dept}>{data.dept}</option>;\n              })}\n            </Select>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Select Batch\n              </Text>\n            </CardHeader>\n\n            {/* <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm1(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type batch\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm1}\n                />\n              </InputGroup> */}\n            <Select\n              mt=\"1em\"\n              bg={inputBg}\n              placeholder=\"Batch\"\n              id=\"batch\"\n              onChange={(e) => setSearchTerm1(e.target.value)}\n            >\n              {data4.map((data) => {\n                return <option value={data.batch}>{data.batch}</option>;\n              })}\n            </Select>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick=\"m\"\n              colorScheme=\"orange\"\n              alignSelf=\"flex-end\"\n              variant=\"solid\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody overflowX={{ sm: \"scroll\" }}>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListInternational\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default InternationalExposure;\n","/** @format */\n\n//Class Advisor Extracurricular - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListExtraCurricular(props) {\n  const { name, email, reg, dept, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"Admin#/admin4/ExtracurricularData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td minWidth=\"6em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"12em\">\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td minWidth=\"5em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td minWidth=\"8em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td minWidth=\"14em\">\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListExtraCurricular;\n","/** @format */\n\n//Official Extracurricular\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListExtraCurricular from \"components/Tables/StudentList/StudentListExtraCurricular4\";\n\nimport { server_URL } from \"controller/urls_config\";\nvar Loader = require(\"react-loader\");\nvar is_loading = true;\n\nfunction Extracurricular() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios.post(server_URL + \"ExtracurricularCA\", params).then((items) => {\n      setData(items.data);\n      is_loading = false;\n    });\n  }, []);\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Extracurricular\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n\n        <Button\n          minWidth=\"fit-content\"\n          mt=\"1em\"\n          onClick={() =>\n            toast({\n              title: \"Report Downloaded Successfully\",\n              status: \"success\",\n              duration: 9000,\n              position: \"top\",\n              isClosable: true,\n            })\n          }\n          colorScheme=\"orange\"\n          alignSelf=\"flex-end\"\n          variant=\"solid\"\n        >\n          Download Report\n        </Button>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListExtraCurricular\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Extracurricular;\n","/** @format */\n\n//HoD Professional Developement - Student List\n\nimport React from \"react\";\n\nimport { Flex, Td, Text, Tr, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListProfessionalDevelopment(props) {\n  const { name, email, reg, dept, roll, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href =\n          URL + \"Admin#/admin4/ProfessionalDevelopmentData\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListProfessionalDevelopment;\n","/** @format */\n\n//HoD Professional Development\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListProfessionalDevelopment from \"components/Tables/StudentList/StudentListProfessionalDevelopment4\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nvar data2 = [];\nvar Loader = require(\"react-loader\");\n\nimport { CSVLink } from \"react-csv\";\n\nfunction ProfessionalDevelopment() {\n  // Toast var\n  const toast = useToast();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  let params = new URLSearchParams();\n  params.append(\"batch\", localStorage.getItem(\"batch\"));\n  params.append(\"dept\", localStorage.getItem(\"dept\"));\n\n  useEffect(async () => {\n    axios\n      .post(server_URL + \"ProfessionalDevelopmentCA\", params)\n      .then((items) => {\n        setData(items.data);\n        setLoading(true);\n      });\n  }, []);\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  data2 = data.filter((item) => {\n    if (searchTerm2 == \"\" && searchTerm == \"\" && searchTerm1 == \"\") {\n      return item;\n    } else if (searchTerm2 !== \"\" && searchTerm1 == \"\" && searchTerm == \"\") {\n      if (item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 == \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())) {\n        return item;\n      }\n    } else if (searchTerm2 !== \"\" && searchTerm1 !== \"\" && searchTerm == \"\") {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        return item;\n      }\n    } else {\n      if (\n        item.dept.toLowerCase().includes(searchTerm2.toLocaleLowerCase()) &&\n        item.batch.toLowerCase().includes(searchTerm1.toLocaleLowerCase())\n      ) {\n        if (\n          item.sname.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.roll_no.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\n          item.reg_no.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        ) {\n          return item;\n        }\n      }\n    }\n  });\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <Loader color=\"#FBD38D\" height={10} width={10} loaded={Loaded} />\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Professional Development\n            </Text>\n          </Flex>\n        </CardBody>\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n\n        <Box alignSelf=\"flex-end\">\n          <CSVLink data={data2}>\n            <Button\n              minWidth=\"fit-content\"\n              mt=\"1em\"\n              onClick={() =>\n                toast({\n                  title: \"Report Downloaded Successfully\",\n                  status: \"success\",\n                  duration: 9000,\n                  position: \"top\",\n                  isClosable: true,\n                })\n              }\n              colorScheme=\"orange\"\n              variant=\"solid\"\n            >\n              Download Report\n            </Button>\n          </CSVLink>\n        </Box>\n      </Card>\n      <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody>\n          <Table variant=\"simple\" color={textColor}>\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">Batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListProfessionalDevelopment\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      dept={item.dept}\n                      batch={item.batch}\n                      email={item.licet_email}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default ProfessionalDevelopment;\n","/** @format */\n\n//Official Academic - StudentList\n\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { URL } from \"controller/urls_config\";\n\nfunction StudentListAcademic(props) {\n  const { name, email, reg, roll, dept, batch } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgStatus = useColorModeValue(\"gray.400\", \"#1a202c\");\n  const colorStatus = useColorModeValue(\"white\", \"gray.400\");\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\"\n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      onClick={() => {\n        localStorage.setItem(\"generalStudent\", roll);\n        let params = new URLSearchParams();\n        params.append(\"RollNumber\", localStorage.getItem(\"generalStudent\"));\n        window.location.href = URL + \"Admin#/admin4/Academicdata\";\n      }}\n      id={roll}\n      _hover={{\n        Radius: \"20px\",\n        background: \"#bbbbbb\",\n        color: \"white\",\n      }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {name}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {reg}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {email}\n        </Text>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default StudentListAcademic;\n","/** @format */\n\n//Official Academic\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport StudentListAcademic from \"components/Tables/StudentList/StudentListAcademic4\";\nimport { server_URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction Academic() {\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchTerm1, setSearchTerm1] = useState(\"\");\n  const [searchTerm2, setSearchTerm2] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n  let params = new URLSearchParams();\n\n  useEffect(async () => {\n    axios.post(server_URL + \"AcademicsDataofficial\").then((items) => {\n      setData(items.data);\n      setLoading(true);\n    });\n  });\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <Card mb=\"1rem\">\n        <CardBody>\n          <Flex flexDirection=\"column\" align=\"center\" justify=\"center\" w=\"100%\">\n            <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n              Academic Results\n            </Text>\n          </Flex>\n        </CardBody>\n\n        <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Department\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm2(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type department\"\n                borderRadius=\"inherit\"\n                value={searchTerm2}\n              />\n            </InputGroup>\n          </Box>\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Batch\n              </Text>\n            </CardHeader>\n\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm1(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type batch\"\n                borderRadius=\"inherit\"\n                value={searchTerm1}\n              />\n            </InputGroup>\n          </Box>\n\n          <Box>\n            <CardHeader mt=\"1em\">\n              <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                Search Student\n              </Text>\n            </CardHeader>\n            <InputGroup\n              bg={inputBg}\n              mt=\"1rem\"\n              borderRadius=\"15px\"\n              w=\"cover\"\n              _focus={{\n                borderColor: { mainorange },\n              }}\n              _active={{\n                borderColor: { mainorange },\n              }}\n            >\n              <InputLeftElement\n                children={\n                  <IconButton\n                    bg=\"inherit\"\n                    borderRadius=\"inherit\"\n                    _hover=\"none\"\n                    _active={{\n                      bg: \"inherit\",\n                      transform: \"none\",\n                      borderColor: \"transparent\",\n                    }}\n                    _focus={{\n                      boxShadow: \"none\",\n                    }}\n                    icon={\n                      <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                    }\n                  ></IconButton>\n                }\n              />\n\n              <Input\n                onChange={(event) => setSearchTerm(event.target.value)}\n                fontSize=\"xs\"\n                py=\"11px\"\n                placeholder=\"Type here...\"\n                borderRadius=\"inherit\"\n                value={searchTerm}\n              />\n            </InputGroup>\n          </Box>\n        </SimpleGrid>\n        <Button\n          mt=\"1em\"\n          minWidth=\"fit-content\"\n          onClick=\"m\"\n          colorScheme=\"orange\"\n          alignSelf=\"flex-end\"\n          variant=\"solid\"\n        >\n          Download Report\n        </Button>\n      </Card>\n      <Card>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Students List\n          </Text>\n        </CardHeader>\n        <CardBody overflowX={{ sm: \"scroll\" }}>\n          <Table variant=\"simple\" color={textColor} id=\"dataTable\">\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Name</Th>\n                <Th color=\"gray.400\">Register No.</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">batch</Th>\n                <Th color=\"gray.400\">Email</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (\n                    searchTerm2 == \"\" &&\n                    searchTerm == \"\" &&\n                    searchTerm1 == \"\"\n                  ) {\n                    return item;\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 == \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 == \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else if (\n                    searchTerm2 !== \"\" &&\n                    searchTerm1 !== \"\" &&\n                    searchTerm == \"\"\n                  ) {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      return item;\n                    }\n                  } else {\n                    if (\n                      item.dept\n                        .toLowerCase()\n                        .includes(searchTerm2.toLocaleLowerCase()) &&\n                      item.batch\n                        .toLowerCase()\n                        .includes(searchTerm1.toLocaleLowerCase())\n                    ) {\n                      if (\n                        item.sname\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.roll_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase()) ||\n                        item.reg_no\n                          .toLowerCase()\n                          .includes(searchTerm.toLocaleLowerCase())\n                      ) {\n                        return item;\n                      }\n                    }\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <StudentListAcademic\n                      roll={item.roll_no}\n                      name={item.sname}\n                      reg={item.reg_no}\n                      batch={item.batch}\n                      email={item.licet_email}\n                      dept={item.dept}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default Academic;\n","/** @format */\n\n//Class Advisor Academic - StudentList\n\nimport React, { useState, useEffect } from \"react\";\n\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Flex,\n  Td, \n  Text,\n  Tr,\n  useColorModeValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useToast,\n  Input,\n  Tooltip\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport { server_URL } from \"controller/urls_config\";\n\nfunction CredentialList(props) {\n  const toast = useToast()\n  const [result,setresult] = useState(null);\n\n  const { email, roll, batch, dept, user_type,password } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const statuses = ['success', 'error', 'warning', 'info']\n\n  function cred_delete() {\n    let params = new URLSearchParams();\n    params.append(\"email\",email);\n      axios.post(server_URL + \"admin_delete_creds\", params).then((results)=>{\n        if(results.data == \"removed\"){\n          localStorage.setItem(\"res\",\"Deleted Successfully\");\n          setresult(\"Deleted Successfully\");\n        }\n        else{\n          localStorage.setItem(\"res\",\"Unable to delete credential\");\n        }\n      })\n    }\n\n    function cred_edit() {\n      let params = new URLSearchParams();\n      var user = document.getElementById(\"UID\").value\n      var lower = user.toLowerCase();\n      if (lower== \"student\") {\n        params.append(\"user_type\",0);\n      }\n      else if (lower== \"class advisor\") {\n        params.append(\"user_type\",1);\n      }\n      else if(lower== \"hod\"){\n        params.append(\"user_type\",2);\n      }\n      else if (lower== \"official\") {\n        params.append(\"user_type\",3);\n      }\n      else if (lower== \"admin\") {\n        params.append(\"user_type\",4);\n      } \n      params.append(\"email\",document.getElementById(\"EID\").value);\n      params.append(\"password\",document.getElementById(\"PID\").value);\n      params.append(\"roll_no\",document.getElementById(\"RID\").value);\n      params.append(\"dept\",document.getElementById(\"DID\").value);\n      params.append(\"batch\",document.getElementById(\"BID\").value);\n      axios.post(server_URL + \"admin_edit_creds\", params).then((results)=>{\n        if (results.data == \"edited\") {\n          setTimeout(() => {\n            document.getElementById(\"rf\").style.display = \"none\";\n          document.getElementById(\"rs\").style.display = \"none\";\n          }, 2000);\n          document.getElementById(\"rf\").style.display = \"none\";\n          document.getElementById(\"rs\").style.display = \"block\";\n        }\n        else{\n          setTimeout(() => {\n            document.getElementById(\"rf\").style.display = \"none\";\n          document.getElementById(\"rs\").style.display = \"none\";\n          }, 2000);\n          document.getElementById(\"rs\").style.display = \"none\";\n          document.getElementById(\"rf\").style.display = \"block\";\n        }\n      });\n    }\n\n    function fun_reload() {\n      window.location.reload(false);\n    }\n\n  return (\n    <Tr\n      cursor=\"\"\n      variant=\"ghost\"\n      fontSize=\"md\" \n      color={textColor}\n      fontWeight=\"bold\"\n      minWidth=\"100%\"\n      id={email}\n      // _hover={{ \n      //   Radius: \"20px\",\n      //   background: \"#bbbbbb\",\n      //   color: \"white\",\n      // }}\n    >\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {email}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex direction=\"column\">\n          <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\">\n            {roll}\n          </Text>\n        </Flex>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {dept}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {batch}\n        </Text>\n      </Td>\n      <Td>\n        <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">\n          {user_type}\n        </Text>\n      </Td>\n      <Td>\n        <Button\n          onClick={onOpen}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Edit\n        </Button>\n        <Modal\n        isOpen={isOpen}\n        onClose={()=>{onClose();fun_reload();}}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Edit Credential</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n          <Tr>\n                <Td>\n                  <Text m=\"1em\">Email</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={email}\n                    id=\"EID\"\n                    disabled = {true}\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Password</Text>\n                </Td>\n                <Td>\n                <Tooltip label=\"Password displayed will only be in hashed format. If you want to change the password enter it in normal form (eg : licet@786).\" placement=\"right\">\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={password}\n                    id=\"PID\"\n                  />\n                  </Tooltip>\n                </Td>\n              </Tr>\n          <Tr>\n                <Td>\n                  <Text m=\"1em\">Roll No</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={roll}\n                    id=\"RID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Department</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={dept}\n                    id=\"DID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">Batch</Text>\n                </Td>\n                <Td>\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={batch}\n                    id=\"BID\"\n                  />\n                </Td>\n              </Tr>\n              <Tr>\n                <Td>\n                  <Text m=\"1em\">User Type</Text>\n                </Td>\n                <Td>\n                <Tooltip label=\"Enter 0 for student, 1 for class advisor, 2 for hod, 3 for official, 4 for admin\" placement=\"right\">\n                  <Input\n                    minWidth=\"20em\"\n                    borderRadius=\"5px\"\n                    fontSize=\"sm\"\n                    type=\"text\"\n                    defaultValue={user_type}\n                    id=\"UID\"\n                  />\n                  </Tooltip>\n                </Td>\n              </Tr>\n              <p id=\"rs\" style={{display:\"none\",color:\"green\",textAlign:\"center\"}}>Edited Successfully</p>\n              <p id=\"rf\" style={{display:\"none\",color:\"red\"}}>Edit Failed</p>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button onClick={()=>{cred_edit(); \n            \n          }} \n          colorScheme='blue' mr={3}>\n              Save\n            </Button>\n            <Button onClick={()=>{onClose();fun_reload()}}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      </Td>\n      <Td>\n\n        <Button\n          onClick={()=>{cred_delete(); \n            toast({\n            title: `${localStorage.getItem(\"res\")}`,\n            status: \"success\",\n            duration: 1000,\n            position: \"top\",\n            isClosable: true,\n            onCloseComplete: fun_reload\n            });\n          }}\n          bg=\"orange.300\"\n          alignSelf=\"flex-end\"\n          width=\"fit-content\"\n        >\n          Delete\n        </Button>\n      </Td>\n    </Tr>\n  );\n}\n\nexport default CredentialList;\n","/** @format */\n\n//Official Academic\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n  IconButton,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  SimpleGrid,\n  Box,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CredentialList from \"components/Tables/CredentialList\"; \nimport { server_URL, URL } from \"controller/urls_config\";\n\nvar Loader = require(\"react-loader\");\n\nfunction AdminControl() { \n  function newCredential() {\n    window.location.href = URL + \"Admin#/admin4/AdminControlCreate\";\n  }\n\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [Loaded, setLoading] = useState(false);\n\n  useEffect(async () => {\n    axios.post(server_URL + \"admin_get_creds\").then((items) => {\n      var temp = items.data;\n      for (let i = 0; i < temp.length; i++) {\n        if(temp[i].user_type == 0){\n          console.log(\"HELLO\");\n          temp[i].user_type = \"Student\"\n        }\n        else if(temp[i].user_type == 1){\n          temp[i].user_type = \"Class Advisor\"\n        }\n        else if(temp[i].user_type == 2){\n          temp[i].user_type = \"Hod\"\n        }\n        else if(temp[i].user_type == 3){\n          temp[i].user_type = \"Official\"\n        }\n        else if(temp[i].user_type == 4){\n          temp[i].user_type = \"Admin\"\n        }\n        if(i == temp.length-1){\n          setData(temp);\n        }\n      }\n      setLoading(true);\n    });\n  },[]);\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const inputBg = useColorModeValue(\"white\", \"gray.800\");\n  const mainorange = useColorModeValue(\"orange.300\", \"orange.300\");\n  const searchIconColor = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                Admin controls | Edit credential\n              </Text>\n            </Flex>\n          </CardBody>\n\n          <SimpleGrid columns={{ sm: 1, md: 1, xl: 1 }} gap={5}>\n            <Box>\n              <CardHeader mt=\"1em\">\n                <Text fontSize=\"lg\" color={textColor} fontWeight=\"semi\">\n                  Search Email\n                </Text>\n              </CardHeader>\n\n              <InputGroup\n                bg={inputBg}\n                mt=\"1rem\"\n                borderRadius=\"15px\"\n                w=\"cover\"\n                _focus={{\n                  borderColor: { mainorange },\n                }}\n                _active={{\n                  borderColor: { mainorange },\n                }}\n              >\n                <InputLeftElement\n                  children={\n                    <IconButton\n                      bg=\"inherit\"\n                      borderRadius=\"inherit\"\n                      _hover=\"none\"\n                      _active={{\n                        bg: \"inherit\",\n                        transform: \"none\",\n                        borderColor: \"transparent\",\n                      }}\n                      _focus={{\n                        boxShadow: \"none\",\n                      }}\n                      icon={\n                        <SearchIcon color={searchIconColor} w=\"15px\" h=\"15px\" />\n                      }\n                    ></IconButton>\n                  }\n                />\n\n                <Input\n                  onChange={(event) => setSearchTerm(event.target.value)}\n                  fontSize=\"xs\"\n                  py=\"11px\"\n                  placeholder=\"Type Email id\"\n                  borderRadius=\"inherit\"\n                  value={searchTerm}\n                />\n              </InputGroup>\n            </Box>\n          </SimpleGrid>\n        </Card>\n\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                Admin controls | Create new credential\n              </Text>\n            </Flex>\n          </CardBody>\n          <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n            <Box>\n              <Button\n                mt=\"1em\"\n                minWidth=\"fit-content\"\n                onClick={newCredential}\n                colorScheme=\"orange\"\n                alignSelf=\"flex-end\"\n                variant=\"solid\"\n              >\n                Create new login\n              </Button>\n            </Box>\n          </SimpleGrid>\n        </Card>\n        <Card mb=\"1rem\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\" mr=\"auto\">\n                Admin controls | Upload new credential\n              </Text>\n            </Flex>\n          </CardBody>\n          <SimpleGrid columns={{ sm: 1, md: 3, xl: 3 }} gap={5}>\n            <Box>\n              <Button\n                mt=\"1em\"\n                minWidth=\"fit-content\"\n                onClick=\"m\"\n                colorScheme=\"orange\"\n                alignSelf=\"flex-end\"\n                variant=\"solid\"\n              >\n                Bulk upload\n              </Button>\n            </Box>\n          </SimpleGrid>\n        </Card>\n      </SimpleGrid>\n      <Card>\n        <CardHeader p=\"6px 0px 22px 0px\">\n          <Text fontSize=\"xl\" color={textColor} fontWeight=\"bold\">\n            Credentials List\n          </Text>\n        </CardHeader>\n        <CardBody overflowX={{ sm: \"scroll\" }}>\n          <Table variant=\"simple\" color={textColor} id=\"dataTable\">\n            <Thead>\n              <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                <Th color=\"gray.400\">Email</Th>\n                <Th color=\"gray.400\">Roll No.</Th>\n                <Th color=\"gray.400\">Department</Th>\n                <Th color=\"gray.400\">batch</Th>\n                <Th color=\"gray.400\">User Type</Th>\n                <Th color=\"gray.400\">Edit</Th>\n                <Th color=\"gray.400\">Delete</Th> \n              </Tr>\n            </Thead>\n            <Tbody>\n              {data\n                .filter((item) => {\n                  if (searchTerm == \"\") {\n                    //data2.push(item);\n                    return item;\n                  } else if (\n                    item.email\n                      .toLowerCase()\n                      .includes(searchTerm.toLocaleLowerCase())\n                  ) {\n                    //data2.push(item);\n                    return item;\n                  }\n                })\n                .map((item) => {\n                  return (\n                    <CredentialList\n                      password = {item.password}\n                      email={item.email}\n                      roll={item.roll_no}\n                      dept={item.dept}\n                      batch={item.batch}\n                      user_type={item.user_type}\n                    />\n                  );\n                })}\n            </Tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Flex>\n  );\n}\n\nexport default AdminControl;\n","/** @format */\n\n//Class Advisor Profile\n\nimport React, { useState } from \"react\";\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  SimpleGrid,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverBody,\n  Portal,\n  PopoverFooter,\n  ButtonGroup,\n  Table,\n  Tbody,\n  Th,\n  Thead,\n  Tr,\n  Td,\n  Input,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Collapse,\n} from \"@chakra-ui/react\";\nimport { SettingsIcon, EditIcon, WarningIcon } from \"@chakra-ui/icons\";\n\nimport axios from \"axios\";\n// Custom components\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody\";\nimport CardHeader from \"components/Card/CardHeader\";\n// Assets\nimport avatar8 from \"assets/img/avatars/avatar8.jpg\";\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\nimport { server_URL } from \"controller/urls_config\";\nimport change_pass from \"controller/changepassword\";\n\nfunction Profile() {\n  function validation() {\n    document.getElementById(\"pass-success\").style.display = \"none\";\n    var oldpass = document.getElementById(\"old-pass\").value;\n    var newpass = document.getElementById(\"new-pass\").value;\n    var repass = document.getElementById(\"re-pass\").value;\n    var numbers = /[0-9]/g;\n    var lowercase = /[a-z]/g;\n    var uppercase = /[A-Z]/g;\n    var symbol = /[!@#$%^&*]/g;\n    var checknum = newpass.match(numbers);\n    var checklower = newpass.match(lowercase);\n    var checkupper = newpass.match(uppercase);\n    var checksymbol = newpass.match(symbol);\n    var passlen = newpass.length;\n    // var repass = document.getElementById(\"repassword\").value;\n    if (\n      oldpass == newpass ||\n      passlen < 8 ||\n      checknum == null ||\n      checklower == null ||\n      checkupper == null ||\n      checksymbol == null ||\n      passlen >= 15 ||\n      newpass !== repass\n    ) {\n      if (oldpass == newpass) {\n        document.getElementById(\"pass-same\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-same\").style.display = \"none\";\n      }\n\n      if (passlen < 8) {\n        document.getElementById(\"pass-len\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-len\").style.display = \"none\";\n      }\n\n      if (checknum == null) {\n        document.getElementById(\"pass-num\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-num\").style.display = \"none\";\n      }\n\n      if (checklower == null) {\n        document.getElementById(\"pass-lower\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-lower\").style.display = \"none\";\n      }\n\n      if (checkupper == null) {\n        document.getElementById(\"pass-upper\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-upper\").style.display = \"none\";\n      }\n\n      if (checksymbol == null) {\n        document.getElementById(\"pass-symbol\").style.display = \"block\";\n      } else {\n        document.getElementById(\"pass-symbol\").style.display = \"none\";\n      }\n\n      if (passlen <= 15) {\n        document.getElementById(\"pass-valid\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-valid\").style.display = \"block\";\n      }\n\n      if (newpass == repass) {\n        document.getElementById(\"pass-equal\").style.display = \"none\";\n      } else {\n        document.getElementById(\"pass-equal\").style.display = \"block\";\n      }\n    } else {\n      document.getElementById(\"pass-same\").style.display = \"none\";\n      document.getElementById(\"pass-len\").style.display = \"none\";\n      document.getElementById(\"pass-num\").style.display = \"none\";\n      document.getElementById(\"pass-lower\").style.display = \"none\";\n      document.getElementById(\"pass-upper\").style.display = \"none\";\n      document.getElementById(\"pass-symbol\").style.display = \"none\";\n      document.getElementById(\"pass-valid\").style.display = \"none\";\n      document.getElementById(\"pass-equal\").style.display = \"none\";\n      change_pass();\n    }\n  }\n  var sname, licet_email, roll_no, dept, reg_no, batch, cell, year;\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const [data, setData] = useState([]);\n\n  let params = new URLSearchParams();\n  params.append(\"StudentDetails\", localStorage.getItem(\"StudentRoll\"));\n\n  var off_email = localStorage.getItem(\"offemail\");\n  var off_arr_name = (localStorage.getItem(\"offemail\")).split('@');\n  var  off_name = (off_arr_name[0]).toUpperCase();\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          bgImage={ProfileBgImage}\n          bgSize=\"cover\"\n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  LICET : {off_name}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                  {off_email}\n                </Text>\n              </Flex>\n            </Flex>\n            <Popover placement=\"auto\">\n              <PopoverTrigger>\n                <Button\n                  minWidth=\"-moz-fit-content\"\n                  leftIcon={<SettingsIcon />}\n                  colorScheme=\"orange\"\n                >\n                  Settings\n                </Button>\n              </PopoverTrigger>\n              <Portal>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverHeader>Available Settings</PopoverHeader>\n                  <PopoverBody>\n                    <Button onClick={onOpen} leftIcon={<EditIcon />}>\n                      Change Password\n                    </Button>\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            </Popover>\n            <Modal size=\"xl\" isOpen={isOpen} onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Change Password</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter old Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter Old Password\"\n                        id=\"old-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\" mb=\"2em\">\n                        Enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Enter New Password\"\n                        id=\"new-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>\n                      <Text width={{ sm: \"7em\", md: \"10em\" }} ms=\"1em\">\n                        Re enter new Password\n                      </Text>\n                    </Td>\n                    <Td>\n                      <Input\n                        ms=\"1em\"\n                        width={{ sm: \"16em\", md: \"23em\" }}\n                        borderRadius=\"5px\"\n                        fontSize=\"sm\"\n                        type=\"password\"\n                        placeholder=\"Re-Enter New Password\"\n                        id=\"re-pass\"\n                      />\n                    </Td>\n                  </Tr>\n                  <SimpleGrid marginLeft=\"auto\" width=\"fit-content\" gap={5}>\n                    <Button\n                      m=\"1em\"\n                      colorScheme=\"orange\"\n                      variant=\"solid\"\n                      id=\"pass-button\"\n                      onClick={validation}\n                    >\n                      Change Password\n                    </Button>\n                  </SimpleGrid>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-mis\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Passwords Don't Match\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Incorrect Old Password or Username or Invalid User\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"server-fail\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Server Error. Try again after some time\n                  </Text>\n                  <Text\n                    color=\"green\"\n                    id=\"pass-success\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Password Changed Successfully\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-same\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    New password cannot be same as the old password\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-num\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your new password should contain atleast 1 number\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-len\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be atleast 8 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-lower\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 lowercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-upper\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 uppercase character\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-symbol\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should conatin at least 1 special\n                    character.Allowed special characters(!,@,#,$,%,^,&,*)\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-valid\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Your password should be between 8 and 15 characters\n                  </Text>\n                  <Text\n                    color=\"red\"\n                    id=\"pass-equal\"\n                    display=\"none\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    Re entered password and new password dosen't match\n                  </Text>\n                </ModalBody>\n              </ModalContent>\n            </Modal>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            ></Flex>\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","/** @format */\n\n// Official routes\n\nimport Dashboard from \"views/Home/DashBoard/Dashboard4\";\nimport GeneralInformation from \"views/Home/GeneralInformation/GeneralInformation4\";\nimport InternationalExposure3 from \"views/Home/InternationalExposure/InternationalExposure4\";\nimport Extracurricular from \"views/Home/ExtraCurricular/Extracurricular4\";\nimport ProfessionalDevelopment from \"views/Home/ProfessionalDevelopment/ProfessionalDevelopment4\";\nimport Academic from \"views/Home/Academic/Academic4\";\nimport AdminControl from \"views/Home/Admin Controls/AdminControl\";\n\nimport Profile from \"views/Home/Profile/Profile4.js\";\nimport SignIn from \"views/Pages/SignIn.js\";\n\nimport {\n  HomeIcon,\n  StatsIcon,\n  CreditIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: <HomeIcon color=\"inherit\" />,\n    component: Dashboard,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/GeneralInformation\",\n    name: \"General Information\",\n    icon: <StatsIcon color=\"inherit\" />,\n    component: GeneralInformation,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/InternationalExposure\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        International Exposure\n      </p>\n    ),\n    icon: <RocketIcon color=\"inherit\" />,\n    component: InternationalExposure3,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/Extracurricular\",\n    name: \"Extracurricular\",\n    icon: <CreditIcon color=\"inherit\" />,\n    component: Extracurricular,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/ProfessionalDevelopment\",\n    name: (\n      <p\n        style={{\n          textAlign: \"left\",\n          lineHeight: \"1.2rem\",\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        Professional Development\n      </p>\n    ),\n    icon: <CreditIcon color=\"inherit\" />,\n    component: ProfessionalDevelopment,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/Academics\",\n    name: \"Academics\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: Academic,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/AdminControl\",\n    name: \"Admin Controls\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: AdminControl,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/profile\",\n    name: \"Profile\",\n    icon: <PersonIcon color=\"inherit\" />,\n    secondaryNavbar: true,\n    component: Profile,\n    layout: \"/admin4\",\n  },\n  {\n    path: \"/signin\",\n    name: \"Log Out\",\n    icon: <DocumentIcon color=\"inherit\" />,\n    component: SignIn,\n    layout: \"/auth\",\n  },\n];\nexport default dashRoutes;\n","/** @format */\n\n// Chakra imports\nimport { Box, Flex, SimpleGrid, Stat, StatLabel } from \"@chakra-ui/react\";\n\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport BarChartInternship from \"components/Charts/BarChartInternship3\";\nimport BarChartPlacement from \"components/Charts/BarChartPlacement3\";\n\nexport default function Dashboard() {\n  return (\n    <Flex direction=\"column\" pt={{ base: \"120px\", md: \"65px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 2 }} gap={5}>\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Placement Statistics\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\" pt={\"20px\"}>\n                <BarChartPlacement />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>\n\n        <Card minH=\"300px\">\n          <CardBody>\n            <Flex\n              flexDirection=\"column\"\n              align=\"center\"\n              justify=\"center\"\n              w=\"100%\"\n            >\n              <Stat mr=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\"1.5rem\"\n                >\n                  Internships\n                </StatLabel>\n              </Stat>\n              <Box w=\"100%\" h={{ sm: \"225px\" }} ps=\"8px\">\n                <BarChartInternship />\n              </Box>\n            </Flex>\n          </CardBody>\n        </Card>\n      </SimpleGrid>\n    </Flex>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AuthLayout from \"layouts/Auth.js\";\n\nimport AdminLayout0 from \"layouts/Admin0.js\";\nimport AdminLayout1 from \"layouts/Admin1.js\";\nimport AdminLayout2 from \"layouts/Admin2.js\";\nimport AdminLayout3 from \"layouts/Admin3.js\";\nimport AdminLayout4 from \"layouts/Admin4.js\";\nimport Error404 from \"views/Pages/Error404\";\n\nimport \"./components/Style/Style.scss\";\n\nReactDOM.render(\n  <HashRouter name=\"\">\n    <Switch>\n      <Route path={`/auth`} component={AuthLayout} />\n      <Route path={`/admin0`} component={AdminLayout0} />\n      <Route path={`/admin1`} component={AdminLayout1} />\n      <Route path={`/admin2`} component={AdminLayout2} />\n      <Route path={`/admin3`} component={AdminLayout3} />\n      <Route path={`/admin4`} component={AdminLayout4} />\n      <Redirect from={`/`} to=\"/auth/SignIn\" />\n    </Switch>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","// chakra imports\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\n// core components\n\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes0.js\";\nimport routes1 from \"routes.js\";\nimport theme from \"theme/theme.js\";\n\nexport default function Pages(props) {\n  const { ...rest } = props;\n  // ref for the wrapper div\n  const wrapper = React.createRef();\n  React.useEffect(() => {\n    document.body.style.overflow = \"unset\";\n    // Specify how to clean up after this effect:\n    return function cleanup() {};\n  });\n\n  const getActiveRoute1 = (routes1) => {\n    let activeRoute1 = \"Default Brand Text\";\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].collapse) {\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (collapseActiveRoute1 !== activeRoute1) {\n          return collapseActiveRoute1;\n        }\n      } else if (routes1[i].category) {\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (categoryActiveRoute1 !== activeRoute1) {\n          return categoryActiveRoute1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          return routes1[i].name;\n        }\n      }\n    }\n    return activeRoute1;\n  };\n\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  const getActiveNavbar1 = (routes1) => {\n    let activeNavbar1 = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes1[i].category) {\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\n        if (categoryActiveNavbar1 !== activeNavbar1) {\n          return categoryActiveNavbar1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          if (routes1[i].secondaryNavbar) {\n            return routes1[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar1;\n  };\n\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getRoutes1 = (routes1) => {\n    return routes1.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes1(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes1(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const navRef = React.useRef();\n  return (\n    <ChakraProvider theme={theme} resetCss={false} w=\"100%\">\n      <Box ref={navRef} w=\"100%\">\n        <Box w=\"100%\">\n          <Box ref={wrapper} w=\"100%\">\n            <Switch>\n              {getRoutes1(routes1)}\n              {getRoutes(routes)}\n              <Redirect from=\"/auth\" to=\"/auth/login-page\" />\n            </Switch>\n          </Box>\n        </Box>\n      </Box>\n    </ChakraProvider>\n  );\n}\n","/** @format */\n\n// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes0.js\";\nimport routes1 from \"routes.js\";\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\n\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n  let auth_token = localStorage.getItem(\"auth_token\");\n  let user_type = localStorage.getItem(\"user_type\");\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin0/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  const getActiveRoute1 = (routes1) => {\n    let activeRoute1 = \"Default Brand Text\";\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].collapse) {\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (collapseActiveRoute1 !== activeRoute1) {\n          return collapseActiveRoute1;\n        }\n      } else if (routes1[i].category) {\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (categoryActiveRoute1 !== activeRoute1) {\n          return categoryActiveRoute1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          return routes1[i].name;\n        }\n      }\n    }\n    return activeRoute1;\n  };\n\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n\n  const getActiveNavbar1 = (routes1) => {\n    let activeNavbar1 = false;\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].category) {\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\n        if (categoryActiveNavbar1 !== activeNavbar1) {\n          return categoryActiveNavbar1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          if (routes1[i].secondaryNavbar) {\n            return routes1[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar1;\n  };\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin0\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getRoutes1 = (routes1) => {\n    return routes1.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes1(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes1(prop.views);\n      }\n      if (prop.layout === \"/admin0\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra Color Mode\n\n  if (auth_token != -1 && user_type == \"student\") {\n    return (\n      <ChakraProvider theme={theme} resetCss={false}>\n        <Sidebar\n          routes={routes}\n          logoText={\"Student Portal\"}\n          display=\"none\"\n          sidebarVariant={sidebarVariant}\n          {...rest}\n        />\n        <MainPanel\n          ref={mainPanel}\n          w={{\n            base: \"100%\",\n            xl: \"calc(100% - 275px)\",\n          }}\n        >\n          <Portal>\n            <AdminNavbar\n              onOpen={onOpen}\n              logoText={\"Student Portal\"}\n              brandText={getActiveRoute(routes)}\n              secondary={getActiveNavbar(routes)}\n              rtlActive={false}\n              fixed={fixed}\n              {...rest}\n            />\n          </Portal>\n          {getRoute() ? (\n            <PanelContent>\n              <PanelContainer>\n                <Switch>\n                  {getRoutes(routes)}\n                  {getRoutes1(routes1)}\n                  <Redirect from=\"/Student\" to=\"/Student/dashboard\" />\n                </Switch>\n              </PanelContainer>\n            </PanelContent>\n          ) : null}\n\n          <Configurator\n            secondary={getActiveNavbar(routes)}\n            isOpen={isOpen}\n            onClose={onClose}\n            isChecked={fixed}\n            onSwitch={(value) => {\n              setFixed(value);\n            }}\n            onOpaque={() => setSidebarVariant(\"opaque\")}\n            onTransparent={() => setSidebarVariant(\"transparent\")}\n          />\n        </MainPanel>\n      </ChakraProvider>\n    );\n  } else {\n    localStorage.setItem(\"auth_token\", -1);\n    return <Redirect to=\"/auth/SignIn\" />;\n  }\n}\n","// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport routes from \"routes1.js\";\nimport routes1 from \"routes.js\";\n\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\n\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\n\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n\n  let auth_token = localStorage.getItem(\"auth_token\");\n  let user_type = localStorage.getItem(\"user_type\");\n\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin1/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  const getActiveRoute1 = (routes1) => {\n    let activeRoute1 = \"Default Brand Text\";\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].collapse) {\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (collapseActiveRoute1 !== activeRoute1) {\n          return collapseActiveRoute1;\n        }\n      } else if (routes1[i].category) {\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (categoryActiveRoute1 !== activeRoute1) {\n          return categoryActiveRoute1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          return routes1[i].name;\n        }\n      }\n    }\n    return activeRoute1;\n  };\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n\n  const getActiveNavbar1 = (routes1) => {\n    let activeNavbar1 = false;\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].category) {\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\n        if (categoryActiveNavbar1 !== activeNavbar1) {\n          return categoryActiveNavbar1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          if (routes1[i].secondaryNavbar) {\n            return routes1[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar1;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin1\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getRoutes1 = (routes1) => {\n    return routes1.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes1(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes1(prop.views);\n      }\n      if (prop.layout === \"/admin1\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra Color Mode\n\n  if (auth_token != -1 && user_type == \"class_advisor\") {\n    return (\n      <ChakraProvider theme={theme} resetCss={false}>\n        <Sidebar\n          routes={routes}\n          logoText={\"Class Advisor Portal\"}\n          display=\"none\"\n          sidebarVariant={sidebarVariant}\n          {...rest}\n        />\n        <MainPanel\n          ref={mainPanel}\n          w={{\n            base: \"100%\",\n            xl: \"calc(100% - 275px)\",\n          }}\n        >\n          <Portal>\n            <AdminNavbar\n              onOpen={onOpen}\n              logoText={\"Class Advisor Portal\"}\n              brandText={getActiveRoute(routes)}\n              secondary={getActiveNavbar(routes)}\n              rtlActive={false}\n              fixed={fixed}\n              {...rest}\n            />\n          </Portal>\n          {getRoute() ? (\n            <PanelContent>\n              <PanelContainer>\n                <Switch>\n                  {getRoutes(routes)}\n                  {getRoutes1(routes1)}\n                  <Redirect\n                    from=\"/Clas-Advisor\"\n                    to=\"/Class-Advisor/dashboard\"\n                  />\n                </Switch>\n              </PanelContainer>\n            </PanelContent>\n          ) : null}\n\n          <Configurator\n            secondary={getActiveNavbar(routes)}\n            isOpen={isOpen}\n            onClose={onClose}\n            isChecked={fixed}\n            onSwitch={(value) => {\n              setFixed(value);\n            }}\n            onOpaque={() => setSidebarVariant(\"opaque\")}\n            onTransparent={() => setSidebarVariant(\"transparent\")}\n          />\n        </MainPanel>\n      </ChakraProvider>\n    );\n  } else {\n    localStorage.setItem(\"auth_token\", -1);\n\n    return <Redirect to=\"/auth/SignIn\" />;\n  }\n}\n","// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes2.js\";\nimport routes1 from \"routes.js\";\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\n\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n  let auth_token = localStorage.getItem(\"auth_token\");\n  let user_type = localStorage.getItem(\"user_type\");\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin2/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  const getActiveRoute1 = (routes1) => {\n    let activeRoute1 = \"Default Brand Text\";\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].collapse) {\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (collapseActiveRoute1 !== activeRoute1) {\n          return collapseActiveRoute1;\n        }\n      } else if (routes1[i].category) {\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (categoryActiveRoute1 !== activeRoute1) {\n          return categoryActiveRoute1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          return routes1[i].name;\n        }\n      }\n    }\n    return activeRoute1;\n  };\n\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n\n  const getActiveNavbar1 = (routes1) => {\n    let activeNavbar1 = false;\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].category) {\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\n        if (categoryActiveNavbar1 !== activeNavbar1) {\n          return categoryActiveNavbar1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          if (routes1[i].secondaryNavbar) {\n            return routes1[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar1;\n  };\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin2\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getRoutes1 = (routes1) => {\n    return routes1.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes1(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes1(prop.views);\n      }\n      if (prop.layout === \"/admin2\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra Color Mode\n\n  if (auth_token != -1 && user_type == \"hod\") {\n    return (\n      <ChakraProvider theme={theme} resetCss={false}>\n        <Sidebar\n          routes={routes}\n          logoText={\"HoD Portal\"}\n          display=\"none\"\n          sidebarVariant={sidebarVariant}\n          {...rest}\n        />\n        <MainPanel\n          ref={mainPanel}\n          w={{\n            base: \"100%\",\n            xl: \"calc(100% - 275px)\",\n          }}\n        >\n          <Portal>\n            <AdminNavbar\n              onOpen={onOpen}\n              logoText={\"HoD Portal\"}\n              brandText={getActiveRoute(routes)}\n              secondary={getActiveNavbar(routes)}\n              rtlActive={false}\n              fixed={fixed}\n              {...rest}\n            />\n          </Portal>\n          {getRoute() ? (\n            <PanelContent>\n              <PanelContainer>\n                <Switch>\n                  {getRoutes(routes)}\n                  {getRoutes1(routes1)}\n                  <Redirect from=\"/HoD\" to=\"/HoD/dashboard\" />\n                </Switch>\n              </PanelContainer>\n            </PanelContent>\n          ) : null}\n\n          <Configurator\n            secondary={getActiveNavbar(routes)}\n            isOpen={isOpen}\n            onClose={onClose}\n            isChecked={fixed}\n            onSwitch={(value) => {\n              setFixed(value);\n            }}\n            onOpaque={() => setSidebarVariant(\"opaque\")}\n            onTransparent={() => setSidebarVariant(\"transparent\")}\n          />\n        </MainPanel>\n      </ChakraProvider>\n    );\n  } else {\n    localStorage.setItem(\"auth_token\", -1);\n\n    return <Redirect to=\"/auth/SignIn\" />;\n  }\n}\n","// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes3.js\";\nimport routes1 from \"routes.js\";\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\n\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n  let auth_token = localStorage.getItem(\"auth_token\");\n  let user_type = localStorage.getItem(\"user_type\");\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin3/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  const getActiveRoute1 = (routes1) => {\n    let activeRoute1 = \"Default Brand Text\";\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].collapse) {\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (collapseActiveRoute1 !== activeRoute1) {\n          return collapseActiveRoute1;\n        }\n      } else if (routes1[i].category) {\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (categoryActiveRoute1 !== activeRoute1) {\n          return categoryActiveRoute1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          return routes1[i].name;\n        }\n      }\n    }\n    return activeRoute1;\n  };\n\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n\n  const getActiveNavbar1 = (routes1) => {\n    let activeNavbar1 = false;\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].category) {\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\n        if (categoryActiveNavbar1 !== activeNavbar1) {\n          return categoryActiveNavbar1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          if (routes1[i].secondaryNavbar) {\n            return routes1[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar1;\n  };\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin3\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getRoutes1 = (routes1) => {\n    return routes1.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes1(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes1(prop.views);\n      }\n      if (prop.layout === \"/admin3\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra Color Mode\n\n  if (auth_token != -1 && user_type == \"official\") {\n    return (\n      <ChakraProvider theme={theme} resetCss={false}>\n        <Sidebar\n          routes={routes}\n          logoText={\"LICET Portal\"}\n          display=\"none\"\n          sidebarVariant={sidebarVariant}\n          {...rest}\n        />\n        <MainPanel\n          ref={mainPanel}\n          w={{\n            base: \"100%\",\n            xl: \"calc(100% - 275px)\",\n          }}\n        >\n          <Portal>\n            <AdminNavbar\n              onOpen={onOpen}\n              logoText={\"LICET Portal\"}\n              brandText={getActiveRoute(routes)}\n              secondary={getActiveNavbar(routes)}\n              rtlActive={false}\n              fixed={fixed}\n              {...rest}\n            />\n          </Portal>\n          {getRoute() ? (\n            <PanelContent>\n              <PanelContainer>\n                <Switch>\n                  {getRoutes(routes)}\n                  {getRoutes1(routes1)}\n                  <Redirect from=\"/LICET\" to=\"/LICET/dashboard\" />\n                </Switch>\n              </PanelContainer>\n            </PanelContent>\n          ) : null}\n\n          <Configurator\n            secondary={getActiveNavbar(routes)}\n            isOpen={isOpen}\n            onClose={onClose}\n            isChecked={fixed}\n            onSwitch={(value) => {\n              setFixed(value);\n            }}\n            onOpaque={() => setSidebarVariant(\"opaque\")}\n            onTransparent={() => setSidebarVariant(\"transparent\")}\n          />\n        </MainPanel>\n      </ChakraProvider>\n    );\n  } else {\n    localStorage.setItem(\"auth_token\", -1);\n    return <Redirect to=\"/auth/SignIn\" />;\n  }\n}\n","/** @format */\n\n// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes4.js\";\nimport routes1 from \"routes.js\";\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\n\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n  let auth_token = localStorage.getItem(\"auth_token\");\n  let user_type = localStorage.getItem(\"user_type\");\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin4/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n\n  const getActiveRoute1 = (routes1) => {\n    let activeRoute1 = \"Default Brand Text\";\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].collapse) {\n        let collapseActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (collapseActiveRoute1 !== activeRoute1) {\n          return collapseActiveRoute1;\n        }\n      } else if (routes1[i].category) {\n        let categoryActiveRoute1 = getActiveRoute1(routes1[i].views);\n        if (categoryActiveRoute1 !== activeRoute1) {\n          return categoryActiveRoute1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          return routes1[i].name;\n        }\n      }\n    }\n    return activeRoute1;\n  };\n\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n\n  const getActiveNavbar1 = (routes1) => {\n    let activeNavbar1 = false;\n    for (let i = 0; i < routes1.length; i++) {\n      if (routes1[i].category) {\n        let categoryActiveNavbar1 = getActiveNavbar1(routes1[i].views);\n        if (categoryActiveNavbar1 !== activeNavbar1) {\n          return categoryActiveNavbar1;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes1[i].layout + routes1[i].path) !==\n          -1\n        ) {\n          if (routes1[i].secondaryNavbar) {\n            return routes1[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar1;\n  };\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin4\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getRoutes1 = (routes1) => {\n    return routes1.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes1(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes1(prop.views);\n      }\n      if (prop.layout === \"/admin4\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra Color Mode\n\n  if (auth_token != -1 && user_type == \"admin\") {\n    return (\n      <ChakraProvider theme={theme} resetCss={false}>\n        <Sidebar\n          routes={routes}\n          logoText={\"LICET Admin Portal\"}\n          display=\"none\"\n          sidebarVariant={sidebarVariant}\n          {...rest}\n        />\n        <MainPanel\n          ref={mainPanel}\n          w={{\n            base: \"100%\",\n            xl: \"calc(100% - 275px)\",\n          }}\n        >\n          <Portal>\n            <AdminNavbar\n              onOpen={onOpen}\n              logoText={\"LICET Portal\"}\n              brandText={getActiveRoute(routes)}\n              secondary={getActiveNavbar(routes)}\n              rtlActive={false}\n              fixed={fixed}\n              {...rest}\n            />\n          </Portal>\n          {getRoute() ? (\n            <PanelContent>\n              <PanelContainer>\n                <Switch>\n                  {getRoutes(routes)}\n                  {getRoutes1(routes1)}\n                  <Redirect from=\"/Admin\" to=\"/Admin/dashboard\" />\n                </Switch>\n              </PanelContainer>\n            </PanelContent>\n          ) : null}\n\n          <Configurator\n            secondary={getActiveNavbar(routes)}\n            isOpen={isOpen}\n            onClose={onClose}\n            isChecked={fixed}\n            onSwitch={(value) => {\n              setFixed(value);\n            }}\n            onOpaque={() => setSidebarVariant(\"opaque\")}\n            onTransparent={() => setSidebarVariant(\"transparent\")}\n          />\n        </MainPanel>\n      </ChakraProvider>\n    );\n  } else {\n    localStorage.setItem(\"auth_token\", -1);\n    return <Redirect to=\"/auth/SignIn\" />;\n  }\n}\n"],"sourceRoot":""}